// ************************************************************************* //
// **                                                                     ** //
// ** File       : CrystalReport.pkg                                      ** //
// **                                                                     ** //
// ** Author     : Ulbe Stellema                                          ** //
// **            : Data Access Nederland                                  ** //
// **            : 17 october 1997                                        ** //
// **                                                                     ** //
// ** Purpose    : This package contains the support for WinQL 4.5        ** //
// **                                                                     ** //
// ** 17-10-1997 : Header created                                         ** //
// **                                                                     ** //
// ** 11-11-1997 : HandlePossibleError now uses the ErrorCode function    ** //
// **              to determine if there is an error, instead of          ** //
// **              ErrorText.                                             ** //
// **                                                                     ** //
// ** 26-02-1998 : Added support for ReportOutput... objects.             ** //
// **                                                                     ** //
// ** 27-02-1998 : Added ExportWindowToDisk and ExportWindowToMail        ** //
// **              procedures.                                            ** //
// **                                                                     ** //
// ** 27-02-1998 : Added error trapping support.                          ** //
// **                                                                     ** //
// ** 03-07-1998 : The WinQLSelectFont and WinQLSelectPrinter objects     ** //
// **              are now child objects of the WinQLReport class.        ** //
// **              Furthermore the WinQLSelectPrinter object is set to    ** //
// **              modal by default.                                      ** //
// **                                                                     ** //
// ** 04-08-1998 : Defect 11534, "Cancel" after SelectAndSetPrinter ->    ** //
// **              report still prints.                                   ** //
// **                                                                     ** //
// ** Added a function SelectAndSetPrinter to return the users selection. ** //
// ** Added a function SelectAndSetFont to return the users selection.    ** //
// **                                                                     ** //
// ** 19-04-1999 : All short functions now return (low(...)), this fixes  ** //
// **              problems with Crystal 7.                               ** //
// **                                                                     ** //
// ** 28-04-1999 : Package and class changed to respect Crystal Reports   ** //
// **              not WinQL.                                             ** //
// **                                                                     ** //
// **  VDF8 changes                                                       ** //
// ** 10/23/2001 JJT/SWB - Added Application object support, removed      ** //
// **                      ghoWorkspace support. removed Local keyword    ** //
// ************************************************************************* //
Use LanguageText.pkg
Use WINDOWS.PKG
Use DLL.PKG

Use GLOBMEM.PKG  // Global memory object functions
Use PRNT_DLG.PKG // Print common dialog
Use FONT_DLG.PKG // Font common dialog
Use PTRMODES.PKG // Printer modes
Use GlobalFunctionsProcedures.pkg

Register_function ReadString string sSubKey string sName string sDefault returns string

Enumeration_List
  Define WQL_PRINT_TO_WINDOW
  Define WQL_PRINT_TO_PRINTER
  Define WQL_PRINT_TO_FILE
  Define WQL_PRINT_TO_UNDEFINED
  Define WQL_PRINT_TO_MAPI
End_Enumeration_List

Define CRW_PRINT_TO_WINDOW    for WQL_PRINT_TO_WINDOW
Define CRW_PRINT_TO_PRINTER   for WQL_PRINT_TO_PRINTER
Define CRW_PRINT_TO_FILE      for WQL_PRINT_TO_FILE
Define CRW_PRINT_TO_UNDEFINED for WQL_PRINT_TO_UNDEFINED
Define CRW_PRINT_TO_MAPI      for WQL_PRINT_TO_MAPI

Register_Function CurrentDataPath Returns String
Register_Function CanCloseEngine Returns Integer

// This integer holds the number of WinQLReport objects initialized
Integer WinQL_Report_Initialized
Move 0 To WinQL_Report_Initialized

Register_Procedure Set WinQLReport_Id Integer iObject
Register_Function WinQLReport_Id Returns Integer
Register_Procedure ShowReport

Register_Function phoWorkspace Returns Handle
Register_Function psWorkspaceName Returns String
Register_Function psDataPath Returns String




Object WinQLSelectFont Is A FontDialog
End_Object // WinQLSelectFont

Object WinQLSelectPrinter Is A PrintDialog
End_Object // WinQLSelectPrinter

// ************************************************************************** //
// **                                                                      ** //
// ** Constant definitions                                                 ** //
// **                                                                      ** //
// ************************************************************************** //

// 'Old' CW_DEFAULT constant
#REPLACE CW_DEFAULT16 |CI$8000

// PEGetVersion constants
#REPLACE PE_GV_DLL    100 // Returns the version of the DLL.
#REPLACE PE_GV_ENGINE 200 // Returns the version of the print engine.

// PEGetJobStatus constants
#REPLACE PE_JOBNOTSTARTED 1
#REPLACE PE_JOBINPROGRESS 2
#REPLACE PE_JOBCOMPLETED  3
#REPLACE PE_JOBFAILED     4
#REPLACE PE_JOBCANCELLED  5

// PEGetNthSortField constants
#REPLACE PE_SF_DESCENDING 0
#REPLACE PE_SF_ASCENDING  1

// PEGetGroupCondition constants
#REPLACE PE_GC_ANYCHANGE    0
#REPLACE PE_GC_DAILY        0
#REPLACE PE_GC_WEEKLY       1
#REPLACE PE_GC_BIWEEKLY     2
#REPLACE PE_GC_SEMIMONTHLY  3
#REPLACE PE_GC_MONTHLY      4
#REPLACE PE_GC_QUARTERLY    5
#REPLACE PE_GC_SEMIANNUALLY 6
#REPLACE PE_GC_ANNUALLY     7
#REPLACE PE_GC_TOYES        1
#REPLACE PE_GC_TONO         2
#REPLACE PE_GC_EVERYYES     3
#REPLACE PE_GC_EVERYNO      4
#REPLACE PE_GC_NEXTISYES    5
#REPLACE PE_GC_NEXTISNO     6

// PEZoomPreviewWindow constants
#REPLACE PE_ZOOM_FULL_SIZE           0 // Full Page
#REPLACE PE_ZOOM_SIZE_FIT_ONE_SIDE   1 // Fit One Side
#REPLACE PE_ZOOM_SIZE_FIT_BOTH_SIDES 2 // Fit Both Sides

// PEOutputToFile contants
#REPLACE PE_FT_RECORD        0
#REPLACE PE_FT_TABSEPARATED  1
#REPLACE PE_FT_TEXT          2
#REPLACE PE_FT_DIF           3
#REPLACE PE_FT_CSV           4
#REPLACE PE_FT_CHARSEPARATED 5
#REPLACE PE_FT_TABFORMATTED  6

// PEPrintOptions constants
#REPLACE PE_UNCOLLATED       0 // Prints multiple copies of a multiple page report uncollated (Page order = 1,1,1, 2,2,2, 3,3,3, etc.)
#REPLACE PE_COLLATED         1 // Prints multiple copies of a multiple page report collated (Page order = 1,2,3 ,... 1,2,3 ,... etc.)
#REPLACE PE_DEFAULTCOLLATION 2 // Prints multiple copies of a multiple page report using the collation settings as specified in the report.

// PESetSectionFormat constants
#REPLACE PE_ALLSECTIONS           0 // Sets the value of all sections to the value specified
#REPLACE PE_TITLESECTION       1000 // Sets the value of the Title section to the value specified
#REPLACE PE_HEADERSECTION      2000 // Sets the value of the Page Header section to the value specified.
#REPLACE PE_GROUPHEADER        3000 // * Sets the value of the Group Header section to the value specified.
#REPLACE PE_DETAILSSECTION     4000 // Sets the value of the Details section to the value specified.
#REPLACE PE_GROUPFOOTER        5000 // * Sets the value of the Group Footer section to the value specified.
#REPLACE PE_GRANDTOTALSECTION  6000 // Sets the value of the Grand Total section to the value specified.
#REPLACE PE_FOOTERSECTION      7000 // Sets the value of the Page Footer section to the value specified.
#REPLACE PE_SUMMARYSECTION     8000 // Sets the value of the Summary section to the value specified.

// PESetMargins constants
#REPLACE PE_SM_DEFAULT |CI$8000

// PESetLineHeight constants
#REPLACE PE_ALLLINES  -1

// PETabelType constants
#REPLACE PE_DT_STANDARD 1
#REPLACE PE_DT_SQL      2

// PEGetGraphType constants
#REPLACE PE_SIDE_BY_SIDE_BAR_GRAPH             0    // Side By Side bar graph
#REPLACE PE_STACKED_BAR_GRAPH                  2    // Stacked bar graph
#REPLACE PE_PERCENT_BAR_GRAPH                  3    // Percent bar graph
#REPLACE PE_FAKED_3D_SIDE_BY_SIDE_BAR_GRAPH    4    // 3D Side By Side bar graph
#REPLACE PE_FAKED_3D_STACKED_BAR_GRAPH         5    // 3D Stacked bar graph
#REPLACE PE_FAKED_3D_PERCENT_BAR_GRAPH         6    // 3D Percent bar graph
#REPLACE PE_PIE_GRAPH                          40   // Pie graph
#REPLACE PE_MULTIPLE_PIE_GRAPH                 42   // Multiple Pie graph
#REPLACE PE_PROPORTIONAL_MULTI_PIE_GRAPH       43   // Weighted Pie graph
#REPLACE PE_LINE_GRAPH                         80   // Line graph
#REPLACE PE_AREA_GRAPH                         120  // Area graph
#REPLACE PE_THREED_BAR_GRAPH                   160  // 3D bar graph
#REPLACE PE_USER_DEFINED_GRAPH                 500  // User Defined graph type
#REPLACE PE_UNKNOWN_TYPE_GRAPH                 1000 // Unknown graph type

// PEGraphDataInfo constants
#REPLACE PE_GRAPH_ROWS_ONLY           0  // Use only row values in graph.
#REPLACE PE_GRAPH_COLS_ONLY           1  // Use only column values in graph.
#REPLACE PE_GRAPH_MIXED_ROW_COL       2  // Graph by row values, then by column values.
#REPLACE PE_GRAPH_MIXED_COL_ROW       3  // Graph by column values, then by row values.
#REPLACE PE_GRAPH_UNKNOWN_DIRECTION   20 // The direction of the graph is unknown.
#REPLACE PE_GRAPH_DATA_NULL_SELECTION -1

// PESetFont constants
#REPLACE PE_FIELDS |CI$0001 // Sets the default font for all field values in the report section specified.
#REPLACE PE_TEXT   |CI$0002 // Sets the default font for all text in the report section specified.

// PESetFont constants
#REPLACE PE_UNCHANGED -1

// PEExportTo constants
#REPLACE UXFCrystalReportType  0 // WinQL
#REPLACE UXFDIFType            0 // Data Interchange Format
#REPLACE UXFRecordType         0 // Record style (column of values)
#REPLACE UXFRichTextFormatType 0 // Rich Text
#REPLACE UXFCommaSeparatedType 0 // Comma separated
#REPLACE UXFTabSeparatedType   1 // Tab separated
#REPLACE UXFCharSeparatedType  2 // Character separated
#REPLACE UXFTextType           0 // Text (ASCII)
#REPLACE UXFTabbedTextType     1 // Tab separated text
#REPLACE UXFLotusWksType       0 // Lotus 1-2-3 (WKS)
#REPLACE UXFLotusWk1Type       1 // Lotus 1-2-3 (WK1)
#REPLACE UXFLotusWk3Type       2 // Lotus 1-2-3 (WK3)
#REPLACE UXFWordWinType        0 // Word for Windows
#REPLACE UXFXls2Type           0 // Excel 2.1
#REPLACE UXFXls3Type           1 // Excel 3.0
#REPLACE UXFXls4Type           2 // Excel 4.0
#REPLACE UXFXls5Type           3 // Excel 5.0
#REPLACE UXDDiskType           0 // Disk File
#REPLACE UXDMAPIType           0 // E-Mail (MAPI)
// HTML support...
#REPLACE UXFHTML3Type          0 // Draft HTML 3.0 tags
#REPLACE UXFExplorer2Type      1 // Include MS Explorer 2.0 tags
#REPLACE UXFNetscape2Type      2 // Include Netscape 2.0 tags
#REPLACE UXFHTML32ExtType      1 // HTML 3.2 tags + bg color extensions
#REPLACE UXFHTML32StdType      2 // HTML 3.2 tags

// FormatType constants
#REPLACE WQL_CrystalReportType  1
#REPLACE WQL_DIFType            2
#REPLACE WQL_WordWinType        3
#REPLACE WQL_RecordType         7
#REPLACE WQL_RichTextFormatType 8
#REPLACE WQL_CommaSeparatedType 9
#REPLACE WQL_TabSeparatedType   10
#REPLACE WQL_CharSeparatedType  11
#REPLACE WQL_TextType           12
#REPLACE WQL_TabbedTextType     13
#REPLACE WQL_LotusWksType       14
#REPLACE WQL_LotusWk1Type       15
#REPLACE WQL_LotusWk3Type       16
#REPLACE WQL_Xls2Type           17
#REPLACE WQL_Xls3Type           18
#REPLACE WQL_Xls4Type           19
#REPLACE WQL_Xls5Type           20
// HTML support...
#REPLACE WQL_HTML3Type          21
#REPLACE WQL_Explorer2Type      22
#REPLACE WQL_Netscape2Type      23
#Replace UXFPDFType 0 // PDF
// FormatType constants
#Replace WQL_PDFTYPE 100

Define CRW_CrystalReportType  for WQL_CrystalReportType
Define CRW_DIFType            for WQL_DIFType
Define CRW_WordWinType        for WQL_WordWinType
Define CRW_RecordType         for WQL_RecordType
Define CRW_RichTextFormatType for WQL_RichTextFormatType
Define CRW_CommaSeparatedType for WQL_CommaSeparatedType
Define CRW_TabSeparatedType   for WQL_TabSeparatedType
Define CRW_CharSeparatedType  for WQL_CharSeparatedType
Define CRW_TextType           for WQL_TextType
Define CRW_TabbedTextType     for WQL_TabbedTextType
Define CRW_LotusWksType       for WQL_LotusWksType
Define CRW_LotusWk1Type       for WQL_LotusWk1Type
Define CRW_LotusWk3Type       for WQL_LotusWk3Type
Define CRW_Xls2Type           for WQL_Xls2Type
Define CRW_Xls3Type           for WQL_Xls3Type
Define CRW_Xls4Type           for WQL_Xls4Type
Define CRW_Xls5Type           for WQL_Xls5Type
Define CRW_HTML3Type          for WQL_HTML3Type
Define CRW_Explorer2Type      for WQL_Explorer2Type
Define CRW_Netscape2Type      for WQL_Netscape2Type
Define CRW_PDFTYPE 	      For WQL_PDFTYPE
// ************************************************************************** //
// **                                                                      ** //
// ** Structure definitions                                                ** //
// **                                                                      ** //
// ************************************************************************** //

Type _DRIVER_INFO_2
  Field _DRIVER_INFO_2.cVersion As dWord       // 0
  Field _DRIVER_INFO_2.pName As Pointer        // 4
  Field _DRIVER_INFO_2.pEnvironment As Pointer // 8
  Field _DRIVER_INFO_2.pDriverPath As Pointer  // 12
  Field _DRIVER_INFO_2.pDataFile As Pointer    // 16
  Field _DRIVER_INFO_2.pConfigFile As Pointer  // 20
  Field _DRIVER_INFO_2.pFiller As Char 1024  // 20
End_Type // _DRIVER_INFO_2

Type PEInteger
  Field PEInteger.integer As Word
End_type // PEInteger

Type PETextStructure
  Field PETextStructure.textHandle As dWord
  Field PETextStructure.textLength As Integer
End_Type // PETextStructure

// Used by PEOutputToFile
Type PECharSepFileOptions
  Field PECharSepFileOptions.StructSize As Word
  Field PECharSepFileOptions.UseReportNumberFmt As Word // bool
  Field PECharSepFileOptions.UseReportDateFormat As Word // bool
  Field PECharSepFileOptions.StringDelimiter As Char 1
  Field PECharSepFileOptions.FieldDelimiter As Char 17
End_Type // PECharSepFileOptions

// Used by PEGetExportOptions and PEExportTo
Type PEExportOptions
  Field PEExportOptions.StructSize As Word
  Field PEExportOptions.formatDLLName As Char 64
  Field PEExportOptions.formatType As dWord
  Field PEExportOptions.formatOptions As Pointer
  Field PEExportOptions.destinationDLLName As Char 64
  Field PEExportOptions.destinationType As dWord
  Field PEExportOptions.destinationOptions As Pointer
  Field PEExportOptions.nFormatOptionsBytes As Word
  Field PEExportOptions.nDestinationOptionsBytes As Word
End_Type // PEExportOptions

// Used by PEGetJobStatus
// Some more weird stuff:
// If you set the StructSize member of this structure to the actuall size of the
// structure, only the first four members are returned by CRPE. Adding 4 bytes to
// the StructSize member will correct this problem.
Type PEJobInfo
  Field PEJobInfo.StructSize As Word
  Field PEJobInfo.NumRecordsRead As dWord
  Field PEJobInfo.NumRecordsSelected As dWord
  Field PEJobInfo.NumRecordsPrinted As dWord
  Field PEJobInfo.DisplayPageN As Word
  Field PEJobInfo.LatestPageN As Word
  Field PEJobInfo.StartPageN As Word
  Field PEJobInfo.printEnded As Word
End_Type // PEJobInfo

// Used by PEGetNthTableLogOnInfo, PESetNthTableLogOnInfo, PELogOnServer, and PELogOffServer
Type PELogOnInfo
  Field PELogOnInfo.StructSize As Word
  Field PELogOnInfo.ServerName As Char 128
  Field PELogOnInfo.DataBaseName As Char 128
  Field PELogOnInfo.UserID As Char 128
  Field PELogOnInfo.Password As Char 128
End_Type // PELogOnInfo

// Used by PEOuputToFile
Type PEPrintFileOptions
  Field PEPrintFileOptions.StructSize As Word
  Field PEPrintFileOptions.UseReportNumberFmt As Word // bool
  Field PEPrintFileOptions.UseReportDateFormat As Word // bool
End_Type // PEPrintFileOptions

// Used by PESetPrintOptions structure
Type PEPrintOptions
  Field PEPrintOptions.StructSize As Word
  Field PEPrintOptions.startPageN As Word // unsigned short
  Field PEPrintOptions.stopPageN As Word // unsigned short
  Field PEPrintOptions.nReportCopies As Word // unsigned short
  Field PEPrintOptions.collation As Word // unsigned short
End_Type // PEPrintOptions

// Used by PESetSectionFormat
Type PESectionOptions
  Field PESectionOptions.StructSize As Word
  Field PESectionOptions.visible As Word // short
  Field PESectionOptions.NewPageBefore As Word // short
  Field PESectionOptions.NewPageAfter As Word // short
  Field PESectionOptions.KeepTogether As Word // short
  Field PESectionOptions.SuppressBlankLines As Word // short
  Field PESectionOptions.ResetPageNAfter As Word // short
  Field PESectionOptions.printAtBottomOfPage As Word // short
End_Type // PESectionOptions

// Used by PEGetNthTableSessionInfo and PESetNthTableSessionInfo
Type PESessionInfo
  Field PESessionInfo.StructSize As Word
  Field PESessionInfo.UserID As Char 128
  Field PESessionInfo.Password As Char 128
  Field PESessionInfo.SessionHandle As dWord
End_Type // PESessionInfo

// Used by PEGetNthTableLocation and PESetNthTableLocation
Type PETableLocation
  Field PETableLocation.StructSize As Word
  Field PETableLocation.Location As Char 256
End_Type // PETableLocation

// Used by PEGetNthTableType
Type PETableType
  Field PETableType.StructSize As Word
  Field PETableType.DLLName As Char 64
  Field PETableType.DescriptiveName As Char 256
  Field PETableType.DBType As Word
End_Type // PETableType

// Used by PEExportOptions structure
Type UXDDiskOptions
  Field UXDDiskOptions.StructSize As Word
  Field UXDDiskOptions.fileName As Char 256
End_Type // UXDDiskOptions

// Used by PEExportOptions structure
Type UXDMAPIOptions
  Field UXDMAPIOptions.StructSize As Word
  Field UXDMAPIOptions.toList As Pointer
  Field UXDMAPIOptions.ccList As Pointer
  Field UXDMAPIOptions.subject As Pointer
  Field UXDMAPIOptions.message As Pointer
  Field UXDMAPIOptions.nRecipients As Word
  Field UXDMAPIOptions.recipients As Pointer
End_Type // UXDMAPIOptions

// Used by PEExportOptions structure
Type UXDVIMOptions
  Field UXDVIMOptions.StructSize As Word
  Field UXDVIMOptions.toList As Pointer
  Field UXDVIMOptions.ccList As Pointer
  Field UXDVIMOptions.bccList As Pointer
  Field UXDVIMOptions.subject As Pointer
  Field UXDVIMOptions.message As Pointer
End_Type // UXDVIMOptions

// HTML support...
Type UXFHTML3Options
  Field UXFHTML3Options.StructSize As Word
  Field UXFHTML3Options.fileName As Pointer
End_Type // UXFHTML3Options

// Used by PEExportOptions structure
Type UXFCharSeparatedOptions
  Field UXFCharSeparatedOptions.StructSize As Word
  Field UXFCharSeparatedOptions.useReportNumberFormat As Word // bool
  Field UXFCharSeparatedOptions.useReportDateFormat As Word // bool
  Field UXFCharSeparatedOptions.stringDelimiter As Char 1
  Field UXFCharSeparatedOptions.fieldDelimiter As Char 17
End_Type // UXFCharSeparatedOptions

// Used by PEExportOptions structure
Type UXFCommaTabSeparatedOptions
  Field UXFCommaTabSeparatedOptions.StructSize As Word
  Field UXFCommaTabSeparatedOptions.useReportNumberFormat As Word // bool
  Field UXFCommaTabSeparatedOptions.useReportDateFormat As Word // bool
End_Type // UXFCommaTabSeparatedOptions

// Used by PEExportOptions structure
Type UXFDIFOptions
  Field UXFDIFOptions.StructSize As Word
  Field UXFDIFOptions.useReportNumberFormat As Word // bool
  Field UXFDIFOptions.useReportDateFormat As Word // bool
End_Type // UXFDIFOptions

// Used by PEExportOptions structure
Type UXFRecordStyleOptions
  Field UXFRecordStyleOptions.StructSize As Word
  Field UXFRecordStyleOptions.useReportNumberFormat As Word // bool
  Field UXFRecordStyleOptions.useReportDateFormat As Word // bool
End_Type // UXFRecordStyleOptions

// Used by PEGetGraphData and PESetGraphData
Type PEGraphDataInfo
  Field PEGraphDataInfo.StructSize As Word
  Field PEGraphDataInfo.rowGroupN As Word // short
  Field PEGraphDataInfo.colGroupN As Word // short
  Field PEGraphDataInfo.summarizedFieldN As Word // short
  Field PEGraphDataInfo.graphDirection As Word // short
End_Type // PEGraphDataInfo

// Used by PEGetGraphOptions and PESetGraphOptions
Type PEGraphOptions
  Field PEGraphOptions.StructSize As Word
  Field PEGraphOptions.graphMaxValue As Char 8 // double
  Field PEGraphOptions.graphMinValue As Char 8 // double
  Field PEGraphOptions.showDataValue As dWord // bool
  Field PEGraphOptions.showGridLine As dWord // bool
  Field PEGraphOptions.verticalBars As dWord // bool
  Field PEGraphOptions.showLegend As dWord // bool
  Field PEGraphOptions.fontFaceName As Char 128
End_Type // PEGraphOptions

// Used by PEGetGraphText and PESetGraphText
Type PEGraphTextInfo
  Field PEGraphTextInfo.StructSize As Word
  Field PEGraphTextInfo.graphTitle As Char 128 // PE_GRAPH_TEXT_LEN
  Field PEGraphTextInfo.graphSubTitle As Char 128 // PE_GRAPH_TEXT_LEN
  Field PEGraphTextInfo.graphFootNote As Char 128 // PE_GRAPH_TEXT_LEN
  Field PEGraphTextInfo.graphGroupsTitle As Char 128 // PE_GRAPH_TEXT_LEN
  Field PEGraphTextInfo.graphSeriesTitle As Char 128 // PE_GRAPH_TEXT_LEN
  Field PEGraphTextInfo.graphXAxisTitle As Char 128 // PE_GRAPH_TEXT_LEN
  Field PEGraphTextInfo.graphYAxisTitle As Char 128 // PE_GRAPH_TEXT_LEN
  Field PEGraphTextInfo.graphZAxisTitle As Char 128 // PE_GRAPH_TEXT_LEN
End_Type // PEGraphTextInfo


// ************************************************************************** //
// ** Printer Functions                                                    ** //
// ************************************************************************** //

External_Function OpenPrinter "OpenPrinterA" WINSPOOL.DRV ;
  Pointer pPrinterName ;
  Pointer phPrinter ;
  Pointer pDefault ;
  Returns Integer

External_Function GetPrinterDriver "GetPrinterDriverA" WINSPOOL.DRV ;
  Handle hPrinter ;
  Pointer pEnvironment ;
  dWord dLevel ;
  Pointer pDriverInfo ;
  dWord cbBuf ;
  Pointer pcbNeeded ;
  Returns Integer

External_Function ClosePrinter "ClosePrinter" WINSPOOL.DRV ;
  Handle hPrinter ;
  Returns Integer

// ************************************************************************** //
// ** Engine Management Functions                                          ** //
// ************************************************************************** //

External_Function32 PEOpenEngine "PEOpenEngine" CRPE32.DLL ;
  Returns Integer

External_Function32 PECloseEngine "PECloseEngine" CRPE32.DLL ;
  Returns Integer

External_Function32 PECanCloseEngine "PECanCloseEngine" CRPE32.DLL ;
  Returns Integer

External_Function32 PEGetVersion "PEGetVersion" CRPE32.DLL ;
  Integer versionRequested Returns Integer

// ************************************************************************** //
// ** Data Management Functions                                            ** //
// ************************************************************************** //

External_Function32 PEHasSavedData "PEHasSavedData" CRPE32.DLL ;
  Integer printJob Pointer hasSavedData Returns Integer

External_Function32 PEDiscardSavedData "PEDiscardSavedData" CRPE32.DLL ;
  Integer printJob Returns Integer

// ************************************************************************** //
// ** Print Job Management Functions                                       ** //
// ************************************************************************** //

External_Function32 PEPrintReport "PEPrintReport" CRPE32.DLL ;
  String reportName Integer toPrnt Integer toW String WTitle ;
  Integer left Integer top Integer WWidth Integer WHeight ;
  Integer WStyle Handle prntW Returns Integer

External_Function32 PEOpenPrintJob "PEOpenPrintJob" CRPE32.DLL ;
  String reportFilePath Returns Integer

External_Function32 PEClosePrintJob "PEClosePrintJob" CRPE32.DLL ;
  Integer printJob Returns Integer

External_Function32 PEStartPrintJob "PEStartPrintJob" CRPE32.DLL ;
  Integer printJob Integer waitUntilDone Returns Integer

External_Function32 PEGetJobStatus "PEGetJobStatus" CRPE32.DLL ;
  Integer printJob Pointer jobInfo Returns Integer

External_Function32 PECancelPrintJob "PECancelPrintJob" CRPE32.DLL ;
  Integer printJob Returns Integer

External_Function32 PEIsPrintJobFinished "PEIsPrintJobFinished" CRPE32.DLL ;
  Integer printJob Returns Integer

// ************************************************************************** //
// ** Print Window Management Functions                                    ** //
// ************************************************************************** //

External_Function32 PEGetWindowHandle "PEGetWindowHandle" CRPE32.DLL ;
  Integer printJob Returns Handle

External_Function32 PEPrintWindow "PEPrintWindow" CRPE32.DLL ;
  Integer printJob Integer waitUntilDone Returns Integer

External_Function32 PECloseWindow "PECloseWindow" CRPE32.DLL ;
  Integer printJob Returns Integer

// ************************************************************************** //
// ** Print Destination Functions                                          ** //
// ************************************************************************** //

External_Function32 PESelectPrinter "PESelectPrinter" CRPE32.DLL ;
  Integer printJob String driverName String printerName ;
  String portName Pointer mode Returns Integer

External_Function32 PEGetSelectedPrinter "PEGetSelectedPrinter" CRPE32.DLL ;
  Integer printJob Pointer drvHndl Pointer drvLen ;
  Pointer prntHndl Pointer prntLen Pointer portHndl ;
  Pointer portLen Pointer mode Returns Integer

External_Function32 PEOutputToPrinter "PEOutputToPrinter" CRPE32.DLL ;
  Integer printJob Integer nCopies Returns Integer

External_Function32 PEOutputToWindow "PEOutputToWindow" CRPE32.DLL ;
  Integer printJob String title Integer left Integer top Integer width ;
  Integer height Integer style Handle parentWindow Returns Integer

External_Function32 PEGetExportOptions "PEGetExportOptions" CRPE32.DLL ;
  Integer printJob Pointer options Returns Integer

External_Function32 PEExportTo "PEExportTo" CRPE32.DLL ;
  Integer printJob Pointer options Returns Integer

External_Function32 PEExportPrintWindow "PEExportPrintWindow" CRPE32.DLL ;
  Integer printJob Integer toMail Integer waitUntilDone Returns Integer

External_Function32 PEOutputToFile "PEOutputToFile" CRPE32.DLL ;
  Integer printJob String outputFilePath Integer type Pointer options ;
  Returns Integer

// ************************************************************************** //
// ** Sorting Functions                                                    ** //
// ************************************************************************** //

External_Function32 PEGetNSortFields "PEGetNSortFields" CRPE32.DLL ;
  Integer printJob Returns Integer

External_Function32 PEGetNthSortField "PEGetNthSortField" CRPE32.DLL ;
  Integer printJob Integer sortFieldN Pointer nameHandle Pointer nameLength ;
  Pointer direction Returns Integer

External_Function32 PESetNthSortField "PESetNthSortField" CRPE32.DLL ;
  Integer printJob Integer sortFieldN String name Integer direction ;
  Returns Integer

External_Function32 PEDeleteNthSortField "PEDeleteNthSortField" CRPE32.DLL ;
  Integer printJob Integer sortFieldN Returns Integer

External_Function32 PEGetNGroupSortFields "PEGetNGroupSortFields" CRPE32.DLL ;
  Integer printJob Returns Integer

External_Function32 PEGetNthGroupSortField "PEGetNthGroupSortField" CRPE32.DLL ;
  Integer printJob Integer sortFieldN Pointer nameHandle Pointer nameLength ;
  Pointer direction Returns Integer

External_Function32 PESetNthGroupSortField "PESetNthGroupSortField" CRPE32.DLL ;
  Integer printJob Integer sortFieldN String name Integer direction ;
  Returns Integer

External_Function32 PEDeleteNthGroupSortField "PEDeleteNthGroupSortField" CRPE32.DLL ;
  Integer printJob Integer sortFieldN Returns Integer

// ************************************************************************** //
// ** Formula Functions                                                    ** //
// ************************************************************************** //

External_Function32 PEGetFormula "PEGetFormula" CRPE32.DLL ;
  Integer printJob String FormulaName Pointer textHandle ;
  Pointer textLength Returns Integer

External_Function32 PESetFormula "PESetFormula" CRPE32.DLL ;
  Integer printJob String formulaName String formulaString ;
  Returns Integer

External_Function32 PECheckFormula "PECheckFormula" CRPE32.DLL ;
  Integer printJob String formulaName Returns Integer

External_Function32 PEGetNFormulas "PEGetNFormulas" CRPE32.DLL ;
  Integer printJob Returns Integer

External_Function32 PEGetNthFormula "PEGetNthFormula" CRPE32.DLL ;
  Integer printJob Integer formulaN Pointer nameHandle ;
  Pointer nameLength Pointer textHandle Pointer textLength ;
  Returns Integer

// ************************************************************************** //
// ** Selection Formula Functions                                          ** //
// ************************************************************************** //

External_Function32 PEGetSelectionFormula "PEGetSelectionFormula" CRPE32.DLL ;
  Integer printJob Pointer textHandle Pointer textLength ;
  Returns Integer

External_Function32 PESetSelectionFormula "PESetSelectionFormula" CRPE32.DLL ;
  Integer printJob String formulaString Returns Integer

External_Function32 PECheckSelectionFormula "PECheckSelectionFormula" CRPE32.DLL ;
  Integer printJob Returns Integer

External_Function32 PEGetGroupSelectionFormula "PEGetGroupSelectionFormula" CRPE32.DLL ;
  Integer printJob Pointer textHandle Pointer textLength ;
  Returns Integer

External_Function32 PESetGroupSelectionFormula "PESetGroupSelectionFormula" CRPE32.DLL ;
  Integer printJob String formulaString Returns Integer

External_Function32 PECheckGroupSelectionFormula "PECheckGroupSelectionFormula" CRPE32.DLL ;
  Integer printJob Returns Integer

// ************************************************************************** //
// ** Server Management Functions                                          ** //
// ************************************************************************** //

External_Function32 PELogOnServer "PELogOnServer" CRPE32.DLL ;
  String dllName Pointer logOnInfo Returns Integer

External_Function32 PELogOffServer "PELogOffServer" CRPE32.DLL ;
  String dllName Pointer logOnInfo Returns Integer

External_Function32 PEGetSQLQuery "PEGetSQLQuery" CRPE32.DLL ;
  Integer printJob Pointer textHandle Pointer textLength ;
  Returns Integer

External_Function32 PESetSQLQuery "PESetSQLQuery" CRPE32.DLL ;
  Integer printJob String queryString Returns Integer

External_Function32 PELogOnServerWithPrivateInfo "PELogOnServerWithPrivateInfo" CRPE32.DLL ;
  String dllName Pointer privateInfo Returns Integer

// ************************************************************************** //
// ** Print Format Management Functions                                    ** //
// ************************************************************************** //

External_Function32 PEGetReportTitle "PEGetReportTitle" CRPE32.DLL ;
  Integer printJob Pointer titleHandle Pointer titleLength ;
  Returns Integer

External_Function32 PESetReportTitle "PESetReportTitle" CRPE32.DLL ;
  Integer printJob String title Returns Integer

External_Function32 PEGetPrintOptions "PEGetPrintOptions" CRPE32.DLL ;
  Integer printJob Pointer options Returns Integer

External_Function32 PESetPrintOptions "PESetPrintOptions" CRPE32.DLL ;
  Integer printJob Pointer options Returns Integer

External_Function32 PEGetSectionFormat "PEGetSectionFormat" CRPE32.DLL ;
  Integer printJob Integer sectionCode Pointer options ;
  Returns Integer

External_Function32 PESetSectionFormat "PESetSectionFormat" CRPE32.DLL ;
  Integer printJob Integer sectionCode Pointer options ;
  Returns Integer

External_Function32 PEGetMargins "PEGetMargins" CRPE32.DLL ;
  Integer printJob Pointer left Pointer right ;
  Pointer top Pointer bottom Returns Integer

External_Function32 PESetMargins "PESetMargins" CRPE32.DLL ;
  Integer printJob Integer left Integer right ;
  Integer top Integer bottom Returns Integer

External_Function32 PEGetMinimumSectionHeight "PEGetMinimumSectionHeight" CRPE32.DLL ;
  Integer printJob Integer sectionCode Pointer minimumHeight ;
  Returns Integer

External_Function32 PESetMinimumSectionHeight "PESetMinimumSectionHeight" CRPE32.DLL ;
  Integer printJob Integer sectionCode Integer minimumHeight ;
  Returns Integer

External_Function32 PEGetLineHeight "PEGetLineHeight" CRPE32.DLL ;
  Integer printJob Integer sectionCode Integer lineN Pointer height ;
  Pointer ascent Returns Integer

External_Function32 PESetLineHeight "PESetLineHeight" CRPE32.DLL ;
  Integer printJob Integer sectionCode Integer lineN Integer height ;
  Integer ascent Returns Integer

External_Function32 PEGetNLinesInSection "PEGetNLinesInSection" CRPE32.DLL ;
  Integer printJob Integer sectionCode Returns Integer

External_Function32 PESetFont "PESetFont" CRPE32.DLL ;
  Integer pJob Integer code Integer scp String face ;
  Integer fam Integer pitch Integer cSet Integer size ;
  Integer ital Integer undl Integer stck Integer wght ;
  Returns Integer

External_Function32 PEGetNDetailCopies "PEGetNDetailCopies" CRPE32.DLL ;
  Integer printJob Pointer nDetailCopies Returns Integer

External_Function32 PESetNDetailCopies "PESetNDetailCopies" CRPE32.DLL ;
  Integer printJob Integer nDetailCopies Returns Integer

External_Function32 PEGetPrintDate "PEGetPrintDate" CRPE32.DLL ;
  Integer printJob Pointer year Pointer month Pointer day ;
  Returns Integer

External_Function32 PESetPrintDate "PESetPrintDate" CRPE32.DLL ;
  Integer printJob Integer year Integer month Integer day ;
  Returns Integer

// ************************************************************************** //
// ** Window Customization Functions                                       ** //
// ************************************************************************** //

External_Function32 PEShowNextPage "PEShowNextPage" CRPE32.DLL ;
  Integer printJob Returns Integer

External_Function32 PEShowFirstPage "PEShowFirstPage" CRPE32.DLL ;
  Integer printJob Returns Integer

External_Function32 PEShowPreviousPage "PEShowPreviousPage" CRPE32.DLL ;
  Integer printJob Returns Integer

External_Function32 PEShowLastPage "PEShowLastPage" CRPE32.DLL ;
  Integer printJob Returns Integer

External_Function32 PEShowPrintControls "PEShowPrintControls" CRPE32.DLL ;
  Integer printJob Integer showPrintControls Returns Integer

External_Function32 PEPrintControlsShowing "PEPrintControlsShowing" CRPE32.DLL ;
  Integer printJob Pointer controlsShowing Returns Integer

External_Function32 PEZoomPreviewWindow "PEZoomPreviewWindow" CRPE32.DLL ;
  Integer printJob Integer level Returns Integer

External_Function32 PENextPrintWindowMagnification "PENextPrintWindowMagnification" CRPE32.DLL ;
  Integer printJob Returns Integer

// ************************************************************************** //
// ** Group Management Functions                                           ** //
// ************************************************************************** //

External_Function32 PEGetNGroups "PEGetNGroups" CRPE32.DLL ;
  Integer printJob Returns Integer

External_Function32 PEGetGroupCondition "PEGetGroupCondition" CRPE32.DLL ;
  Integer printJob Integer sectionCode Pointer conditionFieldHandle ;
  Pointer conditionFieldLength Pointer condition ;
  Pointer sortDir Returns Integer

External_Function32 PESetGroupCondition "PESetGroupCondition" CRPE32.DLL ;
  Integer printJob Integer sectionCode String conditionField Integer condition ;
  Integer sortDirection Returns Integer

// ************************************************************************** //
// ** Table Management Functions                                           ** //
// ************************************************************************** //

External_Function32 PEGetNTables "PEGetNTables" CRPE32.DLL ;
  Integer printJob Returns Integer

External_Function32 PEGetNthTableType "PEGetNthTableType" CRPE32.DLL ;
  Integer printJob Integer tableN Pointer tableType Returns Integer

External_Function32 PEGetNthTableLogOnInfo "PEGetNthTableLogOnInfo" CRPE32.DLL ;
  Integer printJob Integer tableN Pointer logOnInfo Returns Integer

External_Function32 PESetNthTableLogOnInfo "PESetNthTableLogOnInfo" CRPE32.DLL ;
  Integer printJob Integer tableN Pointer logOnInfo ;
  Integer propagateAcrossTables Returns Integer

External_Function32 PEGetNthTableLocation "PEGetNthTableLocation" CRPE32.DLL ;
  Integer printJob Integer tableN Pointer location Returns Integer

External_Function32 PESetNthTableLocation "PESetNthTableLocation" CRPE32.DLL ;
  Integer printJob Integer tableN Pointer location Returns Integer

External_Function32 PETestNthTableConnectivity "PETestNthTableConnectivity" CRPE32.DLL ;
  Integer printJob Integer tableN Returns Integer

External_Function32 PEGetNthTableSessionInfo "PEGetNthTableSessionInfo" CRPE32.DLL ;
  Integer printJob Integer tableN Pointer sessionInfo Returns Integer

External_Function32 PESetNthTableSessionInfo "PESetNthTableSessionInfo" CRPE32.DLL ;
  Integer printJob Integer tableN Pointer sessionInfo Integer propagateAcrossTables ;
  Returns Integer

// ************************************************************************** //
// ** Graph/Chart Management Functions                                     ** //
// ************************************************************************** //

External_Function32 PEGetGraphData "PEGetGraphData" CRPE32.DLL ;
  Integer printJob Integer sectionCode Integer graphN ;
  Pointer graphDataInfo Returns Integer

External_Function32 PESetGraphData "PESetGraphData" CRPE32.DLL ;
  Integer printJob Integer sectionCode Integer graphN ;
  Pointer graphDataInfo Returns Integer

External_Function32 PEGetGraphOptions "PEGetGraphOptions" CRPE32.DLL ;
  Integer printJob Integer sectionCode Integer graphN ;
  Pointer graphOptions Returns Integer

External_Function32 PESetGraphOptions "PESetGraphOptions" CRPE32.DLL ;
  Integer printJob Integer sectionCode Integer graphN ;
  Pointer graphOptions Returns Integer

External_Function32 PEGetGraphText "PEGetGraphText" CRPE32.DLL ;
  Integer printJob Integer sectionCode Integer graphN ;
  Pointer graphTextInfo Returns Integer

External_Function32 PESetGraphText "PESetGraphText" CRPE32.DLL ;
  Integer printJob Integer sectionCode Integer graphN ;
  Pointer graphTextInfo Returns Integer

External_Function32 PEGetGraphType "PEGetGraphType" CRPE32.DLL ;
  Integer printJob Integer sectionCode Integer graphN ;
  Pointer graphType Returns Integer

External_Function32 PESetGraphType "PESetGraphType" CRPE32.DLL ;
  Integer printJob Integer sectionCode Integer graphN ;
  Integer graphType Returns Integer

// ************************************************************************** //
// ** Stored Procedure Management Functions                                ** //
// ************************************************************************** //

External_Function32 PEGetNParams "PEGetNParams" CRPE32.DLL ;
  Integer printJob Returns Integer

External_Function32 PEGetNthParam "PEGetNthParam" CRPE32.DLL ;
  Integer printJob Integer paramN Pointer textHandle ;
  Pointer textLength Returns Integer

External_Function32 PESetNthParam "PESetNthParam" CRPE32.DLL ;
  Integer printJob Integer paramN String szParamValue ;
  Returns Integer

// ************************************************************************** //
// ** Error Management Functions                                           ** //
// ************************************************************************** //

External_Function32 PEGetErrorCode "PEGetErrorCode" CRPE32.DLL ;
  Integer printJob Returns Integer

External_Function32 PEGetErrorText "PEGetErrorText" CRPE32.DLL ;
  Integer printJob Pointer textHandle Pointer textLength ;
  Returns Integer

// ************************************************************************** //
// ** Miscellaneous Functions                                              ** //
// ************************************************************************** //

External_Function32 PEGetHandleString "PEGetHandleString" CRPE32.DLL ;
  Integer textHandle Pointer buffer Integer bufferLength ;
  Returns Integer

// ************************************************************************** //
// **                                                                      ** //
// ** Class definition                                                     ** //
// **                                                                      ** //
// ************************************************************************** //

// Crystal uses error numbers 500 thru 599 and 999
#REPLACE MIN_CRW_ERROR_NUM 500
#REPLACE MAX_CRW_ERROR_NUM 9999
#REPLACE CRW_IGNORE_NUM 999


Class CrystalReport Is A cObject

  Procedure Construct_Object
    Forward Send Construct_Object

    // Added to support error trapping.
    Object WinQLErrors Is An Array
    End_Object // WinQLErrors

    //Set Focus_Mode to No_Activate
    // Normal Interface property's

    // Added to support preview window and status panel.

    //Doc/ Interface=Private
    Property Integer Private.PreviewWindow_Id 0

    //Doc/ Interface=Private
    Property Integer StatusPanel_Id 0

    //*** BW Changed default value from CRW_PRINT_TO_WINDOW to PRINT_TO_UNDEDFINED
    //Doc/ Interface=Private
    Property Integer Private.Output_Destination PRINT_TO_UNDEFINED

    Property Integer Report_View_Id 0
    Property String Report_Data_Path ""
    Property String Report_Name ""

    // OutputToWindow properties
    Property String WindowTitle ""
    Property Integer WindowLeftCoordinate 0
    Property Integer WindowTopCoordinate 0
    Property Integer WindowWidth 640
    Property Integer WindowHeight 480
    Property Integer WindowStyle 0

    Property Handle ParentWindowHandle 0

    // OutputToPrinter properties
    Property Integer Copies 1

    //Doc/ Interface=Private
    Property Boolean UsesEngine False

    // This property holds the handle to the print job.
    //Doc/ Interface=Private
    Property Integer PrintJob 0

    // This property reflects whether the last engine funtion generated an error.
    Property Boolean FunctionGeneratedError_State False

    // Should saved data be discarded
    Property Boolean DiscardSavedData_State True

    // The following properties are used for exporting reports
    Property Integer ExportFormatType CRW_CrystalReportType
    Property Boolean UseReportNumberFormat_State False
    Property Boolean UseReportDateFormat_State False
    Property String StringDelimiter "'"
    Property String FieldDelimiter ";"
    // ExportToDisk properties
    Property String ExportFileName ""
    // ExportToMAPI properties
    Property String ToList ""
    Property String CCList ""
    Property String SubjectText ""
    Property String MessageText ""
    // HTML support...
    Property String HTMLFileName ""

    // These errors are ignored by default.
    Send IgnoreError 545 // Request canceled by user
    Send IgnoreError 542 // No next page
    Send IgnoreError 543 // No previous page
  End_Procedure // Construct_Object

  // Trapped error support...
  //
  //Doc/ Interface=Private
  Function IsTrapped Integer iError Returns Integer
    Integer iTrapped
    If iError Eq CRW_IGNORE_NUM Function_Return True
    If ((iError Lt MIN_CRW_ERROR_NUM) Or (iError Gt MAX_CRW_ERROR_NUM)) Begin
      Error DFERR_CRYSTAL_REPORT C_$ErrorNumberOutOfRange
      Function_Return 0
    End // If ((iError Lt MIN_CRW_ERROR_NUM) Or (iError Gt MAX_CRW_ERROR_NUM)) Begin
    Get Array_Value Of (WinQLErrors(self)) Item (iError-500) To iTrapped
    Function_Return (Not(iTrapped))
  End_Function // IsTrapped


  //Doc/ Interface=Private
  Procedure IgnoreError Integer iError
    If iError Eq CRW_IGNORE_NUM Procedure_Return // Error CRW_IGNORE_NUM is always ignored...
    If ((iError Lt MIN_CRW_ERROR_NUM) Or (iError Gt MAX_CRW_ERROR_NUM)) Begin
      Error DFERR_CRYSTAL_REPORT C_$ErrorNumberOutOfRange
      Procedure_Return
    End // If ((iError Lt MIN_CRW_ERROR_NUM) Or (iError Gt MAX_CRW_ERROR_NUM)) Begin
    Set Array_Value Of (WinQLErrors(self)) Item (iError-500) To True
  End_Procedure // AddError

  //Doc/ Interface=Private
  Procedure TrapError Integer iError
    If iError Eq CRW_IGNORE_NUM Procedure_Return // Error CRW_IGNORE_NUM is always ignored...
    If ((iError Lt MIN_CRW_ERROR_NUM) Or (iError Gt MAX_CRW_ERROR_NUM)) Begin
      Error DFERR_CRYSTAL_REPORT C_$ErrorNumberOutOfRange
      Procedure_Return
    End // If ((iError Lt MIN_CRW_ERROR_NUM) Or (iError Gt MAX_CRW_ERROR_NUM)) Begin
    Set Array_Value Of (WinQLErrors(self)) Item (iError-500) To False
  End_Procedure // TrapError

  //Doc/ Interface=Private
  Procedure IgnoreAll
    Integer iCounter
    While iCounter Le 100
      Set Array_Value Of (WinQLErrors(self)) Item iCounter To True
      Increment iCounter
    End // While iCounter Le 100
  End_Procedure // IgnoreAll

  //Doc/ Interface=Private
  Procedure Trapall
    Integer iCounter
    While iCounter Le 100
      Set Array_Value Of (WinQLErrors(self)) Item iCounter To False
      Increment iCounter
    End // While iCounter Le 100
  End_Procedure // TrapAll

  // PreviewWindow support...

  //Doc/ Type=Property Interface=Public
  Procedure Set PreviewWindow_Id Integer iObject
    Set WinQLReport_Id Of iObject To self
    Set Private.PreviewWindow_Id To iObject
  End_Procedure // Set PreviewWindow_Id

  //Doc/ Type=Property Interface=Public
  Function PreviewWindow_Id Returns Integer
    Function_Return (Private.PreviewWindow_Id(self))
  End_Function // PreviewWindow_Id

  // *********************************************************************** //
  // ** Hook procedure's                                                  ** //
  // *********************************************************************** //

  // This hook procedure is called after the print job has been opened.
  //
  //Doc/ Type=Event Interface=Public
  Procedure OnInitializeReport
  End_Procedure // OnInitializeReport

  // This hook procedure is called just before a print job is closed.
  //
  //Doc/ Type=Event Interface=Public
  Procedure OnDeInitializeReport
  End_Procedure // OnDeInitializeReport

  // This hook procedure is called just before a the print job is started.
  //
  //Doc/ Type=Event Interface=Public
  Procedure OnStartPrinting
  End_Procedure // OnStartPrinting

  // This hook procedure is calledjust after a print job has finished.
  //
  //Doc/ Type=Event Interface=Public
  Procedure OnStopPrinting
  End_Procedure // OnStopPrinting

  // *********************************************************************** //
  // ** Engine Management Functions                                       ** //
  // *********************************************************************** //

  //Doc/ Interface=Private
  Procedure OpenEngine
    Integer iResult
    Move (PEOpenEngine()) To iResult
    Send HandlePossibleError
  End_Procedure // OpenEngine

  //Doc/ Interface=Private
  Procedure CloseEngine
    Integer iResult iVoid iCounter
    // Make sure we can close the engine
    Move (CanCloseEngine(self)) To iResult
    While (Not(iResult))
      Increment iCounter
      If iCounter Gt 2000 Begin
        // We've tried long enough
        Error DFERR_CRYSTAL_REPORT C_$EngineTimeoutError
        Set FunctionGeneratedError_State To True
        Procedure_Return // Return without closing the engine.
      End // If iCounter Gt 2000 Begin
      Move (CanCloseEngine(self)) To iResult
    End // While (Not(iResult))
    Move (PECloseEngine()) To iVoid
  End_Procedure // CloseEngine

  //Doc/ Interface=Private
  Function CanCloseEngine Returns Integer
    Integer iResult
    Move (PECanCloseEngine()) To iResult
    Send HandlePossibleError
    Function_Return iResult
  End_Function // CanCloseEngine

  //Doc/ Type=Property Interface=Public
  Function DLLVersion Returns Number
    Integer iComplex iPower
    Number nMinor nMajor nVersion
    Move (PEGetVersion(PE_GV_DLL)) To iComplex
    // Crystal 7 fix...
    Move (Low(iComplex)) To iComplex
    Send HandlePossibleError
    Move (Number(iComplex iAnd 255)) To nMinor
    Move (Number(iComplex / 256)) To nMajor
    If nMinor Begin
      Move (Log(nMinor)/Log(10)) To iPower
      Move (10^(-(iPower+1))) To nVersion
    End // If nMinor Begin
    Else Move 0.0 To nVersion
    Move (nMinor*nVersion) To nVersion
    Move (nMajor+nVersion) To nVersion
    Function_Return nVersion
  End_Function // DLLVersion

  //Doc/ Type=Property Interface=Public
  Function EngineVersion Returns Number
    Integer iResult iComplex iPower
    Number nMinor nMajor nVersion
    Move (PEGetVersion(PE_GV_ENGINE)) To iComplex
    // Crystal 7 fix...
    Move (Low(iComplex)) To iComplex
    Send HandlePossibleError
    Move (Number(iComplex iAnd 255)) To nMinor
    Move (Number(iComplex / 256)) To nMajor
    If nMinor Begin
      Move (Log(nMinor)/Log(10)) To iPower
      Move (10^(-(iPower+1))) To nVersion
    End // If nMinor Begin
    Else Move 0.0 To nVersion
    Move (nMinor*nVersion) To nVersion
    Move (nMajor+nVersion) To nVersion
    Function_Return nVersion
  End_Function // EngineVersion

  // *********************************************************************** //
  // ** Data Management Functions                                         ** //
  // *********************************************************************** //

  //Doc/ Type=Property Interface=Private
  Function HasSavedData Returns Integer
    Integer iPrintJob iResult
    Pointer pPEInteger
    String sPEInteger
    Get PrintJob To iPrintJob
    FillType PEInteger With 0 To sPEInteger
    GetAddress Of sPEInteger To pPEInteger
    Move (PEHasSavedData(iPrintJob,pPEInteger)) To iResult
    Send HandlePossibleError
    GetBuff From sPEInteger At PEInteger.integer To iResult
    Function_Return iResult
  End_Function // HasSavedData

  //Doc/ Interface=Private
  Procedure DiscardSavedData
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    Move (PEDiscardSavedData(iPrintJob)) To iResult
    Send HandlePossibleError
  End_Procedure // DiscardSavedData

  // *********************************************************************** //
  // ** Print Job Management Functions                                    ** //
  // *********************************************************************** //

  //Doc/ Interface=Public Obsolete=True
  Procedure PrintReportToPrinter String sReportName
    Integer iResult
    Move (ToANSI(sReportName)) To sReportName
    Move (PEPrintReport(sReportName,1,0,0,0,0,0,0,0,0)) To iResult
    Send HandlePossibleError
  End_Procedure // PrintReportToPrinter

  //Doc/ Interface=Public Obsolete=True
  Procedure PrintReportToWindow String sReportName String sTitle Integer iLeft ;
    Integer iTop Integer iWidth Integer iHeight Integer iStyle Handle hParent
    Integer iResult
    Move (ToANSI(sReportName)) To sReportName
    Move (ToANSI(sTitle)) To sTitle
    Move (PEPrintReport(sReportName,0,1,sTitle,iLeft,iTop,iWidth,iHeight,iStyle,hParent)) To iResult
    Send HandlePossibleError
  End_Procedure // PrintReportToWindow

  //Doc/ Interface=Private
  Procedure OpenPrintJob String sReportName
    Integer iPrintJob
    //Move sReportName To sReportName
    Move (PEOpenPrintJob(sReportName)) To iPrintJob
    // Crystal 7 fix...
    Move (Low(iPrintJob)) To iPrintJob
    Send HandlePossibleError
    Set PrintJob To iPrintJob
  End_Procedure // OpenPrintJob

  //Doc/ Interface=Private
  Procedure ClosePrintJob
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    Move (PEClosePrintJob(iPrintJob)) To iResult
    // If the function executed successfull, reset PrintJob
    If iResult Set PrintJob To 0
    Send HandlePossibleError
  End_Procedure // ClosePrintJob

  //Doc/ Interface=Private
  Procedure StartPrintJob // Integer iWaitUntilDone
    Integer iPrintJob iResult iObject
    Get PrintJob To iPrintJob
    // Check if there is a status object...
    If (StatusPanel_Id(self)) Begin
      Move (StatusPanel_Id(self)) To iObject
      Set Label Of iObject To (Label(self))
      Send Popup To iObject
    End // If (StatusPanel_Id(self)) Begin
    Move (PEStartPrintJob(iPrintJob,True)) To iResult
    Send HandlePossibleError
    // Stop displaying status info...
    If iObject Send Deactivate To (StatusPanel_Id(self))
  End_Procedure // StartPrintJob

  //Doc/ Interface=Public
  Function JobStatus Returns Integer
    Integer iPrintJob iResult
    String sPEJobInfo
    Pointer pPEJobInfo
    Get PrintJob To iPrintJob
    FillType PEJobInfo With 0 To sPEJobInfo
    Put PEJobInfo_Size To sPEJobInfo At PEJobInfo.StructSize
    GetAddress Of sPEJobInfo To pPEJobInfo
    Move (PEGetJobStatus(iPrintJob,pPEJobInfo)) To iResult
    // Crystal 7 fix...
    Move (Low(iResult)) To iResult
    Send HandlePossibleError
    Function_Return iResult
  End_Function // JobStatus

  //Doc/ Interface=Public Type=Property
  Function NumRecordsRead Returns Integer
    Integer iPrintJob iResult
    String sPEJobInfo
    Pointer pPEJobInfo
    Get PrintJob To iPrintJob
    FillType PEJobInfo With 0 To sPEJobInfo
    // See PEJobInfo structure for comments...
    Put (PEJobInfo_Size+4) To sPEJobInfo At PEJobInfo.StructSize
    GetAddress Of sPEJobInfo To pPEJobInfo
    Move (PEGetJobStatus(iPrintJob,pPEJobInfo)) To iResult
    Send HandlePossibleError
    GetBuff From sPEJobInfo At PEJobInfo.NumRecordsRead To iResult
    Function_Return iResult
  End_Function // NumRecordsRead

  //Doc/ Interface=Public Type=Property
  Function NumRecordsSelected Returns Integer
    Integer iPrintJob iResult
    String sPEJobInfo
    Pointer pPEJobInfo
    Get PrintJob To iPrintJob
    FillType PEJobInfo With 0 To sPEJobInfo
    // See PEJobInfo structure for comments...
    Put (PEJobInfo_Size+4) To sPEJobInfo At PEJobInfo.StructSize
    GetAddress Of sPEJobInfo To pPEJobInfo
    Move (PEGetJobStatus(iPrintJob,pPEJobInfo)) To iResult
    Send HandlePossibleError
    GetBuff From sPEJobInfo At PEJobInfo.NumRecordsSelected To iResult
    Function_Return iResult
  End_Function // NumRecordsSelected

  //Doc/ Interface=Public Type=Property
  Function NumRecordsPrinted Returns Integer
    Integer iPrintJob iResult
    String sPEJobInfo
    Pointer pPEJobInfo
    Get PrintJob To iPrintJob
    FillType PEJobInfo With 0 To sPEJobInfo
    // See PEJobInfo structure for comments...
    Put (PEJobInfo_Size+4) To sPEJobInfo At PEJobInfo.StructSize
    GetAddress Of sPEJobInfo To pPEJobInfo
    Move (PEGetJobStatus(iPrintJob,pPEJobInfo)) To iResult
    Send HandlePossibleError
    GetBuff From sPEJobInfo At PEJobInfo.NumRecordsPrinted To iResult
    Function_Return iResult
  End_Function // NumRecordsPrinted

  //Doc/ Type=Property Interface=Public
  Function DisplayPageN Returns Integer
    Integer iPrintJob iResult
    String sPEJobInfo
    Pointer pPEJobInfo
    Get PrintJob To iPrintJob
    FillType PEJobInfo With 0 To sPEJobInfo
    // See PEJobInfo structure for comments...
    Put (PEJobInfo_Size+4) To sPEJobInfo At PEJobInfo.StructSize
    GetAddress Of sPEJobInfo To pPEJobInfo
    Move (PEGetJobStatus(iPrintJob,pPEJobInfo)) To iResult
    Send HandlePossibleError
    GetBuff From sPEJobInfo At PEJobInfo.DisplayPageN To iResult
    Function_Return iResult
  End_Function // DisplayPageN

  //Doc/ Type=Property Interface=Public
  Function LatestPageN Returns Integer
    Integer iPrintJob iResult
    String sPEJobInfo
    Pointer pPEJobInfo
    Get PrintJob To iPrintJob
    FillType PEJobInfo With 0 To sPEJobInfo
    // See PEJobInfo structure for comments...
    Put (PEJobInfo_Size+4) To sPEJobInfo At PEJobInfo.StructSize
    GetAddress Of sPEJobInfo To pPEJobInfo
    Move (PEGetJobStatus(iPrintJob,pPEJobInfo)) To iResult
    Send HandlePossibleError
    GetBuff From sPEJobInfo At PEJobInfo.LatestPageN To iResult
    Function_Return iResult
  End_Function // LatestPageN

  //Doc/ Type=Property Interface=Public
  Function StartPageN Returns Integer
    Integer iPrintJob iResult
    String sPEJobInfo
    Pointer pPEJobInfo
    Get PrintJob To iPrintJob
    FillType PEJobInfo With 0 To sPEJobInfo
    // See PEJobInfo structure for comments...
    Put (PEJobInfo_Size+4) To sPEJobInfo At PEJobInfo.StructSize
    GetAddress Of sPEJobInfo To pPEJobInfo
    Move (PEGetJobStatus(iPrintJob,pPEJobInfo)) To iResult
    Send HandlePossibleError
    GetBuff From sPEJobInfo At PEJobInfo.StartPageN To iResult
    Function_Return iResult
  End_Function // StartPageN

  //Doc/ Type=Property Interface=Public
  Function PrintEnded Returns Integer
    Integer iPrintJob iResult
    String sPEJobInfo
    Pointer pPEJobInfo
    Get PrintJob To iPrintJob
    FillType PEJobInfo With 0 To sPEJobInfo
    // See PEJobInfo structure for comments...
    Put (PEJobInfo_Size+4) To sPEJobInfo At PEJobInfo.StructSize
    GetAddress Of sPEJobInfo To pPEJobInfo
    Move (PEGetJobStatus(iPrintJob,pPEJobInfo)) To iResult
    Send HandlePossibleError
    GetBuff From sPEJobInfo At PEJobInfo.printEnded To iResult
    Function_Return iResult
  End_Function // PrintEnded

  //Doc/ Interface=Public
  Procedure CancelPrintJob
    Integer iPrintJob iVoid
    Get PrintJob To iPrintJob
    Move (PECancelPrintJob(iPrintJob)) To iVoid
    //Set PrintJob To 0
    Send HandlePossibleError
  End_Procedure // CancelPrintJob

  //Doc/ Type=Property Interface=Public
  Function IsPrintJobFinished Returns Integer
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    Move (PEIsPrintJobFinished(iPrintJob)) To iResult
    Send HandlePossibleError
    Function_Return iResult
  End_Function // IsPrintJobFinished

  // *********************************************************************** //
  // ** Print Window Management Functions                                 ** //
  // *********************************************************************** //

    //Doc/ Type=Property Interface=Public
    Function WindowHandle Returns Handle
      Integer iPrintJob
      Handle hResult
      Get PrintJob To iPrintJob
      Move (PEGetWindowHandle(iPrintJob)) To hResult
      Send HandlePossibleError
      Function_Return hResult
    End_Function // WindowHandle

    //Doc/ Interface=Public
    Procedure PrintWindow // Integer iWaitUntilDone
      Integer iPrintJob iResult
      Get PrintJob To iPrintJob
      Move (PEPrintWindow(iPrintJob,True)) To iResult
      Send HandlePossibleError
    End_Procedure // PrintWindow

    //Doc/ Interface=Public
    Procedure SelectAndPrintWindow
      Integer iPrintJob iResult
      Get PrintJob To iPrintJob
      Get SelectAndSetPrinter To iResult
      If iResult Move (PEPrintWindow(iPrintJob,True)) To iResult
      Send HandlePossibleError
    End_Procedure // SelectAndPrintWindow

    //Doc/ Interface=Public
    Procedure CloseWindow
      Integer iPrintJob iVoid
      Get PrintJob To iPrintJob
      Move (PECloseWindow(iPrintJob)) To iVoid
      Send HandlePossibleError
    End_Procedure // CloseWindow

  // *********************************************************************** //
  // ** Print Destination Functions                                       ** //
  // *********************************************************************** //

  //Doc/ Interface=Private
  Function PointerToString Pointer pString Returns String
    String sCharacter sString
    Pointer pCharacter
    Integer iResult

    // Create a single character buffer
    Move (Character(0)) To sCharacter
    GetAddress Of sCharacter To pCharacter

    // Read characters until the null character
    // WARNING: No overflow checking is performed
    Move (CopyMemory(pCharacter,pString,1)) To iResult
    While (Ascii(sCharacter) <> 0)
      Append sString sCharacter
      Increment pString
      Move (CopyMemory(pCharacter,pString,1)) To iResult
    Loop // While (Ascii(sCharacter) <> 0)
    Function_Return sString
  End_Function // PointerToString

  //Doc/ Type=Property Interface=Private
  Function DriverName String sPrinterName Returns String
    String sDriverInfo sDriverName
    Handle hPrinter
    Integer iResult iNeeded
    Pointer pDriverPath

    // Make sure AddressOf works!
    Move 0 To hPrinter
    Move 0 To iNeeded
    Move sPrinterName To sPrinterName

    // Open the printer
    Move (OpenPrinter(AddressOf(sPrinterName),AddressOf(hPrinter),0)) To iResult
    If (iResult = 0) Begin
      Get ShowLastError To iResult
      Function_Return ""
    End // If (iResult = 0) Begin

    // Get the driver info
    ZeroType _DRIVER_INFO_2 To sDriverInfo
    Move (GetPrinterDriver(hPrinter,0,2,AddressOf(sDriverInfo),_DRIVER_INFO_2_Size,AddressOf(iNeeded))) To iResult
    If (iResult = 0) Begin
      Get ShowLastError To iResult
      Function_Return ""
    End // If (iResult = 0) Begin

    // Get the driver name and strip the path and extension
    GetBuff From sDriverInfo at _DRIVER_INFO_2.pDriverPath To pDriverPath
    Get PointerToString pDriverPath To sDriverName
    While (Pos("\",sDriverName))
      Move (Right(sDriverName,(Length(sDriverName)-Pos("\",sDriverName)))) To sDriverName
    End // While (Pos("\",sDriver))
    Move (Left(sDriverName,(Pos(".",sDriverName)-1))) To sDriverName

    // Close the printer
    Move (ClosePrinter(hPrinter)) To iResult
    If (iResult = 0) Get ShowLastError To iResult

    Function_Return sDriverName
  End_Function // DriverName

  //Doc/ Interface=Private
  Function SelectAndSetPrinter Returns Integer
    String sDriver sDevice sPort
    Integer iResult iPrintJob
    Pointer pHeap

    Get PrintJob To iPrintJob
    Get PrintDialog Of (WinQLSelectPrinter(Self)) To iResult
    If (iResult) Function_Return
    Get DeviceName Of (WinQLSelectPrinter(Self)) To sDevice
    Get OutputName Of (WinQLSelectPrinter(Self)) To sPort
    Get DriverName sDevice To sDriver

    If (Flags(WinQLSelectPrinter(Self)) iAnd PD_PAGENUMS) Begin
      Set StartPageN To (FromPage(WinQLSelectPrinter(Self)))
      Set StopPageN To (ToPage(WinQLSelectPrinter(Self)))
    End // If (Flags(WinQLSelectPrinter(Self)) iAnd PD_PAGENUMS) Begin
    Set NReportCopies To (Copies(WinQLSelectPrinter(Self)))
    Set Collation To (Collate(WinQLSelectPrinter(Self)))

    // Lock allocated memory
    Move (GlobalLock(DevModeHandle(WinQLSelectPrinter(Self)))) To pHeap

    Move (PESelectPrinter(iPrintJob,sDriver,sDevice,sPort,pHeap)) To iResult
    Send HandlePossibleError

    // Unlock allocated memory
    Move (GlobalUnlock(DevModeHandle(WinQLSelectPrinter(Self)))) To iResult
    Move (GlobalFree(DevModeHandle(WinQlSelectPrinter(Self)))) To iResult
    Move (GlobalFree(DevNamesHandle(WinQLSelectPrinter(Self)))) To iResult

    Function_Return True
  End_Function // SelectAndSetPrinter

  //Doc/ Interface=Public
  Procedure SelectAndSetPrinter
    String sDriver sDevice sPort
    Integer iResult iPrintJob
    Pointer pHeap

    Get PrintJob To iPrintJob
    Get PrintDialog Of (WinQLSelectPrinter(Self)) To iResult
    If (iResult) Procedure_Return
    Get DeviceName Of (WinQLSelectPrinter(Self)) To sDevice
    Get OutputName Of (WinQLSelectPrinter(Self)) To sPort
    Get DriverName sDevice To sDriver

    If (Flags(WinQLSelectPrinter(Self)) iAnd PD_PAGENUMS) Begin
      Set StartPageN To (FromPage(WinQLSelectPrinter(Self)))
      Set StopPageN To (ToPage(WinQLSelectPrinter(Self)))
    End // If (Flags(WinQLSelectPrinter(Self)) iAnd PD_PAGENUMS) Begin
    Set NReportCopies To (Copies(WinQLSelectPrinter(Self)))
    Set Collation To (Collate(WinQLSelectPrinter(Self)))

    // Lock allocated memory
    Move (GlobalLock(DevModeHandle(WinQLSelectPrinter(Self)))) To pHeap

    Move (PESelectPrinter(iPrintJob,sDriver,sDevice,sPort,pHeap)) To iResult
    Send HandlePossibleError

    // Unlock allocated memory
    Move (GlobalUnlock(DevModeHandle(WinQLSelectPrinter(Self)))) To iResult
    Move (GlobalFree(DevModeHandle(WinQlSelectPrinter(Self)))) To iResult
    Move (GlobalFree(DevNamesHandle(WinQLSelectPrinter(Self)))) To iResult
  End_Procedure // SelectAndSetPrinter

  //Doc/ Interface=Public
  Procedure SelectPrinter String sDriver String sPrinter String sPort String sDEVMODE
    Integer iPrintJob iResult
    Pointer pDEVMODE
    Get PrintJob To iPrintJob
    //Move (ToANSI(sDriver+Character(0))) To sDriver
    //Move (ToANSI(sPrinter+Character(0))) To sPrinter
    //Move (ToANSI(sPort+Character(0))) To sPort
    GetAddress Of sDEVMODE To pDEVMODE
    Move (PESelectPrinter(iPrintJob,sDriver,sPrinter,sPort,pDEVMODE)) To iResult
    Send HandlePossibleError
  End_Procedure // SelectPrinter

  //Doc/ Type=Property Interface=Public
  Function PrinterDriver Returns String
    Integer iPrintJob iResult iTextHandle iTextLength
    String sDriver sPrinter sPort sDEVMODE sReturn
    Pointer pDriver pPrinter pPort pDEVMODE pReturn
    Get PrintJob To iPrintJob
    FillType PETextStructure With 0 To sDriver
    FillType PETextStructure With 0 To sPrinter
    FillType PETextStructure With 0 To sPort
    GetAddress Of sDriver To pDriver
    GetAddress Of sPrinter To pPrinter
    GetAddress Of sPort To pPort
    FillType DevMode With 0 To sDEVMODE
    GetAddress Of sDEVMODE To pDEVMODE
    Move (PEGetSelectedPrinter(iPrintJob,pDriver,pDriver+4,pPrinter,pPrinter+4,pPort,pPort+4,pDEVMODE)) To iResult
    Send HandlePossibleError
    GetBuff From sDriver At PETextStructure.textHandle To iTextHandle
    GetBuff From sDriver At PETextStructure.textLength To iTextLength
    If iTextLength Gt 255 Move 255 To iTextLength
    Move (Repeat(Character(0),255)) To sReturn
    GetAddress Of sReturn To pReturn
    Move (PEGetHandleString(iTextHandle,pReturn,iTextLength)) To iResult
    Send HandlePossibleError
    Function_Return (ToOEM(cString(sReturn)))
  End_Function // PrinterDriver

  //Doc/ Type=Property Interface=Public
  Function PrinterName Returns String
    Integer iPrintJob iResult iTextHandle iTextLength
    String sDriver sPrinter sPort sDEVMODE sReturn
    Pointer pDriver pPrinter pPort pDEVMODE pReturn
    Get PrintJob To iPrintJob
    FillType PETextStructure With 0 To sDriver
    FillType PETextStructure With 0 To sPrinter
    FillType PETextStructure With 0 To sPort
    GetAddress Of sDriver To pDriver
    GetAddress Of sPrinter To pPrinter
    GetAddress Of sPort To pPort
    FillType DevMode With 0 To sDEVMODE
    GetAddress Of sDEVMODE To pDEVMODE
    Move (PEGetSelectedPrinter(iPrintJob,pDriver,pDriver+4,pPrinter,pPrinter+4,pPort,pPort+4,pDEVMODE)) To iResult
    Send HandlePossibleError
    GetBuff From sPrinter At PETextStructure.textHandle To iTextHandle
    GetBuff From sPrinter At PETextStructure.textLength To iTextLength
    If iTextLength Gt 255 Move 255 To iTextLength
    Move (Repeat(Character(0),255)) To sReturn
    GetAddress Of sReturn To pReturn
    Move (PEGetHandleString(iTextHandle,pReturn,iTextLength)) To iResult
    Send HandlePossibleError
    Function_Return (ToOEM(cString(sReturn)))
  End_Function // PrinterName

  //Doc/ Type=Property Interface=Public
  Function PrinterPort Returns String
    Integer iPrintJob iResult iTextHandle iTextLength
    String sDriver sPrinter sPort sDEVMODE sReturn
    Pointer pDriver pPrinter pPort pDEVMODE pReturn
    Get PrintJob To iPrintJob
    FillType PETextStructure With 0 To sDriver
    FillType PETextStructure With 0 To sPrinter
    FillType PETextStructure With 0 To sPort
    GetAddress Of sDriver To pDriver
    GetAddress Of sPrinter To pPrinter
    GetAddress Of sPort To pPort
    FillType DevMode With 0 To sDEVMODE
    GetAddress Of sDEVMODE To pDEVMODE
    Move (PEGetSelectedPrinter(iPrintJob,pDriver,pDriver+4,pPrinter,pPrinter+4,pPort,pPort+4,pDEVMODE)) To iResult
    Send HandlePossibleError
    GetBuff From sPort At PETextStructure.textHandle To iTextHandle
    GetBuff From sPort At PETextStructure.textLength To iTextLength
    If iTextLength Gt 255 Move 255 To iTextLength
    Move (Repeat(Character(0),255)) To sReturn
    GetAddress Of sReturn To pReturn
    Move (PEGetHandleString(iTextHandle,pReturn,iTextLength)) To iResult
    Send HandlePossibleError
    Function_Return (ToOEM(cString(sReturn)))
  End_Function // PrinterPort

  //Doc/ Interface=Public
  Function PrinterDEVMODE Returns String
    Integer iPrintJob iResult iTextHandle iTextLength
    String sDriver sPrinter sPort sDEVMODE sReturn
    Pointer pDriver pPrinter pPort pDEVMODE pReturn
    Get PrintJob To iPrintJob
    FillType PETextStructure With 0 To sDriver
    FillType PETextStructure With 0 To sPrinter
    FillType PETextStructure With 0 To sPort
    GetAddress Of sDriver To pDriver
    GetAddress Of sPrinter To pPrinter
    GetAddress Of sPort To pPort
    FillType DevMode With 0 To sDEVMODE
    GetAddress Of sDEVMODE To pDEVMODE
    Move (PEGetSelectedPrinter(iPrintJob,pDriver,pDriver+4,pPrinter,pPrinter+4,pPort,pPort+4,pDEVMODE)) To iResult
    Send HandlePossibleError
    Function_Return sDEVMODE
  End_Function // PrinterDEVMODE

  //Doc/ Interface=Public
  Procedure OutputToPrinter Integer iCopies
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    Move (PEOutputToPrinter(iPrintJob,iCopies)) To iResult
    Send HandlePossibleError
    Send StartPrintJob True
  End_Procedure // OutputToPrinter

  //Doc/ Interface=Public
  Procedure OutputToWindow String sTitle Integer iLeft Integer iTop Integer iWidth ;
    Integer iHeight Integer iStyle Handle hParent
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    Move (ToANSI(sTitle+Character(0))) To sTitle
    Move (PEOutputToWindow(iPrintJob,sTitle,iLeft,iTop,iWidth,iHeight,iStyle,hParent)) To iResult
    Send HandlePossibleError
    Send StartPrintJob True
  End_Procedure // OutputToWindow

  //Doc/ Type=Property Interface=Private
  Procedure Set ExportProperties String sFormatDLLName Integer iFormatType
    If sFormatDLLName Eq "u2fcr" Set ExportFormatType To CRW_CrystalReportType
    Else If sFormatDLLName Eq "u2fdif" Set ExportFormatType To CRW_DIFType
    Else If sFormatDLLName Eq "u2fwordw" Set ExportFormatType To CRW_WordWinType
    Else If sFormatDLLName Eq "u2frec" Set ExportFormatType To CRW_RecordType
    Else If sFormatDLLName Eq "u2frtf" Set ExportFormatType To CRW_RichTextFormatType
    Else If ((sFormatDLLName Eq "u2fsepv") And (iFormatType Eq 0)) Set ExportFormatType To CRW_CommaSeparatedType
    Else If ((sFormatDLLName Eq "u2fsepv") And (iFormatType Eq 1)) Set ExportFormatType To CRW_TabSeparatedType
    Else If ((sFormatDLLName Eq "u2fsepv") And (iFormatType Eq 2)) Set ExportFormatType To CRW_CharSeparatedType
    Else If ((sFormatDLLName Eq "u2ftext") And (iFormatType Eq 0)) Set ExportFormatType To CRW_TextType
    Else If ((sFormatDLLName Eq "u2ftext") And (iFormatType Eq 1)) Set ExportFormatType To CRW_TabbedTextType
    Else If ((sFormatDLLName Eq "u2fwks") And (iFormatType Eq 0)) Set ExportFormatType To CRW_LotusWksType
    Else If ((sFormatDLLName Eq "u2fwks") And (iFormatType Eq 1)) Set ExportFormatType To CRW_LotusWk1Type
    Else If ((sFormatDLLName Eq "u2fwks") And (iFormatType Eq 2)) Set ExportFormatType To CRW_LotusWk3Type
    Else If ((sFormatDLLName Eq "u2fxls") And (iFormatType Eq 0)) Set ExportFormatType To CRW_Xls2Type
    Else If ((sFormatDLLName Eq "u2fxls") And (iFormatType Eq 1)) Set ExportFormatType To CRW_Xls3Type
    Else If ((sFormatDLLName Eq "u2fxls") And (iFormatType Eq 2)) Set ExportFormatType To CRW_Xls4Type
    Else If ((sFormatDLLName Eq "u2fxls") And (iFormatType Eq 3)) Set ExportFormatType To CRW_Xls5Type
    //HTML support...
    Else If ((sFormatDLLName Eq "u2fhtml") And (iFormatType Eq 0)) Set ExportFormatType To CRW_HTML3Type
    Else If ((sFormatDLLName Eq "u2fhtml") And (iFormatType Eq 1)) Set ExportFormatType To CRW_Explorer2Type
    Else If ((sFormatDLLName Eq "u2fhtml") And (iFormatType Eq 2)) Set ExportFormatType To CRW_Netscape2Type
    Else If ((sFormatDLLName Eq "crxf_pdf") And (iFormatType Eq 0)) 	   Set ExportFormatType To CRW_PDFTYPE
    
    
        
        
    
  End_Procedure // Set ExportProperties

  //Doc/ Interface=Public
  Function ExportOptions Returns Integer
    Integer iPrintJob iResult iFormatType iLength iVoid
    Pointer pPEExportOptions pFormatOptions pDestinationOptions pDestination
    String sPEExportOptions sFormatDLLName sDestinationDLLName sDestination
    Get PrintJob To iPrintJob
    // Fill the PEExportOptions structure
    FillType PEExportOptions With 0 To sPEExportOptions
    GetAddress Of sPEExportOptions To pPEExportOptions
    Put PEExportOptions_Size To sPEExportOptions At PEExportOptions.StructSize
    Move (PEGetExportOptions(iPrintJob,pPEExportOptions)) To iResult
    Send HandlePossibleError
    // Retrieve the user's selections.
    GetBuff_String From sPEExportOptions At PEExportOptions.formatDLLName To sFormatDLLName
    // Just in case, the DLL names used now do NOT include any characters that need conversion but future versions might...
    Move (ToOEM(sFormatDLLName)) To sFormatDLLName
    GetBuff From sPEExportOptions At PEExportOptions.formatType To iFormatType
    // Set the Export options properties.
    Set ExportProperties To sFormatDLLName iFormatType
    GetBuff_String From sPEExportOptions At PEExportOptions.destinationDLLName To sDestinationDLLName
    // Just in case, the DLL names used now do NOT include any characters that need conversion but future versions might...
    Move (ToOEM(sDestinationDLLName)) To sDestinationDLLName
    If (LowerCase(sDestinationDLLName)) Eq "u2ddisk" Set Private.Output_Destination To CRW_PRINT_TO_FILE
    Else Set Output_Destination To CRW_PRINT_TO_MAPI
    GetBuff From sPEExportOptions At PEExportOptions.formatOptions To pFormatOptions
    GetBuff From sPEExportOptions At PEExportOptions.nFormatOptionsBytes To iLength
    Move (Repeat(Character(0),iLength)) To sDestination
    GetAddress Of sDestination To pDestination
    Move (CopyMemory(pDestination,pFormatOptions,iLength)) To iVoid
    Set UseReportNumberFormat_State To (BytesToCVT(sDestination,3,2))
    Set UseReportDateFormat_State To (BytesToCVT(sDestination,5,2))
    Set StringDelimiter To (Mid(sDestination,1,7))
    Set FieldDelimiter To (Mid(sDestination,16,8))
    GetBuff From sPEExportOptions At PEExportOptions.destinationOptions To pDestinationOptions
    GetBuff From sPEExportOptions At PEExportOptions.nDestinationOptionsBytes To iLength
    Move (Repeat(Character(0),iLength)) To sDestination
    GetAddress Of sDestination To pDestination
    Move (CopyMemory(pDestination,pDestinationOptions,iLength)) To iVoid
    If (Private.Output_Destination(self)) Eq CRW_PRINT_TO_FILE ;
      Set ExportFileName To (Mid(sDestination,(iLength-2),3))
    Else Begin
      Move (Right(sDestination,(Length(sDestination)-4))) To sDestination
      Set ToList To (Left(sDestination,(Pos(Character(0),sDestination))))
      Move ((Right(sDestination,(Length(sDestination)-(Pos(Character(0),sDestination)))))) To sDestination
      Set CCList To (Left(sDestination,(Pos(Character(0),sDestination))))
      Move ((Right(sDestination,(Length(sDestination)-(Pos(Character(0),sDestination)))))) To sDestination
      Set SubjectText To (Left(sDestination,(Pos(Character(0),sDestination))))
      Move ((Right(sDestination,(Length(sDestination)-(Pos(Character(0),sDestination)))))) To sDestination
      Set MessageText To (Left(sDestination,(Pos(Character(0),sDestination))))
    End // Else Begin
    Function_Return iResult
  End_Function // ExportOptions

  //Doc/ Interface=Private
  Function UXFCharSeparatedOptions Returns Pointer
    Pointer pUXFCharSeparatedOptions pMemoryObject
    String sUXFCharSeparatedOptions sStringDelimiter sFieldDelimiter
    Integer iVoid
    // Fill the UXFCharSeparatedOptions structure.
    FillType UXFCharSeparatedOptions With 0 To sUXFCharSeparatedOptions
    Put UXFCharSeparatedOptions_Size To sUXFCharSeparatedOptions At UXFCharSeparatedOptions.StructSize
    Put (UseReportNumberFormat_State(self)) To sUXFCharSeparatedOptions At UXFCharSeparatedOptions.useReportNumberFormat
    Put (UseReportDateFormat_State(self)) To sUXFCharSeparatedOptions At UXFCharSeparatedOptions.useReportDateFormat
    Move (ToANSI(StringDelimiter(self))) To sStringDelimiter
    Put sStringDelimiter To sUXFCharSeparatedOptions At UXFCharSeparatedOptions.stringDelimiter
    Move (ToANSI(FieldDelimiter(self))) To sFieldDelimiter
    Put_String sFieldDelimiter To sUXFCharSeparatedOptions At UXFCharSeparatedOptions.fieldDelimiter
    GetAddress Of sUXFCharSeparatedOptions To pUXFCharSeparatedOptions
    // Allocate a fixed memory object and initialize the contents to zero.
    Move (GlobalAlloc((GMEM_FIXED iOr GMEM_ZEROINIT),UXFCharSeparatedOptions_Size)) To pMemoryObject
    If Not pMemoryObject Begin
      Error DFERR_CRYSTAL_REPORT C_$UnableToAllocateMemory
      Function_Return False
    End // If Not pMemoryObject Begin
    Move (CopyMemory(pMemoryObject,pUXFCharSeparatedOptions,UXFCharSeparatedOptions_Size)) To iVoid
    Function_Return pMemoryObject
  End_Function // UXFCharSeparatedOptions

  //Doc/ Interface=Private
  Function UXFCommaTabSeparatedOptions Returns Pointer
    Pointer pUXFCommaTabSeparatedOptions pMemoryObject
    String sUXFCommaTabSeparatedOptions
    Integer iVoid
    // Fill the UXFCommaTabSeparatedOptions structure.
    FillType UXFCommaTabSeparatedOptions With 0 To sUXFCommaTabSeparatedOptions
    Put UXFCommaTabSeparatedOptions_Size To sUXFCommaTabSeparatedOptions At UXFCommaTabSeparatedOptions.StructSize
    Put (UseReportNumberFormat_State(self)) To sUXFCommaTabSeparatedOptions At UXFCommaTabSeparatedOptions.useReportNumberFormat
    Put (UseReportDateFormat_State(self)) To sUXFCommaTabSeparatedOptions At UXFCommaTabSeparatedOptions.useReportDateFormat
    GetAddress Of sUXFCommaTabSeparatedOptions To pUXFCommaTabSeparatedOptions
    // Allocate a fixed memory object and initialize the contents to zero.
    Move (GlobalAlloc((GMEM_FIXED iOr GMEM_ZEROINIT),UXFCommaTabSeparatedOptions_Size)) To pMemoryObject
    If Not pMemoryObject Begin
      Error DFERR_CRYSTAL_REPORT C_$UnableToAllocateMemory
      Function_Return False
    End // If Not pMemoryObject Begin
    Move (CopyMemory(pMemoryObject,pUXFCommaTabSeparatedOptions,UXFCommaTabSeparatedOptions_Size)) To iVoid
    Function_Return pMemoryObject
  End_Function // UXFCommaTabSeparatedOptions

  //Doc/ Interface=Private
  Function UXFDIFOptions Returns Pointer
    Pointer pUXFDIFOptions pMemoryObject
    String sUXFDIFOptions
    Integer iVoid
    // Fill the UXFDIFOptions structure.
    FillType UXFDIFOptions With 0 To sUXFDIFOptions
    Put UXFDIFOptions_Size To sUXFDIFOptions At UXFDIFOptions.StructSize
    Put (UseReportNumberFormat_State(self)) To sUXFDIFOptions At UXFDIFOptions.useReportNumberFormat
    Put (UseReportDateFormat_State(self)) To sUXFDIFOptions At UXFDIFOptions.useReportDateFormat
    GetAddress Of sUXFDIFOptions To pUXFDIFOptions
    // Allocate a fixed memory object and initialize the contents to zero.
    Move (GlobalAlloc((GMEM_FIXED iOr GMEM_ZEROINIT),UXFDIFOptions_Size)) To pMemoryObject
    If Not pMemoryObject Begin
      Error DFERR_CRYSTAL_REPORT C_$UnableToAllocateMemory
      Function_Return False
    End // If Not pMemoryObject Begin
    Move (CopyMemory(pMemoryObject,pUXFDIFOptions,UXFDIFOptions_Size)) To iVoid
    Function_Return pMemoryObject
  End_Function // UXFDIFOptions

  //Doc/ Interface=Private
  Function UXFRecordStyleOptions Returns Pointer
    Pointer pUXFRecordStyleOptions pMemoryObject
    String sUXFRecordStyleOptions
    Integer iVoid
    // Fill the UXFRecordStyleOptions structure.
    FillType UXFRecordStyleOptions With 0 To sUXFRecordStyleOptions
    Put UXFRecordStyleOptions_Size To sUXFRecordStyleOptions At UXFRecordStyleOptions.StructSize
    Put (UseReportNumberFormat_State(self)) To sUXFRecordStyleOptions At UXFRecordStyleOptions.useReportNumberFormat
    Put (UseReportDateFormat_State(self)) To sUXFRecordStyleOptions At UXFRecordStyleOptions.useReportDateFormat
    GetAddress Of sUXFRecordStyleOptions To pUXFRecordStyleOptions
    // Allocate a fixed memory object and initialize the contents to zero.
    Move (GlobalAlloc((GMEM_FIXED iOr GMEM_ZEROINIT),UXFRecordStyleOptions_Size)) To pMemoryObject
    If Not pMemoryObject Begin
      Error DFERR_CRYSTAL_REPORT C_$UnableToAllocateMemory
      Function_Return False
    End // If Not pMemoryObject Begin
    Move (CopyMemory(pMemoryObject,pUXFRecordStyleOptions,UXFRecordStyleOptions_Size)) To iVoid
    Function_Return pMemoryObject
  End_Function // UXFRecordStyleOptions

  // HTML support...
  //Doc/ Interface=Private
  Function UXFHTML3Options Returns Pointer
    Pointer pFileName pUXFHTML3Options
    String sFileName sUXFHTML3Options
    Handle hFileName hUXFHTML3Options
    Integer iVoid
    ZeroType UXFHTML3Options To sUXFHTML3Options
    Move ((HTMLFileName(Self))+Character(0)) To sFileName
    GetAddress Of sFileName To pFileName
    Move (GlobalAlloc((GMEM_FIXED iOr GMEM_ZEROINIT),(Length(sFileName)))) To hFileName
    If Not hFileName Begin
      Error DFERR_CRYSTAL_REPORT C_$UnableToAllocateMemory
      Function_Return False
    End // If Not hFileName Begin
    Move (CopyMemory(hFileName,pFileName,(Length(sFileName)))) To iVoid
    Put UXFHTML3Options_Size To sUXFHTML3Options At UXFHTML3Options.StructSize
    Put hFileName To sUXFHTML3Options At UXFHTML3Options.fileName
    GetAddress Of sUXFHTML3Options To pUXFHTML3Options
    // Allocate a fixed memory object and initialize the contents to zero.
    Move (GlobalAlloc((GMEM_FIXED iOr GMEM_ZEROINIT),UXFHTML3Options_Size)) To hUXFHTML3Options
    If Not hUXFHTML3Options Begin
      Error DFERR_CRYSTAL_REPORT C_$UnableToAllocateMemory
      Function_Return False
    End // If Not hUXFHTML3Options Begin
    Move (CopyMemory(hUXFHTML3Options,pUXFHTML3Options,UXFHTML3Options_Size)) To iVoid
    Function_Return hUXFHTML3Options
  End_Function // UXFHTML3Options

  //Doc/ Interface=Private
  Function FormatDLLName Returns String
    Integer iExportFormatType
    Get ExportFormatType To iExportFormatType
    If iExportFormatType Eq CRW_CrystalReportType Function_Return "u2fcr"
    If iExportFormatType Eq CRW_DIFType Function_Return "u2fdif"
    If iExportFormatType Eq CRW_WordWinType Function_Return "u2fwordw"
    If iExportFormatType Eq CRW_RecordType Function_Return "u2frec"
    If iExportFormatType Eq CRW_RichTextFormatType Function_Return "u2frtf"
    If iExportFormatType Eq CRW_CommaSeparatedType Function_Return "u2fsepv"
    If iExportFormatType Eq CRW_TabSeparatedType Function_Return "u2fsepv"
    If iExportFormatType Eq CRW_CharSeparatedType Function_Return "u2fsepv"
    If iExportFormatType Eq CRW_TextType Function_Return "u2ftext"
    If iExportFormatType Eq CRW_TabbedTextType Function_Return "u2ftext"
    If iExportFormatType Eq CRW_LotusWksType Function_Return "u2fwks"
    If iExportFormatType Eq CRW_LotusWk1Type Function_Return "u2fwks"
    If iExportFormatType Eq CRW_LotusWk3Type Function_Return "u2fwks"
    If iExportFormatType Eq CRW_Xls2Type Function_Return "u2fxls"
    If iExportFormatType Eq CRW_Xls3Type Function_Return "u2fxls"
    If iExportFormatType Eq CRW_Xls4Type Function_Return "u2fxls"
    If iExportFormatType Eq CRW_Xls5Type Function_Return "u2fxls"
    // HTML support...
    If iExportFormatType Eq CRW_HTML3Type Function_Return "u2fhtml"
    If iExportFormatType Eq CRW_Explorer2Type Function_Return "u2fhtml"
    If iExportFormatType Eq CRW_Netscape2Type Function_Return "u2fhtml"
    If iExportFormatType Eq CRW_PDFType Function_Return "crxf_pdf" 
    //If iExportFormatType Eq CRW_PDFType Move "crxf_pdf" To sExportFormatType
    Function_Return "u2fcr" // Default value
  End_Function // FormatDLLName

  //Doc/ Interface=Private
  Function FormatType Returns Integer
    Integer iExportFormatType
    Get ExportFormatType To iExportFormatType
    If iExportFormatType Eq CRW_CrystalReportType Function_Return 0
    If iExportFormatType Eq CRW_DIFType Function_Return 0
    If iExportFormatType Eq CRW_WordWinType Function_Return 0
    If iExportFormatType Eq CRW_RecordType Function_Return 0
    If iExportFormatType Eq CRW_RichTextFormatType Function_Return 0
    If iExportFormatType Eq CRW_CommaSeparatedType Function_Return 0
    If iExportFormatType Eq CRW_TabSeparatedType Function_Return 1
    If iExportFormatType Eq CRW_CharSeparatedType Function_Return 2
    If iExportFormatType Eq CRW_TextType Function_Return 0
    If iExportFormatType Eq CRW_TabbedTextType Function_Return 1
    If iExportFormatType Eq CRW_LotusWksType Function_Return 0
    If iExportFormatType Eq CRW_LotusWk1Type Function_Return 1
    If iExportFormatType Eq CRW_LotusWk3Type Function_Return 2
    If iExportFormatType Eq CRW_Xls2Type Function_Return 0
    If iExportFormatType Eq CRW_Xls3Type Function_Return 1
    If iExportFormatType Eq CRW_Xls4Type Function_Return 2
    If iExportFormatType Eq CRW_Xls5Type Function_Return 3
    // HTML support...
    If iExportFormatType Eq CRW_HTML3Type Function_Return 0
    If iExportFormatType Eq CRW_Explorer2Type Function_Return 1
    If iExportFormatType Eq CRW_Netscape2Type Function_Return 2
    If iExportFormatType Eq CRW_PDFType Function_Return 0
    Function_Return 0 // Default value
  End_Function // FormatType

  //Doc/ Interface=Private
  Function FormatOptions Returns Pointer
    Integer iExportFormatType
    Get ExportFormatType To iExportFormatType
    If iExportFormatType Eq CRW_DIFType Function_Return (UXFDIFOptions(self))
    If iExportFormatType Eq CRW_RecordType Function_Return (UXFRecordStyleOptions(self))
    If iExportFormatType Eq CRW_CommaSeparatedType Function_Return (UXFCommaTabSeparatedOptions(self))
    If iExportFormatType Eq CRW_TabSeparatedType Function_Return (UXFCommaTabSeparatedOptions(self))
    If iExportFormatType Eq CRW_CharSeparatedType Function_Return (UXFCharSeparatedOptions(self))
    // HTML support...
    If iExportFormatType Eq CRW_HTML3Type Function_Return (UXFHTML3Options(self))
    If iExportFormatType Eq CRW_Explorer2Type Function_Return (UXFHTML3Options(self))
    If iExportFormatType Eq CRW_Netscape2Type Function_Return (UXFHTML3Options(self))
    Function_Return 0 // Default value
  End_Function // FormatOptions

  //Doc/ Interface=Private
  Procedure ExportToDisk
    Pointer pUXDDiskOptions pPEExportOptions pMemoryObject pFormatOptions
    String sUXDDiskOptions sPEExportOptions sFileName
    Integer iPrintJob iResult iVoid
    Get PrintJob To iPrintJob
    Move (LowerCase(ExportFileName(self))) To sFileName
    Move (ToANSI(sFileName+Character(0))) To sFileName
    Move (FormatOptions(self)) To pFormatOptions
    // Fill the UXDDiskOptions structure.
    FillType UXDDiskOptions With 0 To sUXDDiskOptions
    Put (Length(sFileName)+7+32768) To sUXDDiskOptions At UXDDiskOptions.StructSize
    Put_String sFileName To sUXDDiskOptions At UXDDiskOptions.fileName
    GetAddress Of sUXDDiskOptions To pUXDDiskOptions
    // Allocate a fixed memory object and initialize the contents to zero.
    Move (GlobalAlloc((GMEM_FIXED iOr GMEM_ZEROINIT),(Length(sFileName)+7))) To pMemoryObject
    If Not pMemoryObject Begin
      Error DFERR_CRYSTAL_REPORT C_$UnableToAllocateMemory
      Procedure_Return
    End // If Not pMemoryObject Begin
    Move (CopyMemory(pMemoryObject,pUXDDiskOptions,(Length(sFileName)+7))) To iVoid
    // Fill the PEExportOptions structure.
    FillType PEExportOptions With 0 To sPEExportOptions
    Put PEExportOptions_Size To sPEExportOptions At PEExportOptions.StructSize
    Put_String (FormatDLLName(self)) To sPEExportOptions At PEExportOptions.formatDLLName
    Put (FormatType(self)) To sPEExportOptions At PEExportOptions.formatType
    Put pFormatOptions To sPEExportOptions At PEExportOptions.formatOptions
    Put_String ("u2ddisk"+Character(0)) To sPEExportOptions At PEExportOptions.destinationDLLName
    Put UXDDiskType To sPEExportOptions At PEExportOptions.destinationType
    // 07-05-1999, fix for CRW_PRINT_TO_FILE without a ExportFileName...
    If (Trim(ExportFileName(Self))<>"") Put pMemoryObject To sPEExportOptions At PEExportOptions.destinationOptions
    Put 0 To sPEExportOptions At PEExportOptions.nDestinationOptionsBytes
    GetAddress Of sPEExportOptions To pPEExportOptions
    Move (PEExportTo(iPrintJob,pPEExportOptions)) To iResult
    Send HandlePossibleError
    // Start the actual export.
    Send StartPrintJob True
    // Free all memory objects used by this procedure.
    Move (GlobalFree(pMemoryObject)) To iResult
    If iResult Ne 0 Begin
      Error DFERR_CRYSTAL_REPORT C_$UnableToFreeMemory
      Procedure_Return
    End // If iResult Ne 0 Begin
    If pFormatOptions Begin
      Move (GlobalFree(pFormatOptions)) To iResult
      If iResult Ne 0 Begin
        Error DFERR_CRYSTAL_REPORT C_$UnableToFreeMemory
        Procedure_Return
      End // If iResult Begin
    End // If pFormatOptions Begin
  End_Procedure // ExportToDisk

  //Doc/ Interface=Private
  Procedure ExportToMAPI
    Pointer pUXDMAPIOptions pPEExportOptions pMemoryObject pFormatOptions
    String sUXDMAPIOptions sPEExportOptions sFormatDLLName
    Integer iPrintJob iResult iVoid
    Get PrintJob To iPrintJob
    Move (FormatOptions(self)) To pFormatOptions
    // Fill the UXDMAPIOptions structure.
    Move (Character(1)+Character(0)+Character(24)+Character(0)) To sUXDMAPIOptions
    Append sUXDMAPIOptions (ToList(self)+Character(0))
    Append sUXDMAPIOptions (CCList(self)+Character(0))
    Append sUXDMAPIOptions (SubjectText(self)+Character(0))
    Append sUXDMAPIOptions (MessageText(self)+Character(0))
    Append sUXDMAPIOptions (Repeat(Character(0),6))
    GetAddress Of sUXDMAPIOptions To pUXDMAPIOptions
    // Allocate a fixed memory object and initialize the contents to zero.
    Move (GlobalAlloc((GMEM_FIXED iOr GMEM_ZEROINIT),(Length(sUXDMAPIOptions)))) To pMemoryObject
    If Not pMemoryObject Begin
      Error DFERR_CRYSTAL_REPORT C_$UnableToAllocateMemory
      Procedure_Return
    End // If Not pMemoryObject Begin
    Move (CopyMemory(pMemoryObject,pUXDMAPIOptions,(Length(sUXDMAPIOptions)))) To iVoid
    // Fill the PEExportOptions structure.
    FillType PEExportOptions With 0 To sPEExportOptions
    Put PEExportOptions_Size To sPEExportOptions At PEExportOptions.StructSize
    Put_String (FormatDLLName(self)) To sPEExportOptions At PEExportOptions.formatDLLName
    Put (FormatType(self)) To sPEExportOptions At PEExportOptions.formatType
    Put pFormatOptions To sPEExportOptions At PEExportOptions.formatOptions
    Put_String ("u2dmapi"+Character(0)) To sPEExportOptions At PEExportOptions.destinationDLLName
    Put UXDMAPIType To sPEExportOptions At PEExportOptions.destinationType
    If (ToList(self)) Gt "" Put pMemoryObject To sPEExportOptions At PEExportOptions.destinationOptions
    Put 0 To sPEExportOptions At PEExportOptions.nFormatOptionsBytes
    Put 0 To sPEExportOptions At PEExportOptions.nDestinationOptionsBytes
    GetAddress Of sPEExportOptions To pPEExportOptions
    Move (PEExportTo(iPrintJob,pPEExportOptions)) To iResult
    Send HandlePossibleError
    // Start the actual export.
    Send StartPrintJob True
    // Free all memory objects used by this procedure.
    Move (GlobalFree(pMemoryObject)) To iResult
    If iResult Ne 0 Begin
      Error DFERR_CRYSTAL_REPORT C_$UnableToFreeMemory
      Procedure_Return
    End // If iResult Ne 0 Begin
    If pFormatOptions Begin
      Move (GlobalFree(pFormatOptions)) To iResult
      If iResult Ne 0 Begin
        Error DFERR_CRYSTAL_REPORT C_$UnableToFreeMemory
        Procedure_Return
      End // If iResult Begin
    End // If pFormatOptions Begin
  End_Procedure // ExportToMAPI

  //Doc/ Interface=Public
  Procedure ExportPrintWindow Integer iToMail // Integer iWaitUntilDone
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    Move (PEExportPrintWindow(iPrintJob,iToMail,True)) To iResult
    Send HandlePossibleError
  End_Procedure // ExportPrintWindow


  //Doc/ Interface=Public
  Procedure ExportWindowToDisk
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    Move (PEExportPrintWindow(iPrintJob,False,True)) To iResult
    Send HandlePossibleError
  End_Procedure // ExportWindowToDisk

  //Doc/ Interface=Public
  Procedure ExportWindowToMail
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    Move (PEExportPrintWindow(iPrintJob,True,True)) To iResult
    Send HandlePossibleError
  End_Procedure // ExportWindowToMail

  // *********************************************************************** //
  // ** Sorting Functions                                                 ** //
  // *********************************************************************** //

  //Doc/ Type=Property Interface=Public
  Function NSortFields Returns Integer
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    Move (PEGetNSortFields(iPrintJob)) To iResult
    // Crystal 7 fix...
    Move (Low(iResult)) To iResult
    Send HandlePossibleError
    Function_Return iResult
  End_Function // NSortFields

  //Doc/ Type=Property Interface=Public
  Function NthSortFieldName Integer iSortFieldN Returns String
    Integer iPrintJob iResult iTextHandle iTextLength
    String sPETextStructure sPEInteger sReturn
    Pointer pPETextStructure pPEInteger pReturn
    Get PrintJob To iPrintJob
    FillType PETextStructure With 0 To sPETextStructure
    GetAddress Of sPETextStructure To pPETextStructure
    FillType PEInteger With 0 To sPEInteger
    GetAddress Of sPEInteger To pPEInteger
    Move (PEGetNthSortField(iPrintJob,iSortFieldN,pPETextStructure,pPETextStructure+4,pPEInteger)) To iResult
    Send HandlePossibleError
    GetBuff From sPETextStructure At PETextStructure.textHandle To iTextHandle
    GetBuff From sPETextStructure At PETextStructure.textLength To iTextLength
    If iTextLength Gt 255 Move 255 To iTextLength
    Move (Repeat(Character(0),255)) To sReturn
    GetAddress Of sReturn To pReturn
    Move (PEGetHandleString(iTextHandle,pReturn,iTextLength)) To iResult
    Send HandlePossibleError
    Function_Return (ToOEM(cString(sReturn)))
  End_Function // NthSortFieldName

  //Doc/ Type=Property Interface=Public
  Function NthSortFieldDirection Integer iSortFieldN Returns Integer
    Integer iPrintJob iResult
    String sPETextStructure sPEInteger
    Pointer pPETextStructure pPEInteger
    Get PrintJob To iPrintJob
    FillType PETextStructure With 0 To sPETextStructure
    GetAddress Of sPETextStructure To pPETextStructure
    FillType PEInteger With 0 To sPEInteger
    GetAddress Of sPEInteger To pPEInteger
    Move (PEGetNthSortField(iPrintJob,iSortFieldN,pPETextStructure,pPETextStructure+4,pPEInteger)) To iResult
    Send HandlePossibleError
    GetBuff From sPEInteger At PEInteger.integer To iResult
    Function_Return iResult
  End_Function // NthSortFieldDirection

  //Doc/ Type=Property Interface=Public
  Procedure Set NthSortFieldName Integer iSortFieldN String sName
    Integer iPrintJob iDirection iResult
    If (NSortFields(self)-1) Ge iSortFieldN Begin
      Get PrintJob To iPrintJob
      Get NthSortFieldDirection iSortFieldN To iDirection
      Move (ToANSI(sName+Character(0))) To sName
      Move (PESetNthSortField(iPrintJob,iSortFieldN,sName,iDirection)) To iResult
      Send HandlePossibleError
    End // If (NSortFields(self)-1) Ge iSortFieldN Begin
    Else Begin
      Error DFERR_CRYSTAL_REPORT C_$InvalidFieldNumber
      Set FunctionGeneratedError_State To True
    End // Else Begin
  End_Procedure // Set NthSortFieldName

  //Doc/ Type=Property Interface=Public
  Procedure Set NthSortFieldDirection Integer iSortFieldN Integer iDirection
    Integer iPrintJob iResult
    String sName
    If (NSortFields(self)-1) Ge iSortFieldN Begin
      Get PrintJob To iPrintJob
      Get NthSortFieldName iSortFieldN To sName
      Move (ToANSI(sName+Character(0))) To sName
      Move (PESetNthSortField(iPrintJob,iSortFieldN,sName,iDirection)) To iResult
      Send HandlePossibleError
    End // If (NSortFields(self)-1) Ge iSortFieldN Begin
    Else Begin
      Error DFERR_CRYSTAL_REPORT C_$InvalidFieldNumber
      Set FunctionGeneratedError_State To True
    End // Else Begin
  End_Procedure // Set NthSortFieldDirection

  //Doc/ Interface=Public
  Procedure AddSortField String sName Integer iDirection
    Integer iPrintJob iSortFieldN iResult
    Get NSortFields To iSortFieldN
    Get PrintJob To iPrintJob
    Move (ToANSI(sName+Character(0))) To sName
    Move (PESetNthSortField(iPrintJob,iSortFieldN,sName,iDirection)) To iResult
    Send HandlePossibleError
  End_Procedure // AddSortField

  //Doc/ Interface=Public
  Procedure DeleteNthSortField Integer iSortFieldN
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    Move (PEDeleteNthSortField(iPrintJob,iSortFieldN)) To iResult
    Send HandlePossibleError
  End_Procedure // DeleteNthSortField

  //Doc/ Type=Property Interface=Public
  Function NGroupSortFields Returns Integer
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    Move (PEGetNGroupSortFields(iPrintJob)) To iResult
    // Crystal 7 fix...
    Move (Low(iResult)) To iResult
    Send HandlePossibleError
    Function_Return iResult
  End_Function // NGroupSortFields

  //Doc/ Type=Property Interface=Public
  Function NthGroupSortFieldName Integer iSortFieldN Returns String
    Integer iPrintJob iResult iTextHandle iTextLength
    String sPETextStructure sPEInteger sReturn
    Pointer pPETextStructure pPEInteger pReturn
    Get PrintJob To iPrintJob
    FillType PETextStructure With 0 To sPETextStructure
    GetAddress Of sPETextStructure To pPETextStructure
    FillType PEInteger With 0 To sPEInteger
    GetAddress Of sPEInteger To pPEInteger
    Move (PEGetNthGroupSortField(iPrintJob,iSortFieldN,pPETextStructure,pPETextStructure+4,pPEInteger)) To iResult
    Send HandlePossibleError
    GetBuff From sPETextStructure At PETextStructure.textHandle To iTextHandle
    GetBuff From sPETextStructure At PETextStructure.textLength To iTextLength
    If iTextLength Gt 255 Move 255 To iTextLength
    Move (Repeat(Character(0),255)) To sReturn
    GetAddress Of sReturn To pReturn
    Move (PEGetHandleString(iTextHandle,pReturn,iTextLength)) To iResult
    Send HandlePossibleError
    Function_Return (ToOEM(cString(sReturn)))
  End_Function // NthGroupSortFieldName

  //Doc/ Type=Property Interface=Public
  Function NthGroupSortFieldDirection Integer iSortFieldN Returns Integer
    Integer iPrintJob iResult
    String sPETextStructure sPEInteger
    Pointer pPETextStructure pPEInteger
    Get PrintJob To iPrintJob
    FillType PETextStructure With 0 To sPETextStructure
    GetAddress Of sPETextStructure To pPETextStructure
    FillType PEInteger With 0 To sPEInteger
    GetAddress Of sPEInteger To pPEInteger
    Move (PEGetNthGroupSortField(iPrintJob,iSortFieldN,pPETextStructure,pPETextStructure+4,pPEInteger)) To iResult
    Send HandlePossibleError
    GetBuff From sPEInteger At PEInteger.integer To iResult
    Function_Return iResult
  End_Function // NthGroupSortFieldDirection

  //Doc/ Type=Property Interface=Public
  Procedure Set NthGroupSortFieldName Integer iSortFieldN String sName
    Integer iPrintJob iDirection iResult
    If (NGroupSortFields(self)-1) Ge iSortFieldN Begin
      Get PrintJob To iPrintJob
      Get NthGroupSortFieldDirection iSortFieldN To iDirection
      Move (ToANSI(sName+Character(0))) To sName
      Move (PESetNthGroupSortField(iPrintJob,iSortFieldN,sName,iDirection)) To iResult
      Send HandlePossibleError
    End // If (NSortFields(self)-1) Ge iSortFieldN Begin
    Else Begin
      Error DFERR_CRYSTAL_REPORT C_$InvalidFieldNumber
      Set FunctionGeneratedError_State To True
    End // Else Begin
  End_Procedure // Set NthGroupSortFieldName

  //Doc/ Type=Property Interface=Public
  Procedure Set NthGroupSortFieldDirection Integer iSortFieldN Integer iDirection
    Integer iPrintJob iResult
    String sName
    If (NGroupSortFields(self)-1) Ge iSortFieldN Begin
      Get PrintJob To iPrintJob
      Get NthGroupSortFieldName iSortFieldN To sName
      Move (ToANSI(sName+Character(0))) To sName
      Move (PESetNthGroupSortField(iPrintJob,iSortFieldN,sName,iDirection)) To iResult
      Send HandlePossibleError
    End // If (NSortFields(self)-1) Ge iSortFieldN Begin
    Else Begin
      Error DFERR_CRYSTAL_REPORT C_$InvalidFieldNumber
      Set FunctionGeneratedError_State To True
    End // Else Begin
  End_Procedure // Set NthGroupSortFieldDirection

  //Doc/ Interface=Public
  Procedure AddGroupSortField String sName Integer iDirection
    Integer iPrintJob iSortFieldN iResult
    Get NGroupSortFields To iSortFieldN
    Get PrintJob To iPrintJob
    Move (ToANSI(sName+Character(0))) To sName
    Move (PESetNthGroupSortField(iPrintJob,iSortFieldN,sName,iDirection)) To iResult
    Send HandlePossibleError
  End_Procedure // AddGroupSortField

  //Doc/ Interface=Public
  Procedure DeleteNthGroupSortField Integer iSortFieldN
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    Move (PEDeleteNthGroupSortField(iPrintJob,iSortFieldN)) To iResult
    Send HandlePossibleError
  End_Procedure // DeleteNthGroupSortField

  // *********************************************************************** //
  // ** Formula Functions                                                 ** //
  // *********************************************************************** //

  //Doc/ Type=Property Interface=Public
  Function Formula String sFormulaName Returns String
    Integer iPrintJob iResult iTextHandle iTextLength
    Pointer pPETextStructure pReturn
    String sPETextStructure sReturn
    Get PrintJob To iPrintJob
    Move (ToANSI(sFormulaName+Character(0))) To sFormulaName
    FillType PETextStructure With 0 To sPETextStructure
    GetAddress Of sPETextStructure To pPETextStructure
    Move (PEGetFormula(iPrintJob,sFormulaName,pPETextStructure,pPETextStructure+4)) To iResult
    Send HandlePossibleError
    GetBuff From sPETextStructure At PETextStructure.textHandle To iTextHandle
    GetBuff From sPETextStructure At PETextStructure.textLength To iTextLength
    If iTextLength Gt 255 Move 255 To iTextLength
    Move (Repeat(Character(0),255)) To sReturn
    GetAddress Of sReturn To pReturn
    Move (PEGetHandleString(iTextHandle,pReturn,iTextLength)) To iResult
    Send HandlePossibleError
    Function_Return (ToOEM(cString(sReturn)))
  End_Function // Formula

  //Doc/ Type=Property Interface=Public
  Procedure Set Formula String sFormulaName String sFormulaText
    Integer iPrintJob iResult
    Pointer pFormulaName
    Get PrintJob To iPrintJob
    Move (ToANSI(sFormulaName+Character(0))) To sFormulaName
    Move (ToANSI(sFormulaText+Character(0))) To sFormulaText
    Move (PESetFormula(iPrintJob,sFormulaName,sFormulaText)) To iResult
    Send HandlePossibleError
  End_Procedure // Set Formula

  //Doc/ Interface=Public
  Function CheckFormula String sFormulaName Returns Integer
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    Move (ToANSI(sFormulaName+Character(0))) To sFormulaName
    Move (PECheckFormula(iPrintJob,sFormulaName)) To iResult
    Send HandlePossibleError
    Function_Return iResult
  End_Function // CheckFormula

  //Doc/ Type=Property Interface=Public
  Function NFormulas Returns Integer
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    Move (PEGetNFormulas(iPrintJob)) To iResult
    // Crystal 7 fix...
    Move (Low(iResult)) To iResult
    Send HandlePossibleError
    Function_Return iResult
  End_Function // NFormulas

  //Doc/ Type=Property Interface=Public
  Function NthFormulaName Integer iFormulaN Returns String
    Integer iPrintJob iResult iTextHandle iTextLength
    String sFormulaName sFormulaText sReturn
    Pointer pFormulaName pFormulaText pReturn
    Get PrintJob To iPrintJob
    FillType PETextStructure With 0 To sFormulaName
    FillType PETextStructure With 0 To sFormulaText
    GetAddress Of sFormulaName To pFormulaName
    GetAddress Of sFormulaText To pFormulaText
    Move (PEGetNthFormula(iPrintJob,iFormulaN,pFormulaName,pFormulaName+4,pFormulaText,pFormulaText+4)) To iResult
    Send HandlePossibleError
    GetBuff From sFormulaName At PETextStructure.textHandle To iTextHandle
    GetBuff From sFormulaName At PETextStructure.textLength To iTextLength
    If iTextLength Gt 255 Move 255 To iTextLength
    Move (Repeat(Character(0),255)) To sReturn
    GetAddress Of sReturn To pReturn
    Move (PEGetHandleString(iTextHandle,pReturn,iTextLength)) To iResult
    Send HandlePossibleError
    Function_Return (ToOEM(cString(sReturn)))
  End_Function // NthFormulaName

  //Doc/ Type=Property Interface=Public
  Function NthFormulaText Integer iFormulaN Returns String
    Integer iPrintJob iResult iTextHandle iTextLength
    String sFormulaName sFormulaText sReturn
    Pointer pFormulaName pFormulaText pReturn
    Get PrintJob To iPrintJob
    FillType PETextStructure With 0 To sFormulaName
    FillType PETextStructure With 0 To sFormulaText
    GetAddress Of sFormulaName To pFormulaName
    GetAddress Of sFormulaText To pFormulaText
    Move (PEGetNthFormula(iPrintJob,iFormulaN,pFormulaName,pFormulaName+4,pFormulaText,pFormulaText+4)) To iResult
    Send HandlePossibleError
    GetBuff From sFormulaText At PETextStructure.textHandle To iTextHandle
    GetBuff From sFormulaText At PETextStructure.textLength To iTextLength
    If iTextLength Gt 255 Move 255 To iTextLength
    Move (Repeat(Character(0),255)) To sReturn
    GetAddress Of sReturn To pReturn
    Move (PEGetHandleString(iTextHandle,pReturn,iTextLength)) To iResult
    Send HandlePossibleError
    Function_Return (ToOEM(cString(sReturn)))
  End_Function // NthFormulaText

  // *********************************************************************** //
  // ** Selection Formula Functions                                       ** //
  // *********************************************************************** //

  //Doc/ Type=Property Interface=Public
  Function SelectionFormula Returns String
    Integer iPrintJob iResult iTextHandle iTextLength
    String sPETextStructure sReturn
    Pointer pPETextStructure pReturn
    Get PrintJob To iPrintJob
    FillType PETextStructure With 0 To sPETextStructure
    GetAddress Of sPETextStructure To pPETextStructure
    Move (PEGetSelectionFormula(iPrintJob,pPETextStructure,pPETextStructure+4)) To iResult
    Send HandlePossibleError
    GetBuff From sPETextStructure At PETextStructure.textHandle To iTextHandle
    GetBuff From sPETextStructure At PETextStructure.textLength To iTextLength
    If iTextLength Gt 255 Move 255 To iTextLength
    Move (Repeat(Character(0),255)) To sReturn
    GetAddress Of sReturn To pReturn
    Move (PEGetHandleString(iTextHandle,pReturn,iTextLength)) To iResult
    Send HandlePossibleError
    Function_Return (ToOEM(Replaces(Character(0),(cString(sReturn)),"")))
  End_Function // SelectionFormula

  //Doc/ Type=Property Interface=Public
  Procedure Set SelectionFormula String sFormulaString
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    Move (ToANSI(sFormulaString+Character(0))) To sFormulaString
    Move (PESetSelectionFormula(iPrintJob,sFormulaString)) To iResult
    Send HandlePossibleError
  End_Procedure // Set SelectionFormula

  //Doc/ Interface=Public
  Function CheckSelectionFormula Returns Integer
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    Move (PECheckSelectionFormula(iPrintJob)) To iResult
    Send HandlePossibleError
    Function_Return iResult
  End_Function // CheckSelectionFormula

  //Doc/ Type=Property Interface=Public
  Function GroupSelectionFormula Returns String
    Integer iPrintJob iResult iTextHandle iTextLength
    String sPETextStructure sReturn
    Pointer pPETextStructure pReturn
    Get PrintJob To iPrintJob
    FillType PETextStructure With 0 To sPETextStructure
    GetAddress Of sPETextStructure To pPETextStructure
    Move (PEGetGroupSelectionFormula(iPrintJob,pPETextStructure,pPETextStructure+4)) To iResult
    Send HandlePossibleError
    GetBuff From sPETextStructure At PETextStructure.textHandle To iTextHandle
    GetBuff From sPETextStructure At PETextStructure.textLength To iTextLength
    If iTextLength Gt 255 Move 255 To iTextLength
    Move (Repeat(Character(0),255)) To sReturn
    GetAddress Of sReturn To pReturn
    Move (PEGetHandleString(iTextHandle,pReturn,iTextLength)) To iResult
    Send HandlePossibleError
    Function_Return (ToOEM(cString(sReturn)))
  End_Function // GroupSelectionFormula

  //Doc/ Type=Property Interface=Public
  Procedure Set GroupSelectionFormula String sFormulaString
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    Move (ToANSI(sFormulaString+Character(0))) To sFormulaString
    Move (PESetGroupSelectionFormula(iPrintJob,sFormulaString)) To iResult
    Send HandlePossibleError
  End_Procedure // Set GroupSelectionFormula

  //Doc/ Interface=Public
  Function CheckGroupSelectionFormula Returns Integer
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    Move (PECheckGroupSelectionFormula(iPrintJob)) To iResult
    Send HandlePossibleError
    Function_Return iResult
  End_Function // CheckGroupSelectionFormula

  // *********************************************************************** //
  // ** Server Management Functions                                       ** //
  // *********************************************************************** //

  //Doc/ Interface=Public
  Procedure LogOnServer String sDLLName String sServerName String sDatabaseName String sUserID String sPassword
    Integer iResult iOldLength
    Pointer pPELogOnInfo
    String sPELogOnInfo
    Move (ToANSI(sDLLName+Character(0))) To sDLLName
    Move (ToANSI(sServerName+Character(0))) To sServerName
    Move (ToANSI(sDatabaseName+Character(0))) To sDatabaseName
    Move (ToANSI(sUserID+Character(0))) To sUserID
    Move (ToANSI(sPassword+Character(0))) To sPassword
    FillType PELogOnInfo With 0 To sPELogOnInfo
    Put PELogOnInfo_Size To sPELogOnInfo At PELogOnInfo.StructSize
    Put_String sServerName To sPELogOnInfo At PELogOnInfo.ServerName
    Put_String sDatabaseName To sPELogOnInfo At PELogOnInfo.DatabaseName
    Put_String sUserID To sPELogOnInfo At PELogOnInfo.UserID
    Put_String sPassword To sPELogOnInfo At PELogOnInfo.Password
    GetAddress Of sPELogOnInfo To pPELogOnInfo
    Move (PELogOnServer(sDLLName,pPELogOnInfo)) To iResult
    Send HandlePossibleError
  End_Procedure // LogOnServer

  //Doc/ Interface=Public
  Procedure LogOffServer String sDLLName String sServerName String sDatabaseName String sUserID String sPassword
    Integer iResult
    String sPELogOnInfo
    Pointer pPELogOnInfo
    Move (ToANSI(sDLLName+Character(0))) To sDLLName
    Move (ToANSI(sServerName+Character(0))) To sServerName
    Move (ToANSI(sDatabaseName+Character(0))) To sDatabaseName
    Move (ToANSI(sUserID+Character(0))) To sUserID
    Move (ToANSI(sPassword+Character(0))) To sPassword
    FillType PELogOnInfo With 0 To sPELogOnInfo
    Put PELogOnInfo_Size To sPELogOnInfo At PELogOnInfo.StructSize
    Put_String sServerName To sPELogOnInfo At PELogOnInfo.ServerName
    Put_String sDatabaseName To sPELogOnInfo At PELogOnInfo.DatabaseName
    Put_String sUserID To sPELogOnInfo At PELogOnInfo.UserID
    Put_String sPassword To sPELogOnInfo At PELogOnInfo.Password
    GetAddress Of sPELogOnInfo To pPELogOnInfo
    Move (PELogOffServer(sDLLName,pPELogOnInfo)) To iResult
    Send HandlePossibleError
  End_Procedure // LogOffServer

  //Doc/ Type=Property Interface=Public
  Function SQLQuery Returns String
    Integer iPrintJob iResult iTextHandle iTextLength iOldLength
    String sPETextStructure
    Pointer pPETextStructure pReturn
    Get PrintJob To iPrintJob
    FillType PETextStructure With 0 To sPETextStructure
    GetAddress Of sPETextStructure To pPETextStructure
    Move (PEGetSQLQuery(iPrintJob,pPETextStructure,pPETextStructure+4)) To iResult
    Send HandlePossibleError
    GetBuff From sPETextStructure At PETextStructure.textHandle To iTextHandle
    GetBuff From sPETextStructure At PETextStructure.textLength To iTextLength
    Get_Argument_Size To iOldLength
    If iTextLength Gt iOldLength //set_argument_size iTextLength
    String sReturn
    //set_argument_size iOldLength
    Move (Repeat(Character(0),iTextLength)) To sReturn
    GetAddress Of sReturn To pReturn
    Move (PEGetHandleString(iTextHandle,pReturn,iTextLength)) To iResult
    Send HandlePossibleError
    Function_Return (ToOEM(cString(sReturn)))
  End_Function // SQLQuery

  //Doc/ Type=Property Interface=Public
  Procedure Set SQLQuery String sQueryString
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    Move (ToANSI(sQueryString+Character(0))) To sQueryString
    Move (PESetSQLQuery(iPrintJob,sQueryString)) To iResult
    Send HandlePossibleError
  End_Procedure // Set SQLQuery

  // *********************************************************************** //
  // ** Print Format Management Functions                                 ** //
  // *********************************************************************** //

  //Doc/ Type=Property Interface=Public
  Function ReportTitle Returns String
    Integer iPrintJob iResult iTextHandle iTextLength
    String sPETextStructure sReturn
    Pointer pPETextStructure pReturn
    Get PrintJob To iPrintJob
    FillType PETextStructure With 0 To sPETextStructure
    GetAddress Of sPETextStructure To pPETextStructure
    Move (PEGetReportTitle(iPrintJob,pPETextStructure,pPETextStructure+4)) To iResult
    Send HandlePossibleError
    GetBuff From sPETextStructure At PETextStructure.textHandle To iTextHandle
    GetBuff From sPETextStructure At PETextStructure.textLength To iTextLength
    If iTextLength Gt 255 Move 255 To iTextLength
    Move (Repeat(Character(0),255)) To sReturn
    GetAddress Of sReturn To pReturn
    Move (PEGetHandleString(iTextHandle,pReturn,iTextLength)) To iResult
    Send HandlePossibleError
    Function_Return (ToOEM(cString(sReturn)))
  End_Function // ReportTitle

  //Doc/ Type=Property Interface=Public
  Procedure Set ReportTitle String sTitle
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    Move (ToANSI(sTitle+Character(0))) To sTitle
    Move (PESetReportTitle(iPrintJob,sTitle)) To iResult
    Send HandlePossibleError
  End_Procedure // Set ReportTitle

  //Doc/ Type=Property Interface=Public
  Function StartPageN Returns Integer
    Integer iPrintJob iResult
    String sPEPrintOptions
    Pointer pPEPrintOptions
    Get PrintJob To iPrintJob
    FillType PEPrintOptions With 0 To sPEPrintOptions
    Put PEPrintOptions_Size To sPEPrintOptions At PEPrintOptions.StructSize
    GetAddress Of sPEPrintOptions To pPEPrintOptions
    Move (PEGetPrintOptions(iPrintJob,pPEPrintOptions)) To iResult
    Send HandlePossibleError
    GetBuff From sPEPrintOptions At PEPrintOptions.startPageN To iResult
    Function_Return iResult
  End_Function // StartPageN

  //Doc/ Type=Property Interface=Public
  Function StopPageN Returns Integer
    Integer iPrintJob iResult
    String sPEPrintOptions
    Pointer pPEPrintOptions
    Get PrintJob To iPrintJob
    FillType PEPrintOptions With 0 To sPEPrintOptions
    Put PEPrintOptions_Size To sPEPrintOptions At PEPrintOptions.StructSize
    GetAddress Of sPEPrintOptions To pPEPrintOptions
    Move (PEGetPrintOptions(iPrintJob,pPEPrintOptions)) To iResult
    Send HandlePossibleError
    GetBuff From sPEPrintOptions At PEPrintOptions.stopPageN To iResult
    Function_Return iResult
  End_Function // StopPageN

  //Doc/ Type=Property Interface=Public
  Function NReportCopies Returns Integer
    Integer iPrintJob iResult
    String sPEPrintOptions
    Pointer pPEPrintOptions
    Get PrintJob To iPrintJob
    FillType PEPrintOptions With 0 To sPEPrintOptions
    Put PEPrintOptions_Size To sPEPrintOptions At PEPrintOptions.StructSize
    GetAddress Of sPEPrintOptions To pPEPrintOptions
    Move (PEGetPrintOptions(iPrintJob,pPEPrintOptions)) To iResult
    Send HandlePossibleError
    GetBuff From sPEPrintOptions At PEPrintOptions.NReportCopies To iResult
    Function_Return iResult
  End_Function // NReportCopies

  //Doc/ Type=Property Interface=Public
  Function Collation Returns Integer
    Integer iPrintJob iResult
    String sPEPrintOptions
    Pointer pPEPrintOptions
    Get PrintJob To iPrintJob
    FillType PEPrintOptions With 0 To sPEPrintOptions
    Put PEPrintOptions_Size To sPEPrintOptions At PEPrintOptions.StructSize
    GetAddress Of sPEPrintOptions To pPEPrintOptions
    Move (PEGetPrintOptions(iPrintJob,pPEPrintOptions)) To iResult
    Send HandlePossibleError
    GetBuff From sPEPrintOptions At PEPrintOptions.collation To iResult
    Function_Return iResult
  End_Function // Collation

  //Doc/ Type=Property Interface=Public
  Procedure Set StartPageN Integer iStartPageN
    Integer iPrintJob iResult
    String sPEPrintOptions
    Pointer pPEPrintOptions
    Get PrintJob To iPrintJob
    FillType PEPrintOptions With 0 To sPEPrintOptions
    Put PEPrintOptions_Size To sPEPrintOptions At PEPrintOptions.StructSize
    GetAddress Of sPEPrintOptions To pPEPrintOptions
    Move (PEGetPrintOptions(iPrintJob,pPEPrintOptions)) To iResult
    Send HandlePossibleError
    Put iStartPageN To sPEPrintOptions At PEPrintOptions.startPageN
    GetAddress Of sPEPrintOptions To pPEPrintOptions
    Move (PESetPrintOptions(iPrintJob,pPEPrintOptions)) To iResult
    Send HandlePossibleError
  End_Procedure // Set StartPageN

  //Doc/ Type=Property Interface=Public
  Procedure Set StopPageN Integer iStopPageN
    Integer iPrintJob iResult
    String sPEPrintOptions
    Pointer pPEPrintOptions
    Get PrintJob To iPrintJob
    FillType PEPrintOptions With 0 To sPEPrintOptions
    Put PEPrintOptions_Size To sPEPrintOptions At PEPrintOptions.StructSize
    GetAddress Of sPEPrintOptions To pPEPrintOptions
    Move (PEGetPrintOptions(iPrintJob,pPEPrintOptions)) To iResult
    Send HandlePossibleError
    Put iStopPageN To sPEPrintOptions At PEPrintOptions.stopPageN
    GetAddress Of sPEPrintOptions To pPEPrintOptions
    Move (PESetPrintOptions(iPrintJob,pPEPrintOptions)) To iResult
    Send HandlePossibleError
  End_Procedure // Set StopPageN

  //Doc/ Type=Property Interface=Public
  Procedure Set NReportCopies Integer iNReportCopies
    Integer iPrintJob iResult
    String sPEPrintOptions
    Pointer pPEPrintOptions
    Get PrintJob To iPrintJob
    FillType PEPrintOptions With 0 To sPEPrintOptions
    Put PEPrintOptions_Size To sPEPrintOptions At PEPrintOptions.StructSize
    GetAddress Of sPEPrintOptions To pPEPrintOptions
    Move (PEGetPrintOptions(iPrintJob,pPEPrintOptions)) To iResult
    Send HandlePossibleError
    Put iNReportCopies To sPEPrintOptions At PEPrintOptions.nReportCopies
    GetAddress Of sPEPrintOptions To pPEPrintOptions
    Move (PESetPrintOptions(iPrintJob,pPEPrintOptions)) To iResult
    Send HandlePossibleError
  End_Procedure // Set NReportCopies

  //Doc/ Type=Property Interface=Public
  Procedure Set Collation Integer iCollation
    Integer iPrintJob iResult
    String sPEPrintOptions
    Pointer pPEPrintOptions
    Get PrintJob To iPrintJob
    FillType PEPrintOptions With 0 To sPEPrintOptions
    Put PEPrintOptions_Size To sPEPrintOptions At PEPrintOptions.StructSize
    GetAddress Of sPEPrintOptions To pPEPrintOptions
    Move (PEGetPrintOptions(iPrintJob,pPEPrintOptions)) To iResult
    Send HandlePossibleError
    Put iCollation To sPEPrintOptions At PEPrintOptions.collation
    GetAddress Of sPEPrintOptions To pPEPrintOptions
    Move (PESetPrintOptions(iPrintJob,pPEPrintOptions)) To iResult
    Send HandlePossibleError
  End_Procedure // Set Collation

  //Doc/ Type=Property Interface=Public
  Function Visible Integer iSectionCode Returns Integer
    Integer iPrintJob iResult
    String sPESectionOptions
    Pointer pPESectionOptions
    Get PrintJob To iPrintJob
    FillType PESectionOptions With 0 To sPESectionOptions
    Put PESectionOptions_Size To sPESectionOptions At PESectionOptions.StructSize
    GetAddress Of sPESectionOptions To pPESectionOptions
    Move (PEGetSectionFormat(iPrintJob,iSectionCode,pPESectionOptions)) To iResult
    Send HandlePossibleError
    GetBuff From sPESectionOptions At PESectionOptions.visible To iResult
    Function_Return iResult
  End_Function // Visible

  //Doc/ Interface=Public Type=Property
  Function NewPageBefore Integer iSectionCode Returns Integer
    Integer iPrintJob iResult
    String sPESectionOptions
    Pointer pPESectionOptions
    Get PrintJob To iPrintJob
    FillType PESectionOptions With 0 To sPESectionOptions
    Put PESectionOptions_Size To sPESectionOptions At PESectionOptions.StructSize
    GetAddress Of sPESectionOptions To pPESectionOptions
    Move (PEGetSectionFormat(iPrintJob,iSectionCode,pPESectionOptions)) To iResult
    Send HandlePossibleError
    GetBuff From sPESectionOptions At PESectionOptions.NewPageBefore To iResult
    Function_Return iResult
  End_Function // NewPageBefore

  //Doc/ Interface=Public Type=Property
  Function NewPageAfter Integer iSectionCode Returns Integer
    Integer iPrintJob iResult
    String sPESectionOptions
    Pointer pPESectionOptions
    Get PrintJob To iPrintJob
    FillType PESectionOptions With 0 To sPESectionOptions
    Put PESectionOptions_Size To sPESectionOptions At PESectionOptions.StructSize
    GetAddress Of sPESectionOptions To pPESectionOptions
    Move (PEGetSectionFormat(iPrintJob,iSectionCode,pPESectionOptions)) To iResult
    Send HandlePossibleError
    GetBuff From sPESectionOptions At PESectionOptions.NewPageAfter To iResult
    Function_Return iResult
  End_Function // NewPageAfter

  //Doc/ Interface=Public Type=Property
  Function KeepTogether Integer iSectionCode Returns Integer
    Integer iPrintJob iResult
    String sPESectionOptions
    Pointer pPESectionOptions
    Get PrintJob To iPrintJob
    FillType PESectionOptions With 0 To sPESectionOptions
    Put PESectionOptions_Size To sPESectionOptions At PESectionOptions.StructSize
    GetAddress Of sPESectionOptions To pPESectionOptions
    Move (PEGetSectionFormat(iPrintJob,iSectionCode,pPESectionOptions)) To iResult
    Send HandlePossibleError
    GetBuff From sPESectionOptions At PESectionOptions.KeepTogether To iResult
    Function_Return iResult
  End_Function // KeepTogether

  //Doc/ Interface=Public Type=Property
  Function SuppressBlankLines Integer iSectionCode Returns Integer
    Integer iPrintJob iResult
    String sPESectionOptions
    Pointer pPESectionOptions
    Get PrintJob To iPrintJob
    FillType PESectionOptions With 0 To sPESectionOptions
    Put PESectionOptions_Size To sPESectionOptions At PESectionOptions.StructSize
    GetAddress Of sPESectionOptions To pPESectionOptions
    Move (PEGetSectionFormat(iPrintJob,iSectionCode,pPESectionOptions)) To iResult
    Send HandlePossibleError
    GetBuff From sPESectionOptions At PESectionOptions.SuppressBlankLines To iResult
    Function_Return iResult
  End_Function // SuppressBlankLines

  //Doc/ Interface=Public Type=Property
  Function ResetPageNAfter Integer iSectionCode Returns Integer
    Integer iPrintJob iResult
    String sPESectionOptions
    Pointer pPESectionOptions
    Get PrintJob To iPrintJob
    FillType PESectionOptions With 0 To sPESectionOptions
    Put PESectionOptions_Size To sPESectionOptions At PESectionOptions.StructSize
    GetAddress Of sPESectionOptions To pPESectionOptions
    Move (PEGetSectionFormat(iPrintJob,iSectionCode,pPESectionOptions)) To iResult
    Send HandlePossibleError
    GetBuff From sPESectionOptions At PESectionOptions.ResetPageNAfter To iResult
    Function_Return iResult
  End_Function // ResetPageNAfter

  //Doc/ Interface=Public Type=Property
  Function PrintAtBottomOfPage Integer iSectionCode Returns Integer
    Integer iPrintJob iResult
    String sPESectionOptions
    Pointer pPESectionOptions
    Get PrintJob To iPrintJob
    FillType PESectionOptions With 0 To sPESectionOptions
    Put PESectionOptions_Size To sPESectionOptions At PESectionOptions.StructSize
    GetAddress Of sPESectionOptions To pPESectionOptions
    Move (PEGetSectionFormat(iPrintJob,iSectionCode,pPESectionOptions)) To iResult
    Send HandlePossibleError
    GetBuff From sPESectionOptions At PESectionOptions.printAtBottomOfPage To iResult
    Function_Return iResult
  End_Function // PrintAtBottomOfPage

  //Doc/ Type=Property Interface=Public
  Procedure Set Visible Integer iSectionCode Integer iVisible
    Integer iPrintJob iResult
    String sPESectionOptions
    Pointer pPESectionOptions
    Get PrintJob To iPrintJob
    FillType PESectionOptions With 0 To sPESectionOptions
    Put PESectionOptions_Size To sPESectionOptions At PESectionOptions.StructSize
    GetAddress Of sPESectionOptions To pPESectionOptions
    Move (PEGetSectionFormat(iPrintJob,iSectionCode,pPESectionOptions)) To iResult
    Send HandlePossibleError
    Put iVisible To sPESectionOptions At PESectionOptions.visible
    GetAddress Of sPESectionOptions To pPESectionOptions
    Move (PESetSectionFormat(iPrintJob,iSectionCode,pPESectionOptions)) To iResult
    Send HandlePossibleError
  End_Procedure // Set Visible

  //Doc/ Type=Property Interface=Public
  Procedure Set NewPageBefore Integer iSectionCode Integer iNewPageBefore
    Integer iPrintJob iResult
    String sPESectionOptions
    Pointer pPESectionOptions
    Get PrintJob To iPrintJob
    FillType PESectionOptions With 0 To sPESectionOptions
    Put PESectionOptions_Size To sPESectionOptions At PESectionOptions.StructSize
    GetAddress Of sPESectionOptions To pPESectionOptions
    Move (PEGetSectionFormat(iPrintJob,iSectionCode,pPESectionOptions)) To iResult
    Send HandlePossibleError
    Put iNewPageBefore To sPESectionOptions At PESectionOptions.NewPageBefore
    GetAddress Of sPESectionOptions To pPESectionOptions
    Move (PESetSectionFormat(iPrintJob,iSectionCode,pPESectionOptions)) To iResult
    Send HandlePossibleError
  End_Procedure // Set NewPageBefore

  //Doc/ Type=Property Interface=Public
  Procedure Set NewPageAfter Integer iSectionCode Integer iNewPageAfter
    Integer iPrintJob iResult
    String sPESectionOptions
    Pointer pPESectionOptions
    Get PrintJob To iPrintJob
    FillType PESectionOptions With 0 To sPESectionOptions
    Put PESectionOptions_Size To sPESectionOptions At PESectionOptions.StructSize
    GetAddress Of sPESectionOptions To pPESectionOptions
    Move (PEGetSectionFormat(iPrintJob,iSectionCode,pPESectionOptions)) To iResult
    Send HandlePossibleError
    Put iNewPageAfter To sPESectionOptions At PESectionOptions.NewPageAfter
    GetAddress Of sPESectionOptions To pPESectionOptions
    Move (PESetSectionFormat(iPrintJob,iSectionCode,pPESectionOptions)) To iResult
    Send HandlePossibleError
  End_Procedure // Set NewPageAfter

  //Doc/ Type=Property Interface=Public
  Procedure Set KeepTogether Integer iSectionCode Integer iKeepTogether
    Integer iPrintJob iResult
    String sPESectionOptions
    Pointer pPESectionOptions
    Get PrintJob To iPrintJob
    FillType PESectionOptions With 0 To sPESectionOptions
    Put PESectionOptions_Size To sPESectionOptions At PESectionOptions.StructSize
    GetAddress Of sPESectionOptions To pPESectionOptions
    Move (PEGetSectionFormat(iPrintJob,iSectionCode,pPESectionOptions)) To iResult
    Send HandlePossibleError
    Put iKeepTogether To sPESectionOptions At PESectionOptions.KeepTogether
    GetAddress Of sPESectionOptions To pPESectionOptions
    Move (PESetSectionFormat(iPrintJob,iSectionCode,pPESectionOptions)) To iResult
    Send HandlePossibleError
  End_Procedure // Set KeepTogether

  //Doc/ Type=Property Interface=Public
  Procedure Set SuppressBlankLines Integer iSectionCode Integer iSuppressBlankLines
    Integer iPrintJob iResult
    String sPESectionOptions
    Pointer pPESectionOptions
    Get PrintJob To iPrintJob
    FillType PESectionOptions With 0 To sPESectionOptions
    Put PESectionOptions_Size To sPESectionOptions At PESectionOptions.StructSize
    GetAddress Of sPESectionOptions To pPESectionOptions
    Move (PEGetSectionFormat(iPrintJob,iSectionCode,pPESectionOptions)) To iResult
    Send HandlePossibleError
    Put iSuppressBlankLines To sPESectionOptions At PESectionOptions.SuppressBlankLines
    GetAddress Of sPESectionOptions To pPESectionOptions
    Move (PESetSectionFormat(iPrintJob,iSectionCode,pPESectionOptions)) To iResult
    Send HandlePossibleError
  End_Procedure // Set SuppressBlankLines

  //Doc/ Type=Property Interface=Public
  Procedure Set ResetPageNAfter Integer iSectionCode Integer iResetPageNAfter
    Integer iPrintJob iResult
    String sPESectionOptions
    Pointer pPESectionOptions
    Get PrintJob To iPrintJob
    FillType PESectionOptions With 0 To sPESectionOptions
    Put PESectionOptions_Size To sPESectionOptions At PESectionOptions.StructSize
    GetAddress Of sPESectionOptions To pPESectionOptions
    Move (PEGetSectionFormat(iPrintJob,iSectionCode,pPESectionOptions)) To iResult
    Send HandlePossibleError
    Put iResetPageNAfter To sPESectionOptions At PESectionOptions.ResetPageNAfter
    GetAddress Of sPESectionOptions To pPESectionOptions
    Move (PESetSectionFormat(iPrintJob,iSectionCode,pPESectionOptions)) To iResult
    Send HandlePossibleError
  End_Procedure // Set ResetPageNAfter

  //Doc/ Type=Property Interface=Public
  Procedure Set PrintAtBottomOfPage Integer iSectionCode Integer iPrintAtBottomOfPage
    Integer iPrintJob iResult
    String sPESectionOptions
    Pointer pPESectionOptions
    Get PrintJob To iPrintJob
    FillType PESectionOptions With 0 To sPESectionOptions
    Put PESectionOptions_Size To sPESectionOptions At PESectionOptions.StructSize
    GetAddress Of sPESectionOptions To pPESectionOptions
    Move (PEGetSectionFormat(iPrintJob,iSectionCode,pPESectionOptions)) To iResult
    Send HandlePossibleError
    Put iPrintAtBottomOfPage To sPESectionOptions At PESectionOptions.PrintAtBottomOfPage
    GetAddress Of sPESectionOptions To pPESectionOptions
    Move (PESetSectionFormat(iPrintJob,iSectionCode,pPESectionOptions)) To iResult
    Send HandlePossibleError
  End_Procedure // Set PrintAtBottomOfPage

  //Doc/ Type=Property Interface=Public
  Function LeftMargin Returns Integer
    Integer iPrintJob iResult
    String sLeft sRight sTop sBottom
    Pointer pLeft pRight pTop pBottom
    Get PrintJob To iPrintJob
    FillType PEInteger With 0 To sLeft
    FillType PEInteger With 0 To sRight
    FillType PEInteger With 0 To sTop
    FillType PEInteger With 0 To sBottom
    GetAddress Of sLeft To pLeft
    GetAddress Of sRight To pRight
    GetAddress Of sTop To pTop
    GetAddress Of sBottom To pBottom
    Move (PEGetMargins(iPrintJob,pLeft,pRight,pTop,pBottom)) To iResult
    Send HandlePossibleError
    GetBuff From sLeft At PEInteger.integer To iResult
    Function_Return iResult
  End_Function // LeftMargin

  //Doc/ Type=Property Interface=Public
  Function RightMargin Returns Integer
    Integer iPrintJob iResult
    String sLeft sRight sTop sBottom
    Pointer pLeft pRight pTop pBottom
    Get PrintJob To iPrintJob
    FillType PEInteger With 0 To sLeft
    FillType PEInteger With 0 To sRight
    FillType PEInteger With 0 To sTop
    FillType PEInteger With 0 To sBottom
    GetAddress Of sLeft To pLeft
    GetAddress Of sRight To pRight
    GetAddress Of sTop To pTop
    GetAddress Of sBottom To pBottom
    Move (PEGetMargins(iPrintJob,pLeft,pRight,pTop,pBottom)) To iResult
    Send HandlePossibleError
    GetBuff From sRight At PEInteger.integer To iResult
    Function_Return iResult
  End_Function // RightMargin

  //Doc/ Type=Property Interface=Public
  Function TopMargin Returns Integer
    Integer iPrintJob iResult
    String sLeft sRight sTop sBottom
    Pointer pLeft pRight pTop pBottom
    Get PrintJob To iPrintJob
    FillType PEInteger With 0 To sLeft
    FillType PEInteger With 0 To sRight
    FillType PEInteger With 0 To sTop
    FillType PEInteger With 0 To sBottom
    GetAddress Of sLeft To pLeft
    GetAddress Of sRight To pRight
    GetAddress Of sTop To pTop
    GetAddress Of sBottom To pBottom
    Move (PEGetMargins(iPrintJob,pLeft,pRight,pTop,pBottom)) To iResult
    Send HandlePossibleError
    GetBuff From sTop At PEInteger.integer To iResult
    Function_Return iResult
  End_Function // TopMargin

  //Doc/ Type=Property Interface=Public
  Function BottomMargin Returns Integer
    Integer iPrintJob iResult
    String sLeft sRight sTop sBottom
    Pointer pLeft pRight pTop pBottom
    Get PrintJob To iPrintJob
    FillType PEInteger With 0 To sLeft
    FillType PEInteger With 0 To sRight
    FillType PEInteger With 0 To sTop
    FillType PEInteger With 0 To sBottom
    GetAddress Of sLeft To pLeft
    GetAddress Of sRight To pRight
    GetAddress Of sTop To pTop
    GetAddress Of sBottom To pBottom
    Move (PEGetMargins(iPrintJob,pLeft,pRight,pTop,pBottom)) To iResult
    Send HandlePossibleError
    GetBuff From sBottom At PEInteger.integer To iResult
    Function_Return iResult
  End_Function // BottomMargin

  //Doc/ Type=Property Interface=Public
  Procedure Set LeftMargin Integer iLeft
    Integer iPrintJob iResult iRight iTop iBottom
    Get PrintJob To iPrintJob
    Move (RightMargin(self)) To iRight
    Move (TopMargin(self)) To iTop
    Move (BottomMargin(self)) To iBottom
    Move (PESetMargins(iPrintJob,iLeft,iRight,iTop,iBottom)) To iResult
    Send HandlePossibleError
  End_Procedure // Set LeftMargin

  //Doc/ Type=Property Interface=Public
  Procedure Set RightMargin Integer iRight
    Integer iPrintJob iResult iLeft iTop iBottom
    Get PrintJob To iPrintJob
    Move (LeftMargin(self)) To iLeft
    Move (TopMargin(self)) To iTop
    Move (BottomMargin(self)) To iBottom
    Move (PESetMargins(iPrintJob,iLeft,iRight,iTop,iBottom)) To iResult
    Send HandlePossibleError
  End_Procedure // Set RightMargin

  //Doc/ Type=Property Interface=Public
  Procedure Set TopMargin Integer iTop
    Integer iPrintJob iResult iLeft iRight iBottom
    Get PrintJob To iPrintJob
    Move (LeftMargin(self)) To iLeft
    Move (RightMargin(self)) To iRight
    Move (BottomMargin(self)) To iBottom
    Move (PESetMargins(iPrintJob,iLeft,iRight,iTop,iBottom)) To iResult
    Send HandlePossibleError
  End_Procedure // Set TopMargin

  //Doc/ Type=Property Interface=Public
  Procedure Set BottomMargin Integer iBottom
    Integer iPrintJob iResult iLeft iRight iTop
    Get PrintJob To iPrintJob
    Move (LeftMargin(self)) To iLeft
    Move (RightMargin(self)) To iRight
    Move (TopMargin(self)) To iTop
    Move (PESetMargins(iPrintJob,iLeft,iRight,iTop,iBottom)) To iResult
    Send HandlePossibleError
  End_Procedure // Set BottomMargin

  //Doc/ Type=Property Interface=Public
  Function MinimumSectionHeight Integer iSectionCode Returns Integer
    Integer iPrintJob iResult
    String sPEInteger
    Pointer pPEInteger
    Get PrintJob To iPrintJob
    FillType PEInteger With 0 To sPEInteger
    GetAddress Of sPEInteger To pPEInteger
    Move (PEGetMinimumSectionHeight(iPrintJob,iSectionCode,pPEInteger)) To iResult
    Send HandlePossibleError
    GetBuff From sPEInteger At PEInteger.integer To iResult
    Function_Return iResult
  End_Function // MinimumSectionHeight

  //Doc/ Type=Property Interface=Public
  Procedure Set MinimumSectionHeight Integer iSectionCode Integer iMimimumHeight
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    Move (PESetMinimumSectionHeight(iPrintJob,iSectionCode,iMimimumHeight)) To iResult
    Send HandlePossibleError
  End_Procedure // Set MinimumSectionHeight

  //Doc/ Type=Property Interface=Public
  Function LineHeight Integer iSectionCode Integer iLineN Returns Integer
    Integer iPrintJob iResult
    String sHeight sAscent
    Pointer pHeight pAscent
    Get PrintJob To iPrintJob
    FillType PEInteger With 0 To sHeight
    FillType PEInteger With 0 To sAscent
    GetAddress Of sHeight To pHeight
    GetAddress Of sAscent To pAscent
    Move (PEGetLineHeight(iPrintJob,iSectionCode,iLineN,pHeight,pAscent)) To iResult
    Send HandlePossibleError
    GetBuff From sHeight At PEInteger.integer To iResult
    Function_Return iResult
  End_Function // LineHeight

  //Doc/ Type=Property Interface=Public
  Function LineAscent Integer iSectionCode Integer iLineN Returns Integer
    Integer iPrintJob iResult
    String sHeight sAscent
    Pointer pHeight pAscent
    Get PrintJob To iPrintJob
    FillType PEInteger With 0 To sHeight
    FillType PEInteger With 0 To sAscent
    GetAddress Of sHeight To pHeight
    GetAddress Of sAscent To pAscent
    Move (PEGetLineHeight(iPrintJob,iSectionCode,iLineN,pHeight,pAscent)) To iResult
    Send HandlePossibleError
    GetBuff From sAscent At PEInteger.integer To iResult
    Function_Return iResult
  End_Function // LineAscent

  //Doc/ Type=Property Interface=Public
  Procedure Set LineHeight Integer iSectionCode Integer iLineN Integer iHeight
    Integer iPrintJob iResult iAscent
    Get PrintJob To iPrintJob
    Move (LineAscent(self,iSectionCode,iLineN)) To iAscent
    Move (PESetLineHeight(iPrintJob,iSectionCode,iLineN,iHeight,iAscent)) To iResult
    Send HandlePossibleError
  End_Procedure // Set LineHeight

  //Doc/ Type=Property Interface=Public
  Procedure Set LineAscent Integer iSectionCode Integer iLineN Integer iAscent
    Integer iPrintJob iResult iHeight
    Get PrintJob To iPrintJob
    Move (LineHeight(self,iSectionCode,iLineN)) To iHeight
    Move (PESetLineHeight(iPrintJob,iSectionCode,iLineN,iHeight,iAscent)) To iResult
    Send HandlePossibleError
  End_Procedure // Set LineAscent

  //Doc/ Type=Property Interface=Public
  Function NLinesInSection Integer iSectionCode Returns Integer
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    Move (PEGetNLinesInSection(iPrintJob,iSectionCode)) To iResult
    Send HandlePossibleError
    Function_Return iResult
  End_Function // NLinesInSection

  //Doc/ Interface=Private
  Function SelectAndSetFont Integer iSection Integer iScope Returns Integer
    Integer iResult iFontFamily iFontPitch iFontCharSet iFontPointSize
    Integer iFontItalic iFontUnderline iFontStrikeOut iFontWeight
    String sFaceName
    Get FontDialog Of (WinQLSelectFont(self)) To iResult
    If iResult Begin
      Get FaceName Of (WinQLSelectFont(self)) To sFaceName
      Get FontFamily Of (WinQLSelectFont(self)) To iFontFamily
      Get FontPitch Of (WinQLSelectFont(self)) To iFontPitch
      Get FontCharSet Of (WinQLSelectFont(self)) To iFontCharSet
      Get FontPointSize Of (WinQLSelectFont(self)) To iFontPointSize
      Get FontItalic Of (WinQLSelectFont(self)) To iFontItalic
      Get FontUnderline Of (WinQLSelectFont(self)) To iFontUnderline
      Get FontStrikeOut Of (WinQLSelectFont(self)) To iFontStrikeOut
      Get FontWeight Of (WinQLSelectFont(self)) To iFontWeight
      Set Font To iSection iScope sFaceName iFontFamily iFontPitch iFontCharSet ;
        (iFontPointSize/10) iFontItalic iFontUnderline iFontStrikeOut iFontWeight
    End // If iResult Begin
    Function_Return iResult
  End_Function // SelectAndSetFont

  //Doc/ Interface=Public
  Procedure SelectAndSetFont Integer iSection Integer iScope
    Integer iResult iFontFamily iFontPitch iFontCharSet iFontPointSize
    Integer iFontItalic iFontUnderline iFontStrikeOut iFontWeight
    String sFaceName
    Get FontDialog Of (WinQLSelectFont(self)) To iResult
    If iResult Begin
      Get FaceName Of (WinQLSelectFont(self)) To sFaceName
      Get FontFamily Of (WinQLSelectFont(self)) To iFontFamily
      Get FontPitch Of (WinQLSelectFont(self)) To iFontPitch
      Get FontCharSet Of (WinQLSelectFont(self)) To iFontCharSet
      Get FontPointSize Of (WinQLSelectFont(self)) To iFontPointSize
      Get FontItalic Of (WinQLSelectFont(self)) To iFontItalic
      Get FontUnderline Of (WinQLSelectFont(self)) To iFontUnderline
      Get FontStrikeOut Of (WinQLSelectFont(self)) To iFontStrikeOut
      Get FontWeight Of (WinQLSelectFont(self)) To iFontWeight
      Set Font To iSection iScope sFaceName iFontFamily iFontPitch iFontCharSet ;
        (iFontPointSize/10) iFontItalic iFontUnderline iFontStrikeOut iFontWeight
    End // If iResult Begin
  End_Procedure // SelectAndSetFont

  //Doc/ Type=ProcedureSet Interface=Public
  Procedure Set Font Integer iSection Integer iScope String sFaceName Integer iFamily Integer iPitch ;
    Integer iCharSet Integer iSize Integer iItalic Integer iUnder Integer iStrike Integer iWeight
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    Move (ToANSI(sFaceName+Character(0))) To sFaceName
    Move (PESetFont(iPrintJob,iSection,iScope,sFaceName,iFamily,iPitch,iCharSet,iSize,iItalic,iUnder,iStrike,iWeight)) To iResult
    Send HandlePossibleError
  End_Procedure // Set Font

  //Doc/ Type=Property Interface=Public
  Function NDetailCopies Returns Integer
    Integer iPrintJob iResult
    String sPEInteger
    Pointer pPEInteger
    Get PrintJob To iPrintJob
    FillType PEInteger With 0 To sPEInteger
    GetAddress Of sPEInteger To pPEInteger
    Move (PEGetNDetailCopies(iPrintJob,pPEInteger)) To iResult
    Send HandlePossibleError
    GetBuff From sPEInteger At PEInteger.integer To iResult
    Function_Return iResult
  End_Function // NDetailCopies

  //Doc/ Type=Property Interface=Public
  Procedure Set NDetailCopies Integer iNDetailCopies
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    Move (PESetNDetailCopies(iPrintJob,iNDetailCopies)) To iResult
    Send HandlePossibleError
  End_Procedure // Set NDetailCopies

  //Doc/ Type=Property Interface=Public
  Function PrintDate Returns Date
    Integer iPrintJob iResult iYear iMonth iDay iFormat iSeparator
    String sYear sMonth sDay
    Pointer pYear pMonth pDay
    Get PrintJob To iPrintJob
    FillType PEInteger With 0 To sYear
    FillType PEInteger With 0 To sMonth
    FillType PEInteger With 0 To sDay
    GetAddress Of sYear To pYear
    GetAddress Of sMonth To pMonth
    GetAddress Of sDay To pDay
    Move (PEGetPrintDate(iPrintJob,pYear,pMonth,pDay)) To iResult
    Send HandlePossibleError
    GetBuff From sYear At PEInteger.integer To iYear
    GetBuff From sMonth At PEInteger.integer To iMonth
    GetBuff From sDay At PEInteger.integer To iDay
    Get_Attribute DF_Date_Format To iFormat
    Get_Attribute DF_Date_Separator To iSeparator
    If iFormat Eq DF_DATE_MILITARY Function_Return ;
      (Date(String(iYear)+Character(iSeparator)+String(iMonth)+Character(iSeparator)+String(iDay)))
    Else If iFormat Eq DF_DATE_USA Function_Return ;
      (Date(String(iMonth)+Character(iSeparator)+String(iDay)+Character(iSeparator)+String(iYear)))
    Else Function_Return (Date(String(iDay)+Character(iSeparator)+String(iMonth)+Character(iSeparator)+String(iYear)))
  End_Function // PrintDate

  //Doc/ Type=Property Interface=Public
  Procedure Set PrintDate Date dPrintDate
    Integer iPrintJob iResult iYear iMonth iDay iFormat
    Get PrintJob To iPrintJob
    Get_Date_Format To iFormat
    If iFormat Eq DF_DATE_MILITARY Begin
      If (Length(String(dPrintDate))) Eq 8 Begin
        Move (Integer(Left(dPrintDate,2))) To iYear
        Move (Integer(Mid(dPrintDate,2,4))) To iMonth
      End // If (Length(String(dPrintDate,2))) Eq 8 Begin
      Else Begin
        Move (Integer(Left(dPrintDate,4))) To iYear
        Move (Integer(Mid(dPrintDate,2,6))) To iMonth
      End // Else Begin
      Move (Integer(Right(dPrintDate,2))) To iDay
    End // If iFormat Eq DF_DATE_MILITARY Begin
    Else If iFormat Eq DF_DATE_USA Begin
      Move (Integer(Left(dPrintDate,2))) To iMonth
      Move (Integer(Mid(dPrintDate,2,4))) To iDay
      If (Length(String(dPrintDate))) Eq 8 Move (Integer(Right(dPrintDate,2))) To iYear
      Else Move (Integer(Right(dPrintDate,4))) To iYear
    End // Else If iFormat Eq DF_DATE_USA Begin
    Else Begin
      Move (Integer(Left(dPrintDate,2))) To iDay
      Move (Integer(Mid(dPrintDate,2,4))) To iMonth
      If (Length(String(dPrintDate))) Eq 8 Move (Integer(Right(dPrintDate,2))) To iYear
      Else Move (Integer(Right(dPrintDate,4))) To iYear
    End // Else Begin
    Move (PESetPrintDate(iPrintJob,iYear,iMonth,iDay)) To iResult
    Send HandlePossibleError
  End_Procedure // Set PrintDate

  // *********************************************************************** //
  // ** Window Customization Functions                                    ** //
  // *********************************************************************** //

  //Doc/ Interface=Public
  Procedure ShowNextPage
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    Move (PEShowNextPage(iPrintJob)) To iResult
    Send HandlePossibleError
  End_Procedure // ShowNextPage

  //Doc/ Interface=Public
  Procedure ShowFirstPage
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    Move (PEShowFirstPage(iPrintJob)) To iResult
    Send HandlePossibleError
  End_Procedure // ShowFirstPage

  //Doc/ Interface=Public
  Procedure ShowPreviousPage
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    Move (PEShowPreviousPage(iPrintJob)) To iResult
    Send HandlePossibleError
  End_Procedure // ShowPreviousPage

  //Doc/ Interface=Public
  Procedure ShowLastPage
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    Move (PEShowLastPage(iPrintJob)) To iResult
    Send HandlePossibleError
  End_Procedure // ShowLastPage

  //Doc/ Type=Property Interface=Public
  Procedure Set ShowPrintControls Integer iShowPrintControls
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    Move (PEShowPrintControls(iPrintJob,iShowPrintControls)) To iResult
    Send HandlePossibleError
  End_Procedure // Set ShowPrintControls

  //Doc/ Type=Property Interface=Public
  Function ShowPrintControls Returns Integer
    Integer iPrintJob iResult
    String sPEInteger
    Pointer pPEInteger
    Get PrintJob To iPrintJob
    FillType PEInteger With 0 To sPEInteger
    GetAddress Of sPEInteger To pPEInteger
    Move (PEPrintControlsShowing(iPrintJob,pPEInteger)) To iResult
    Send HandlePossibleError
    GetBuff From sPEInteger At PEInteger.integer To iResult
    Function_Return iResult
  End_Function // ShowPrintControls

  //Doc/ Type=Property Interface=Public
  Procedure Set fPreviewWindow Integer iLevel
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    Move (PEZoomPreviewWindow(iPrintJob,iLevel)) To iResult
    Send HandlePossibleError
  End_Procedure // Set ZoomPreviewWindow

  //Doc/ Interface=Public
  Procedure NextPrintWindowMagnification
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    Move (PENextPrintWindowMagnification(iPrintJob)) To iResult
    Send HandlePossibleError
  End_Procedure // NextPrintWindowMagnification

  // *********************************************************************** //
  // ** Group Management Functions                                        ** //
  // *********************************************************************** //

  //Doc/ Type=Property Interface=Public
  Function NGroups Returns Integer
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    Move (PEGetNGroups(iPrintJob)) To iResult
    // Crystal 7 fix...
    Move (Low(iResult)) To iResult
    Send HandlePossibleError
    Function_Return iResult
  End_Function // NGroups

  //Doc/ Type=Property Interface=Public
  Function GroupField Integer iSectionCode Returns String
    Integer iPrintJob iResult iTextHandle iTextLength
    String sPETextStructure sCondition sDirection sReturn
    Pointer pPETextStructure pCondition pDirection pReturn
    Get PrintJob To iPrintJob
    FillType PETextStructure With 0 To sPETextStructure
    GetAddress Of sPETextStructure To pPETextStructure
    FillType PEInteger With 0 To sCondition
    GetAddress Of sCondition To pCondition
    FillType PEInteger With 0 To sDirection
    GetAddress Of sCondition To pDirection
    Move (PEGetGroupCondition(iPrintJob,iSectionCode,pPETextStructure,pPETextStructure+4,pCondition,pDirection)) To iResult
    Send HandlePossibleError
    GetBuff From sPETextStructure At PETextStructure.textHandle To iTextHandle
    GetBuff From sPETextStructure At PETextStructure.textLength To iTextLength
    If iTextLength Gt 255 Move 255 To iTextLength
    Move (Repeat(Character(0),255)) To sReturn
    GetAddress Of sReturn To pReturn
    Move (PEGetHandleString(iTextHandle,pReturn,iTextLength)) To iResult
    Send HandlePossibleError
    Function_Return (ToOEM(cString(sReturn)))
  End_Function // GroupField

  //Doc/ Type=Property Interface=Public
  Function GroupCondition Integer iSectionCode Returns Integer
    Integer iPrintJob iResult
    String sPETextStructure sCondition sDirection
    Pointer pPETextStructure pCondition pDirection
    Get PrintJob To iPrintJob
    FillType PETextStructure With 0 To sPETextStructure
    GetAddress Of sPETextStructure To pPETextStructure
    FillType PEInteger With 0 To sCondition
    GetAddress Of sCondition To pCondition
    FillType PEInteger With 0 To sDirection
    GetAddress Of sCondition To pDirection
    Move (PEGetGroupCondition(iPrintJob,iSectionCode,pPETextStructure,pPETextStructure+4,pCondition,pDirection)) To iResult
    Send HandlePossibleError
    GetBuff From sCondition At PEInteger.integer To iResult
    Function_Return iResult
  End_Function // GroupCondition

  //Doc/ Type=Property Interface=Public
  Function GroupSortDirection Integer iSectionCode Returns Integer
    Integer iPrintJob iResult
    String sPETextStructure sCondition sDirection
    Pointer pPETextStructure pCondition pDirection
    Get PrintJob To iPrintJob
    FillType PETextStructure With 0 To sPETextStructure
    GetAddress Of sPETextStructure To pPETextStructure
    FillType PEInteger With 0 To sCondition
    GetAddress Of sCondition To pCondition
    FillType PEInteger With 0 To sDirection
    GetAddress Of sCondition To pDirection
    Move (PEGetGroupCondition(iPrintJob,iSectionCode,pPETextStructure,pPETextStructure+4,pCondition,pDirection)) To iResult
    Send HandlePossibleError
    GetBuff From sDirection At PEInteger.integer To iResult
    Function_Return iResult
  End_Function // GroupSortDirection

  //Doc/ Type=Property Interface=Public
  Procedure Set GroupField Integer iSectionCode String sField
    Integer iPrintJob iResult iCondition iSortDirection
    Get PrintJob To iPrintJob
    Move (ToANSI(sField+Character(0))) To sField
    Get GroupCondition iSectionCode To iCondition
    Get GroupSortDirection iSectionCode To iSortDirection
    Move (PESetGroupCondition(iPrintJob,iSectionCode,sField,iCondition,iSortDirection)) To iResult
    Send HandlePossibleError
  End_Procedure // Set GroupField

  //Doc/ Type=Property Interface=Public
  Procedure Set GroupCondition Integer iSectionCode Integer iCondition
    Integer iPrintJob iResult iSortDirection
    String sField
    Get PrintJob To iPrintJob
    Get GroupField iSectionCode To sField
    Move (ToANSI(sField+Character(0))) To sField
    Get GroupSortDirection iSectionCode To iSortDirection
    Move (PESetGroupCondition(iPrintJob,iSectionCode,sField,iCondition,iSortDirection)) To iResult
    Send HandlePossibleError
  End_Procedure // Set GroupCondition

  //Doc/ Type=Property Interface=Public
  Procedure Set GroupSortDirection Integer iSectionCode Integer iSortDirection
    Integer iPrintJob iResult iCondition
    String sField
    Get PrintJob To iPrintJob
    Get GroupField iSectionCode To sField
    Move (ToANSI(sField+Character(0))) To sField
    Get GroupCondition iSectionCode To iCondition
    Move (PESetGroupCondition(iPrintJob,iSectionCode,sField,iCondition,iSortDirection)) To iResult
    Send HandlePossibleError
  End_Procedure // Set GroupSortDirection

  // *********************************************************************** //
  // ** Table Management Functions                                        ** //
  // *********************************************************************** //

  //Doc/ Type=Property Interface=Public
  Function NTables Returns Integer
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    Move (PEGetNTables(iPrintJob)) To iResult
    // Crystal 7 fix...
    Move (Low(iResult)) To iResult
    Send HandlePossibleError
    Function_Return iResult
  End_Function // NTables

  //Doc/ Type=Property Interface=Public
  Function NthTableDLLName Integer iTableN Returns String
    Integer iPrintJob iResult
    String sPETableType sReturn
    Pointer pPETableType
    Get PrintJob To iPrintJob
    FillType PETableType With 0 To sPETableType
    Put PETableType_Size To sPETableType At PETableType.StructSize
    GetAddress Of sPETableType To pPETableType
    Move (PEGetNthTableType(iPrintJob,iTableN,pPETableType)) To iResult
    Send HandlePossibleError
    GetBuff_String From sPETableType At PETableType.DLLName To sReturn
    Function_Return (ToOEM(sReturn))
  End_Function // NthTableDLLName

  //Doc/ Type=Property Interface=Public
  Function NthTableDescriptiveName Integer iTableN Returns String
    Integer iPrintJob iResult
    String sPETableType sReturn
    Pointer pPETableType
    Get PrintJob To iPrintJob
    FillType PETableType With 0 To sPETableType
    Put PETableType_Size To sPETableType At PETableType.StructSize
    GetAddress Of sPETableType To pPETableType
    Move (PEGetNthTableType(iPrintJob,iTableN,pPETableType)) To iResult
    Send HandlePossibleError
    GetBuff_String From sPETableType At PETableType.DescriptiveName To sReturn
    Function_Return (ToOEM(sReturn))
  End_Function // NthTableDescriptiveName

  //Doc/ Type=Property Interface=Public
  Function NthTableDBType Integer iTableN Returns Integer
    Integer iPrintJob iResult
    String sPETableType sReturn
    Pointer pPETableType
    Get PrintJob To iPrintJob
    FillType PETableType With 0 To sPETableType
    Put PETableType_Size To sPETableType At PETableType.StructSize
    GetAddress Of sPETableType To pPETableType
    Move (PEGetNthTableType(iPrintJob,iTableN,pPETableType)) To iResult
    Send HandlePossibleError
    GetBuff From sPETableType At PETableType.DBType To iResult
    Function_Return iResult
  End_Function // NthTableDBType

  //Doc/ Interface=Public
  Function NthTableLogOnServerName Integer iTableN Returns String
    Integer iPrintJob iResult
    String sPELogOnInfo sReturn
    Pointer pPELogOnInfo
    Get PrintJob To iPrintJob
    FillType PELogOnInfo With 0 To sPELogOnInfo
    Put PELogOnInfo_Size To sPELogOnInfo At PELogOnInfo.StructSize
    GetAddress Of sPELogOnInfo To pPELogOnInfo
    Move (PEGetNthTableLogOnInfo(iPrintJob,iTableN,pPELogOnInfo)) To iResult
    Send HandlePossibleError
    GetBuff_String From sPELogOnInfo At PELogOnInfo.ServerName To sReturn
    Function_Return (ToOEM(sReturn))
  End_Function // NthTableLogOnServerName

  //Doc/ Interface=Public
  Function NthTableLogOnDatabaseName Integer iTableN Returns String
    Integer iPrintJob iResult
    String sPELogOnInfo sReturn
    Pointer pPELogOnInfo
    Get PrintJob To iPrintJob
    FillType PELogOnInfo With 0 To sPELogOnInfo
    Put PELogOnInfo_Size To sPELogOnInfo At PELogOnInfo.StructSize
    GetAddress Of sPELogOnInfo To pPELogOnInfo
    Move (PEGetNthTableLogOnInfo(iPrintJob,iTableN,pPELogOnInfo)) To iResult
    Send HandlePossibleError
    GetBuff_String From sPELogOnInfo At PELogOnInfo.DatabaseName To sReturn
    Function_Return (ToOEM(sReturn))
  End_Function // NthTableLogOnDatabaseName

  //Doc/ Interface=Public
  Function NthTableLogOnUserID Integer iTableN Returns String
    Integer iPrintJob iResult
    String sPELogOnInfo sReturn
    Pointer pPELogOnInfo
    Get PrintJob To iPrintJob
    FillType PELogOnInfo With 0 To sPELogOnInfo
    Put PELogOnInfo_Size To sPELogOnInfo At PELogOnInfo.StructSize
    GetAddress Of sPELogOnInfo To pPELogOnInfo
    Move (PEGetNthTableLogOnInfo(iPrintJob,iTableN,pPELogOnInfo)) To iResult
    Send HandlePossibleError
    GetBuff_String From sPELogOnInfo At PELogOnInfo.UserID To sReturn
    Function_Return (ToOEM(sReturn))
  End_Function // NthTableLogOnUserID

  //Doc/ Interface=Public
  Function NthTableLogOnPassword Integer iTableN Returns String
    Integer iPrintJob iResult
    String sPELogOnInfo sReturn
    Pointer pPELogOnInfo
    Get PrintJob To iPrintJob
    FillType PELogOnInfo With 0 To sPELogOnInfo
    Put PELogOnInfo_Size To sPELogOnInfo At PELogOnInfo.StructSize
    GetAddress Of sPELogOnInfo To pPELogOnInfo
    Move (PEGetNthTableLogOnInfo(iPrintJob,iTableN,pPELogOnInfo)) To iResult
    Send HandlePossibleError
    GetBuff_String From sPELogOnInfo At PELogOnInfo.Password To sReturn
    Function_Return (ToOEM(sReturn))
  End_Function // NthTableLogOnPassword

  //Doc/ Type=ProcedureSet Interface=Public
  Procedure Set NthTableLogOnServerName Integer iTableN String sServerName Integer iPropagateAcrossTables
    Integer iPrintJob iResult
    String sPELogOnInfo
    Pointer pPELogOnInfo
    Get PrintJob To iPrintJob
    FillType PELogOnInfo With 0 To sPELogOnInfo
    Put PELogOnInfo_Size To sPELogOnInfo At PELogOnInfo.StructSize
    GetAddress Of sPELogOnInfo To pPELogOnInfo
    Move (PEGetNthTableLogOnInfo(iPrintJob,iTableN,pPELogOnInfo)) To iResult
    Send HandlePossibleError
    Move (ToANSI(sServerName+Character(0))) To sServerName
    Put_String sServerName To sPELogOnInfo At PELogOnInfo.ServerName
    GetAddress Of sPELogOnInfo To pPELogOnInfo
    Move (PESetNthTableLogOnInfo(iPrintJob,iTableN,pPELogOnInfo,iPropagateAcrossTables)) To iResult
    Send HandlePossibleError
  End_Procedure // Set NthTableLogOnServerName

  //Doc/ Type=ProcedureSet Interface=Public
  Procedure Set NthTableLogOnDatabaseName Integer iTableN String sDatabaseName Integer iPropagateAcrossTables
    Integer iPrintJob iResult
    String sPELogOnInfo
    Pointer pPELogOnInfo
    Get PrintJob To iPrintJob
    FillType PELogOnInfo With 0 To sPELogOnInfo
    Put PELogOnInfo_Size To sPELogOnInfo At PELogOnInfo.StructSize
    GetAddress Of sPELogOnInfo To pPELogOnInfo
    Move (PEGetNthTableLogOnInfo(iPrintJob,iTableN,pPELogOnInfo)) To iResult
    Send HandlePossibleError
    Move (ToANSI(sDatabaseName+Character(0))) To sDatabaseName
    Put_String sDatabaseName To sPELogOnInfo At PELogOnInfo.DatabaseName
    GetAddress Of sPELogOnInfo To pPELogOnInfo
    Move (PESetNthTableLogOnInfo(iPrintJob,iTableN,pPELogOnInfo,iPropagateAcrossTables)) To iResult
    Send HandlePossibleError
  End_Procedure // Set NthTableLogOnDatabaseName

  //Doc/ Type=ProcedureSet Interface=Public
  Procedure Set NthTableLogOnUserID Integer iTableN String sUserID Integer iPropagateAcrossTables
    Integer iPrintJob iResult
    String sPELogOnInfo
    Pointer pPELogOnInfo
    Get PrintJob To iPrintJob
    FillType PELogOnInfo With 0 To sPELogOnInfo
    Put PELogOnInfo_Size To sPELogOnInfo At PELogOnInfo.StructSize
    GetAddress Of sPELogOnInfo To pPELogOnInfo
    Move (PEGetNthTableLogOnInfo(iPrintJob,iTableN,pPELogOnInfo)) To iResult
    Send HandlePossibleError
    Move (ToANSI(sUserID+Character(0))) To sUserID
    Put_String sUserID To sPELogOnInfo At PELogOnInfo.UserID
    GetAddress Of sPELogOnInfo To pPELogOnInfo
    Move (PESetNthTableLogOnInfo(iPrintJob,iTableN,pPELogOnInfo,iPropagateAcrossTables)) To iResult
    Send HandlePossibleError
  End_Procedure // Set NthTableLogOnUserID

  //Doc/ Type=ProcedureSet Interface=Public
  Procedure Set NthTableLogOnPassword Integer iTableN String sPassword Integer iPropagateAcrossTables
    Integer iPrintJob iResult
    String sPELogOnInfo
    Pointer pPELogOnInfo
    Get PrintJob To iPrintJob
    FillType PELogOnInfo With 0 To sPELogOnInfo
    Put PELogOnInfo_Size To sPELogOnInfo At PELogOnInfo.StructSize
    GetAddress Of sPELogOnInfo To pPELogOnInfo
    Move (PEGetNthTableLogOnInfo(iPrintJob,iTableN,pPELogOnInfo)) To iResult
    Send HandlePossibleError
    Move (ToANSI(sPassword+Character(0))) To sPassword
    Put_String sPassword To sPELogOnInfo At PELogOnInfo.Password
    GetAddress Of sPELogOnInfo To pPELogOnInfo
    Move (PESetNthTableLogOnInfo(iPrintJob,iTableN,pPELogOnInfo,iPropagateAcrossTables)) To iResult
    Send HandlePossibleError
  End_Procedure // Set NthTableLogOnPassword

  //Doc/ Type=Property Interface=Public
  Function NthTableLocation Integer iTableN Returns String
    Integer iPrintJob iResult
    String sPETableLocation sReturn
    Pointer pPETableLocation
    Get PrintJob To iPrintJob
    FillType PETableLocation With 0 To sPETableLocation
    Put PETableLocation_Size To sPETableLocation At PETableLocation.StructSize
    GetAddress Of sPETableLocation To pPETableLocation
    Move (PEGetNthTableLocation(iPrintJob,iTableN,pPETableLocation)) To iResult
    Send HandlePossibleError
    GetBuff_String From sPETableLocation At PETableLocation.Location To sReturn
    Function_Return (ToOEM(sReturn))
  End_Function // NthTableLocation

  //Doc/ Type=Property Interface=Public
  Procedure Set NthTableLocation Integer iTableN String sLocation
    Integer iPrintJob iResult
    String sPETableLocation
    Pointer pPETableLocation
    Get PrintJob To iPrintJob
    Move (ToANSI(sLocation+Character(0))) To sLocation
    FillType PETableLocation With 0 To sPETableLocation
    Put PETableLocation_Size To sPETableLocation At PETableLocation.StructSize
    Put_String sLocation To sPETableLocation At PETableLocation.Location
    GetAddress Of sPETableLocation To pPETableLocation
    Move (PESetNthTableLocation(iPrintJob,iTableN,pPETableLocation)) To iResult
    Send HandlePossibleError
  End_Procedure // Set NthTableLocation

  //*** BW, Chgencged function name from TextNthTableConnectivity
  //Doc/ Interface=Public
  Function TestNthTableConnectivity Integer iTableN Returns Integer
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    Move (PETestNthTableConnectivity(iPrintJob,iTablen)) To iResult
    Send HandlePossibleError
    Function_Return iResult
  End_Function // TestNthTableConnectivity

  //Doc/ Interface=Public
  Function NthTableSessionUserID Integer iTableN Returns String
    Integer iPrintJob iResult
    String sPESessionInfo sReturn
    Pointer pPESessionInfo
    Get PrintJob To iPrintJob
    FillType PESessionInfo With 0 To sPESessionInfo
    Put PESessionInfo_Size To sPESessionInfo At PESessionInfo.StructSize
    GetAddress Of sPESessionInfo To pPESessionInfo
    Move (PEGetNthTableSessionInfo(iPrintJob,iTableN,pPESessionInfo)) To iResult
    Send HandlePossibleError
    GetBuff_String From sPESessionInfo At PESessionInfo.UserID To sReturn
    Function_Return (ToOEM(sReturn))
  End_Function // NthTableSessionUserID

  //Doc/ Interface=Public
  Function NthTableSessionPassword Integer iTableN Returns String
    Integer iPrintJob iResult
    String sPESessionInfo sReturn
    Pointer pPESessionInfo
    Get PrintJob To iPrintJob
    FillType PESessionInfo With 0 To sPESessionInfo
    Put PESessionInfo_Size To sPESessionInfo At PESessionInfo.StructSize
    GetAddress Of sPESessionInfo To pPESessionInfo
    Move (PEGetNthTableSessionInfo(iPrintJob,iTableN,pPESessionInfo)) To iResult
    Send HandlePossibleError
    GetBuff_String From sPESessionInfo At PESessionInfo.Password To sReturn
    Function_Return (ToOEM(sReturn))
  End_Function // NthTableSessionPassword

  //Doc/ Interface=Public
  Function NthTableSessionHandle Integer iTableN Returns Integer
    Integer iPrintJob iResult
    String sPESessionInfo
    Pointer pPESessionInfo
    Get PrintJob To iPrintJob
    FillType PESessionInfo With 0 To sPESessionInfo
    Put PESessionInfo_Size To sPESessionInfo At PESessionInfo.StructSize
    GetAddress Of sPESessionInfo To pPESessionInfo
    Move (PEGetNthTableSessionInfo(iPrintJob,iTableN,pPESessionInfo)) To iResult
    Send HandlePossibleError
    GetBuff From sPESessionInfo At PESessionInfo.SessionHandle To iResult
    Function_Return iResult
  End_Function // NthTableSessionHandle

  //Doc/ Type=ProcedureSet Interface=Public
  Procedure Set NthTableSessionUserID Integer iTableN String sUserID Integer iPropagateAcrossTables
    Integer iPrintJob iResult
    String sPESessionInfo
    Pointer pPESessionInfo
    Get PrintJob To iPrintJob
    FillType PESessionInfo With 0 To sPESessionInfo
    Put PESessionInfo_Size To sPESessionInfo At PESessionInfo.StructSize
    GetAddress Of sPESessionInfo To pPESessionInfo
    Move (PEGetNthTableSessionInfo(iPrintJob,iTableN,pPESessionInfo)) To iResult
    Send HandlePossibleError
    Move (ToANSI(sUserID+Character(0))) To sUserID
    Put_String sUserID To sPESessionInfo At PESessionInfo.UserID
    GetAddress Of sPESessionInfo To pPESessionInfo
    Move (PESetNthTableSessionInfo(iPrintJob,iTableN,pPESessionInfo,iPropagateAcrossTables)) To iResult
    Send HandlePossibleError
  End_Procedure // Set NthTableSessionUserID

  //Doc/ Type=ProcedureSet Interface=Public
  Procedure Set NthTableSessionPassword Integer iTableN String sPassword Integer iPropagateAcrossTables
    Integer iPrintJob iResult
    String sPESessionInfo
    Pointer pPESessionInfo
    Get PrintJob To iPrintJob
    FillType PESessionInfo With 0 To sPESessionInfo
    Put PESessionInfo_Size To sPESessionInfo At PESessionInfo.StructSize
    GetAddress Of sPESessionInfo To pPESessionInfo
    Move (PEGetNthTableSessionInfo(iPrintJob,iTableN,pPESessionInfo)) To iResult
    Send HandlePossibleError
    Move (ToANSI(sPassword+Character(0))) To sPassword
    Put_String sPassword To sPESessionInfo At PESessionInfo.Password
    GetAddress Of sPESessionInfo To pPESessionInfo
    Move (PESetNthTableSessionInfo(iPrintJob,iTableN,pPESessionInfo,iPropagateAcrossTables)) To iResult
    Send HandlePossibleError
  End_Procedure // Set NthTableSessionPassword

  //Doc/ Interface=Public
  Procedure NthTableSessionHandle Integer iTableN Integer iHandle Integer iPropagateAcrossTables
    Integer iPrintJob iResult
    String sPESessionInfo
    Pointer pPESessionInfo
    Get PrintJob To iPrintJob
    FillType PESessionInfo With 0 To sPESessionInfo
    Put PESessionInfo_Size To sPESessionInfo At PESessionInfo.StructSize
    GetAddress Of sPESessionInfo To pPESessionInfo
    Move (PEGetNthTableSessionInfo(iPrintJob,iTableN,pPESessionInfo)) To iResult
    Send HandlePossibleError
    Put iHandle To sPESessionInfo At PESessionInfo.SessionHandle
    GetAddress Of sPESessionInfo To pPESessionInfo
    Move (PESetNthTableSessionInfo(iPrintJob,iTableN,pPESessionInfo,iPropagateAcrossTables)) To iResult
    Send HandlePossibleError
  End_Procedure // NthTableSessionHandle

  // *********************************************************************** //
  // ** Graph/Chart Management Functions                                  ** //
  // *********************************************************************** //

  //Doc/ Type=Property Interface=Public
  Function GraphRowGroupN Integer iSectionCode Integer iGraphN Returns Integer
    Integer iPrintJob iResult
    String sPEGraphDataInfo
    Pointer pPEGraphDataInfo
    Get PrintJob To iPrintJob
    FillType PEGraphDataInfo With 0 To sPEGraphDataInfo
    Put PEGraphDataInfo_Size To sPEGraphDataInfo At PEGraphDataInfo.StructSize
    GetAddress Of sPEGraphDataInfo To pPEGraphDataInfo
    Move (PEGetGraphData(iPrintJob,iSectionCode,iGraphN,pPEGraphDataInfo)) To iResult
    Send HandlePossibleError
    GetBuff From sPEGraphDataInfo At PEGraphDataInfo.rowGroupN To iResult
    Function_Return iResult
  End_Function // GraphRowGroupN

  //Doc/ Type=Property Interface=Public
  Function GraphColGroupN Integer iSectionCode Integer iGraphN Returns Integer
    Integer iPrintJob iResult
    String sPEGraphDataInfo
    Pointer pPEGraphDataInfo
    Get PrintJob To iPrintJob
    FillType PEGraphDataInfo With 0 To sPEGraphDataInfo
    Put PEGraphDataInfo_Size To sPEGraphDataInfo At PEGraphDataInfo.StructSize
    GetAddress Of sPEGraphDataInfo To pPEGraphDataInfo
    Move (PEGetGraphData(iPrintJob,iSectionCode,iGraphN,pPEGraphDataInfo)) To iResult
    Send HandlePossibleError
    GetBuff From sPEGraphDataInfo At PEGraphDataInfo.colGroupN To iResult
    Function_Return iResult
  End_Function // GraphColGroupN

  //Doc/ Type=Property Interface=Public
  Function GraphSummarizedFieldN Integer iSectionCode Integer iGraphN Returns Integer
    Integer iPrintJob iResult
    String sPEGraphDataInfo
    Pointer pPEGraphDataInfo
    Get PrintJob To iPrintJob
    FillType PEGraphDataInfo With 0 To sPEGraphDataInfo
    Put PEGraphDataInfo_Size To sPEGraphDataInfo At PEGraphDataInfo.StructSize
    GetAddress Of sPEGraphDataInfo To pPEGraphDataInfo
    Move (PEGetGraphData(iPrintJob,iSectionCode,iGraphN,pPEGraphDataInfo)) To iResult
    Send HandlePossibleError
    GetBuff From sPEGraphDataInfo At PEGraphDataInfo.summarizedFieldN To iResult
    Function_Return iResult
  End_Function // GraphSummarizedFieldN

  //Doc/ Type=Property Interface=Public
  Function GraphDirection Integer iSectionCode Integer iGraphN Returns Integer
    Integer iPrintJob iResult
    String sPEGraphDataInfo
    Pointer pPEGraphDataInfo
    Get PrintJob To iPrintJob
    FillType PEGraphDataInfo With 0 To sPEGraphDataInfo
    Put PEGraphDataInfo_Size To sPEGraphDataInfo At PEGraphDataInfo.StructSize
    GetAddress Of sPEGraphDataInfo To pPEGraphDataInfo
    Move (PEGetGraphData(iPrintJob,iSectionCode,iGraphN,pPEGraphDataInfo)) To iResult
    Send HandlePossibleError
    GetBuff From sPEGraphDataInfo At PEGraphDataInfo.graphDirection To iResult
    Function_Return iResult
  End_Function // GraphDirection

  //Doc/ Type=Property Interface=Public
  Procedure Set GraphRowGroupN Integer iSectionCode Integer iGraphN Integer iRowGroupN
    Integer iPrintJob iResult
    String sPEGraphDataInfo
    Pointer pPEGraphDataInfo
    Get PrintJob To iPrintJob
    FillType PEGraphDataInfo With 0 To sPEGraphDataInfo
    Put PEGraphDataInfo_Size To sPEGraphDataInfo At PEGraphDataInfo.StructSize
    GetAddress Of sPEGraphDataInfo To pPEGraphDataInfo
    Move (PEGetGraphData(iPrintJob,iSectionCode,iGraphN,pPEGraphDataInfo)) To iResult
    Send HandlePossibleError
    Put iRowGroupN To sPEGraphDataInfo At PEGraphDataInfo.rowGroupN
    GetAddress Of sPEGraphDataInfo To pPEGraphDataInfo
    Move (PESetGraphData(iPrintJob,iSectionCode,iGraphN,pPEGraphDataInfo)) To iResult
    Send HandlePossibleError
  End_Procedure // Set GraphRowGroupN

  //Doc/ Type=Property Interface=Public
  Procedure Set GraphColGroupN Integer iSectionCode Integer iGraphN Integer iColGroupN
    Integer iPrintJob iResult
    String sPEGraphDataInfo
    Pointer pPEGraphDataInfo
    Get PrintJob To iPrintJob
    FillType PEGraphDataInfo With 0 To sPEGraphDataInfo
    Put PEGraphDataInfo_Size To sPEGraphDataInfo At PEGraphDataInfo.StructSize
    GetAddress Of sPEGraphDataInfo To pPEGraphDataInfo
    Move (PEGetGraphData(iPrintJob,iSectionCode,iGraphN,pPEGraphDataInfo)) To iResult
    Send HandlePossibleError
    Put iColGroupN To sPEGraphDataInfo At PEGraphDataInfo.colGroupN
    GetAddress Of sPEGraphDataInfo To pPEGraphDataInfo
    Move (PESetGraphData(iPrintJob,iSectionCode,iGraphN,pPEGraphDataInfo)) To iResult
    Send HandlePossibleError
  End_Procedure // Set GraphColGroupN

  //Doc/ Type=Property Interface=Public
  Procedure Set GraphSummarizedFieldN Integer iSectionCode Integer iGraphN Integer iSummarizedFieldN
    Integer iPrintJob iResult
    String sPEGraphDataInfo
    Pointer pPEGraphDataInfo
    Get PrintJob To iPrintJob
    FillType PEGraphDataInfo With 0 To sPEGraphDataInfo
    Put PEGraphDataInfo_Size To sPEGraphDataInfo At PEGraphDataInfo.StructSize
    GetAddress Of sPEGraphDataInfo To pPEGraphDataInfo
    Move (PEGetGraphData(iPrintJob,iSectionCode,iGraphN,pPEGraphDataInfo)) To iResult
    Send HandlePossibleError
    Put iSummarizedFieldN To sPEGraphDataInfo At PEGraphDataInfo.summarizedFieldN
    GetAddress Of sPEGraphDataInfo To pPEGraphDataInfo
    Move (PESetGraphData(iPrintJob,iSectionCode,iGraphN,pPEGraphDataInfo)) To iResult
    Send HandlePossibleError
  End_Procedure // Set GraphSummarizedFieldN

  //Doc/ Type=Property Interface=Public
  Procedure Set GraphDirection Integer iSectionCode Integer iGraphN Integer iDirection
    Integer iPrintJob iResult
    String sPEGraphDataInfo
    Pointer pPEGraphDataInfo
    Get PrintJob To iPrintJob
    FillType PEGraphDataInfo With 0 To sPEGraphDataInfo
    Put PEGraphDataInfo_Size To sPEGraphDataInfo At PEGraphDataInfo.StructSize
    GetAddress Of sPEGraphDataInfo To pPEGraphDataInfo
    Move (PEGetGraphData(iPrintJob,iSectionCode,iGraphN,pPEGraphDataInfo)) To iResult
    Send HandlePossibleError
    Put iDirection To sPEGraphDataInfo At PEGraphDataInfo.graphDirection
    GetAddress Of sPEGraphDataInfo To pPEGraphDataInfo
    Move (PESetGraphData(iPrintJob,iSectionCode,iGraphN,pPEGraphDataInfo)) To iResult
    Send HandlePossibleError
  End_Procedure // Set GraphDirection

  //Doc/ Type=Property Interface=Public
  Function GraphMaxValue Integer iSectionCode Integer iGraphN Returns Real
    Integer iPrintJob iResult
    String sPEGraphOptions
    Pointer pPEGraphOptions
    Real rResult

    // Initialize rResult for AddressOf
    Move 0.0 To rResult

    Get PrintJob To iPrintJob
    FillType PEGraphOptions With 0 To sPEGraphOptions
    Put PEGraphOptions_Size To sPEGraphOptions At PEGraphOptions.StructSize
    GetAddress Of sPEGraphOptions To pPEGraphOptions
    Move (PEGetGraphOptions(iPrintJob,iSectionCode,iGraphN,pPEGraphOptions)) To iResult
    Send HandlePossibleError

    // Get the real (double) from the structure
    Move (CopyMemory(AddressOf(rResult),(pPEGraphOptions+2),8)) To iResult
    //RetrieveField From (AddressOf(sPEGraphOptions)) At PEGraphOptions.graphMaxValue To (AddressOf(rResult))
    Function_Return rResult
  End_Function // GraphMaxValue

  //Doc/ Type=Property Interface=Public
  Function GraphMinValue Integer iSectionCode Integer iGraphN Returns Real
    Integer iPrintJob iResult
    String sPEGraphOptions
    Pointer pPEGraphOptions
    Real rResult

    // Initialize rResult for AddressOf
    Move 0.0 To rResult

    Get PrintJob To iPrintJob
    FillType PEGraphOptions With 0 To sPEGraphOptions
    Put PEGraphOptions_Size To sPEGraphOptions At PEGraphOptions.StructSize
    GetAddress Of sPEGraphOptions To pPEGraphOptions
    Move (PEGetGraphOptions(iPrintJob,iSectionCode,iGraphN,pPEGraphOptions)) To iResult
    Send HandlePossibleError

    // Get the real (double) from the structure
    Move (CopyMemory(AddressOf(rResult),(pPEGraphOptions+10),8)) To iResult
    //RetrieveField From (AddressOf(sPEGraphOptions)) At PEGraphOptions.graphMinValue To (AddressOf(rResult))
    Function_Return rResult
  End_Function // GraphMinValue

  //Doc/ Type=Property Interface=Public
  Function GraphShowDataValue Integer iSectionCode Integer iGraphN Returns Integer
    Integer iPrintJob iResult
    String sPEGraphOptions
    Pointer pPEGraphOptions
    Get PrintJob To iPrintJob
    FillType PEGraphOptions With 0 To sPEGraphOptions
    Put PEGraphOptions_Size To sPEGraphOptions At PEGraphOptions.StructSize
    GetAddress Of sPEGraphOptions To pPEGraphOptions
    Move (PEGetGraphOptions(iPrintJob,iSectionCode,iGraphN,pPEGraphOptions)) To iResult
    Send HandlePossibleError
    GetBuff From sPEGraphOptions At PEGraphOptions.showDataValue To iResult
    Function_Return iResult
  End_Function // GraphShowDataValue

  //Doc/ Type=Property Interface=Public
  Function GraphShowGridLine Integer iSectionCode Integer iGraphN Returns Integer
    Integer iPrintJob iResult
    String sPEGraphOptions
    Pointer pPEGraphOptions
    Get PrintJob To iPrintJob
    FillType PEGraphOptions With 0 To sPEGraphOptions
    Put PEGraphOptions_Size To sPEGraphOptions At PEGraphOptions.StructSize
    GetAddress Of sPEGraphOptions To pPEGraphOptions
    Move (PEGetGraphOptions(iPrintJob,iSectionCode,iGraphN,pPEGraphOptions)) To iResult
    Send HandlePossibleError
    GetBuff From sPEGraphOptions At PEGraphOptions.showGridLine To iResult
    Function_Return iResult
  End_Function // GraphShowGridLine

  //Doc/ Type=Property Interface=Public
  Function GraphVerticalBars Integer iSectionCode Integer iGraphN Returns Integer
    Integer iPrintJob iResult
    String sPEGraphOptions
    Pointer pPEGraphOptions
    Get PrintJob To iPrintJob
    FillType PEGraphOptions With 0 To sPEGraphOptions
    Put PEGraphOptions_Size To sPEGraphOptions At PEGraphOptions.StructSize
    GetAddress Of sPEGraphOptions To pPEGraphOptions
    Move (PEGetGraphOptions(iPrintJob,iSectionCode,iGraphN,pPEGraphOptions)) To iResult
    Send HandlePossibleError
    GetBuff From sPEGraphOptions At PEGraphOptions.verticalBars To iResult
    Function_Return iResult
  End_Function // GraphVerticalBars

  //Doc/ Type=Property Interface=Public
  Function GraphShowLegend Integer iSectionCode Integer iGraphN Returns Integer
    Integer iPrintJob iResult
    String sPEGraphOptions
    Pointer pPEGraphOptions
    Get PrintJob To iPrintJob
    FillType PEGraphOptions With 0 To sPEGraphOptions
    Put PEGraphOptions_Size To sPEGraphOptions At PEGraphOptions.StructSize
    GetAddress Of sPEGraphOptions To pPEGraphOptions
    Move (PEGetGraphOptions(iPrintJob,iSectionCode,iGraphN,pPEGraphOptions)) To iResult
    Send HandlePossibleError
    GetBuff From sPEGraphOptions At PEGraphOptions.showLegend To iResult
    Function_Return iResult
  End_Function // GraphShowLegend

  //Doc/ Type=Property Interface=Public
  Function GraphFontFaceName Integer iSectionCode Integer iGraphN Returns String
    Integer iPrintJob iResult
    String sPEGraphOptions sReturn
    Pointer pPEGraphOptions
    Get PrintJob To iPrintJob
    FillType PEGraphOptions With 0 To sPEGraphOptions
    Put PEGraphOptions_Size To sPEGraphOptions At PEGraphOptions.StructSize
    GetAddress Of sPEGraphOptions To pPEGraphOptions
    Move (PEGetGraphOptions(iPrintJob,iSectionCode,iGraphN,pPEGraphOptions)) To iResult
    Send HandlePossibleError
    GetBuff_String From sPEGraphOptions At PEGraphOptions.fontFaceName To sReturn
    Function_Return (ToOEM(sReturn))
  End_Function // GraphFontFaceName

  //Doc/ Type=Property Interface=Public
  Procedure Set GraphMaxValue Integer iSectionCode Integer iGraphN Real rMaxValue
    Integer iPrintJob iResult
    String sPEGraphOptions sDouble
    Pointer pPEGraphOptions

    // Initialize rMaxValue for AddressOf
    Move rMaxValue To rMaxValue

    Get PrintJob To iPrintJob
    FillType PEGraphOptions With 0 To sPEGraphOptions
    Put PEGraphOptions_Size To sPEGraphOptions At PEGraphOptions.StructSize
    GetAddress Of sPEGraphOptions To pPEGraphOptions
    Move (PEGetGraphOptions(iPrintJob,iSectionCode,iGraphN,pPEGraphOptions)) To iResult
    Send HandlePossibleError

    // Copy the double to the structure
    Move (CopyMemory((pPEGraphOptions+2),AddressOf(rMaxValue),8)) To WindowIndex
    //StoreField (AddressOf(rMaxValue)) To (AddressOf(sPEGraphOptions)) At PEGraphOptions.graphMaxValue
    GetAddress Of sPEGraphOptions To pPEGraphOptions
    Move (PESetGraphOptions(iPrintJob,iSectionCode,iGraphN,pPEGraphOptions)) To iResult
    Send HandlePossibleError
  End_Procedure // Set GraphMaxValue

  //Doc/ Type=Property Interface=Public
  Procedure Set GraphMinValue Integer iSectionCode Integer iGraphN Real rMinValue
    Integer iPrintJob iResult
    String sPEGraphOptions sDouble
    Pointer pPEGraphOptions

    // Initialize rMinValue for AddressOf
    Move rMinValue To rMinValue

    Get PrintJob To iPrintJob
    FillType PEGraphOptions With 0 To sPEGraphOptions
    Put PEGraphOptions_Size To sPEGraphOptions At PEGraphOptions.StructSize
    GetAddress Of sPEGraphOptions To pPEGraphOptions
    Move (PEGetGraphOptions(iPrintJob,iSectionCode,iGraphN,pPEGraphOptions)) To iResult
    Send HandlePossibleError

    // Copy the double to the structure
    Move (CopyMemory((pPEGraphOptions+10),AddressOf(rMinValue),8)) To WindowIndex
    //StoreField (AddressOf(rMinValue)) To (AddressOf(sPEGraphOptions)) At PEGraphOptions.graphMinValue
    GetAddress Of sPEGraphOptions To pPEGraphOptions
    Move (PESetGraphOptions(iPrintJob,iSectionCode,iGraphN,pPEGraphOptions)) To iResult
    Send HandlePossibleError
  End_Procedure // Set GraphMinValue

  //Doc/ Type=Property Interface=Public
  Procedure Set GraphShowDataValue Integer iSectionCode Integer iGraphN Integer iShowDataValue
    Integer iPrintJob iResult
    String sPEGraphOptions
    Pointer pPEGraphOptions
    Get PrintJob To iPrintJob
    FillType PEGraphOptions With 0 To sPEGraphOptions
    Put PEGraphOptions_Size To sPEGraphOptions At PEGraphOptions.StructSize
    GetAddress Of sPEGraphOptions To pPEGraphOptions
    Move (PEGetGraphOptions(iPrintJob,iSectionCode,iGraphN,pPEGraphOptions)) To iResult
    Send HandlePossibleError
    Put iShowDataValue To sPEGraphOptions At PEGraphOptions.showDataValue
    GetAddress Of sPEGraphOptions To pPEGraphOptions
    Move (PESetGraphOptions(iPrintJob,iSectionCode,iGraphN,pPEGraphOptions)) To iResult
    Send HandlePossibleError
  End_Procedure // Set GraphShowDataValue

  //Doc/ Type=Property Interface=Public
  Procedure Set GraphShowGridLine Integer iSectionCode Integer iGraphN Integer iShowGridLine
    Integer iPrintJob iResult
    String sPEGraphOptions
    Pointer pPEGraphOptions
    Get PrintJob To iPrintJob
    FillType PEGraphOptions With 0 To sPEGraphOptions
    Put PEGraphOptions_Size To sPEGraphOptions At PEGraphOptions.StructSize
    GetAddress Of sPEGraphOptions To pPEGraphOptions
    Move (PEGetGraphOptions(iPrintJob,iSectionCode,iGraphN,pPEGraphOptions)) To iResult
    Send HandlePossibleError
    Put iShowGridLine To sPEGraphOptions At PEGraphOptions.showGridLine
    GetAddress Of sPEGraphOptions To pPEGraphOptions
    Move (PESetGraphOptions(iPrintJob,iSectionCode,iGraphN,pPEGraphOptions)) To iResult
    Send HandlePossibleError
  End_Procedure // Set GraphShowGridLine

  //Doc/ Type=Property Interface=Public
  Procedure Set GraphVerticalBars Integer iSectionCode Integer iGraphN Integer iVerticalBars
    Integer iPrintJob iResult
    String sPEGraphOptions
    Pointer pPEGraphOptions
    Get PrintJob To iPrintJob
    FillType PEGraphOptions With 0 To sPEGraphOptions
    Put PEGraphOptions_Size To sPEGraphOptions At PEGraphOptions.StructSize
    GetAddress Of sPEGraphOptions To pPEGraphOptions
    Move (PEGetGraphOptions(iPrintJob,iSectionCode,iGraphN,pPEGraphOptions)) To iResult
    Send HandlePossibleError
    Put iVerticalBars To sPEGraphOptions At PEGraphOptions.verticalBars
    GetAddress Of sPEGraphOptions To pPEGraphOptions
    Move (PESetGraphOptions(iPrintJob,iSectionCode,iGraphN,pPEGraphOptions)) To iResult
    Send HandlePossibleError
  End_Procedure // Set GraphVerticalBars

  //Doc/ Type=Property Interface=Public
  Procedure Set GraphShowLegend Integer iSectionCode Integer iGraphN Integer iShowLegend
    Integer iPrintJob iResult
    String sPEGraphOptions
    Pointer pPEGraphOptions
    Get PrintJob To iPrintJob
    FillType PEGraphOptions With 0 To sPEGraphOptions
    Put PEGraphOptions_Size To sPEGraphOptions At PEGraphOptions.StructSize
    GetAddress Of sPEGraphOptions To pPEGraphOptions
    Move (PEGetGraphOptions(iPrintJob,iSectionCode,iGraphN,pPEGraphOptions)) To iResult
    Send HandlePossibleError
    Put iShowLegend To sPEGraphOptions At PEGraphOptions.showLegend
    GetAddress Of sPEGraphOptions To pPEGraphOptions
    Move (PESetGraphOptions(iPrintJob,iSectionCode,iGraphN,pPEGraphOptions)) To iResult
    Send HandlePossibleError
  End_Procedure // Set GraphShowLegend

  //Doc/ Type=Property Interface=Public
  Procedure Set GraphFontFaceName Integer iSectionCode Integer iGraphN String sFontFaceName
    Integer iPrintJob iResult
    String sPEGraphOptions
    Pointer pPEGraphOptions
    Get PrintJob To iPrintJob
    Move (ToANSI(sFontFaceName+Character(0))) To sFontFaceName
    FillType PEGraphOptions With 0 To sPEGraphOptions
    Put PEGraphOptions_Size To sPEGraphOptions At PEGraphOptions.StructSize
    GetAddress Of sPEGraphOptions To pPEGraphOptions
    Move (PEGetGraphOptions(iPrintJob,iSectionCode,iGraphN,pPEGraphOptions)) To iResult
    Send HandlePossibleError
    Put_String sFontFaceName To sPEGraphOptions At PEGraphOptions.fontFaceName
    GetAddress Of sPEGraphOptions To pPEGraphOptions
    Move (PESetGraphOptions(iPrintJob,iSectionCode,iGraphN,pPEGraphOptions)) To iResult
    Send HandlePossibleError
  End_Procedure // Set GraphFontFaceName

  //Doc/ Type=Property Interface=Public
  Function GraphTitle Integer iSectionCode Integer iGraphN Returns String
    Integer iPrintJob iResult
    String sPEGraphTextInfo sReturn
    Pointer pPEGraphTextInfo
    Get PrintJob To iPrintJob
    FillType PEGraphTextInfo With 0 To sPEGraphTextInfo
    Put PEGraphTextInfo_Size To sPEGraphTextInfo At PEGraphTextInfo.StructSize
    GetAddress Of sPEGraphTextInfo To pPEGraphTextInfo
    Move (PEGetGraphText(iPrintJob,iSectionCode,iGraphN,pPEGraphTextInfo)) To iResult
    Send HandlePossibleError
    GetBuff_String From sPEGraphTextInfo At PEGraphTextInfo.graphTitle To sReturn
    Function_Return (ToOEM(sReturn))
  End_Function // GraphTitle

  //Doc/ Type=Property Interface=Public
  Function GraphSubTitle Integer iSectionCode Integer iGraphN Returns String
    Integer iPrintJob iResult
    String sPEGraphTextInfo sReturn
    Pointer pPEGraphTextInfo
    Get PrintJob To iPrintJob
    FillType PEGraphTextInfo With 0 To sPEGraphTextInfo
    Put PEGraphTextInfo_Size To sPEGraphTextInfo At PEGraphTextInfo.StructSize
    GetAddress Of sPEGraphTextInfo To pPEGraphTextInfo
    Move (PEGetGraphText(iPrintJob,iSectionCode,iGraphN,pPEGraphTextInfo)) To iResult
    Send HandlePossibleError
    GetBuff_String From sPEGraphTextInfo At PEGraphTextInfo.graphSubTitle To sReturn
    Function_Return (ToOEM(sReturn))
  End_Function // GraphSubTitle

  //Doc/ Type=Property Interface=Public
  Function GraphFootNote Integer iSectionCode Integer iGraphN Returns String
    Integer iPrintJob iResult
    String sPEGraphTextInfo sReturn
    Pointer pPEGraphTextInfo
    Get PrintJob To iPrintJob
    FillType PEGraphTextInfo With 0 To sPEGraphTextInfo
    Put PEGraphTextInfo_Size To sPEGraphTextInfo At PEGraphTextInfo.StructSize
    GetAddress Of sPEGraphTextInfo To pPEGraphTextInfo
    Move (PEGetGraphText(iPrintJob,iSectionCode,iGraphN,pPEGraphTextInfo)) To iResult
    Send HandlePossibleError
    GetBuff_String From sPEGraphTextInfo At PEGraphTextInfo.graphFootNote To sReturn
    Function_Return (ToOEM(sReturn))
  End_Function // GraphFootNote

  //Doc/ Type=Property Interface=Public
  Function GraphGroupsTitle Integer iSectionCode Integer iGraphN Returns String
    Integer iPrintJob iResult
    String sPEGraphTextInfo sReturn
    Pointer pPEGraphTextInfo
    Get PrintJob To iPrintJob
    FillType PEGraphTextInfo With 0 To sPEGraphTextInfo
    Put PEGraphTextInfo_Size To sPEGraphTextInfo At PEGraphTextInfo.StructSize
    GetAddress Of sPEGraphTextInfo To pPEGraphTextInfo
    Move (PEGetGraphText(iPrintJob,iSectionCode,iGraphN,pPEGraphTextInfo)) To iResult
    Send HandlePossibleError
    GetBuff_String From sPEGraphTextInfo At PEGraphTextInfo.graphGroupsTitle To sReturn
    Function_Return (ToOEM(sReturn))
  End_Function // GraphGroupsTitle

  //Doc/ Type=Property Interface=Public
  Function GraphSeriesTitle Integer iSectionCode Integer iGraphN Returns String
    Integer iPrintJob iResult
    String sPEGraphTextInfo sReturn
    Pointer pPEGraphTextInfo
    Get PrintJob To iPrintJob
    FillType PEGraphTextInfo With 0 To sPEGraphTextInfo
    Put PEGraphTextInfo_Size To sPEGraphTextInfo At PEGraphTextInfo.StructSize
    GetAddress Of sPEGraphTextInfo To pPEGraphTextInfo
    Move (PEGetGraphText(iPrintJob,iSectionCode,iGraphN,pPEGraphTextInfo)) To iResult
    Send HandlePossibleError
    GetBuff_String From sPEGraphTextInfo At PEGraphTextInfo.graphSeriesTitle To sReturn
    Function_Return (ToOEM(sReturn))
  End_Function // GraphSeriesTitle

  //Doc/ Type=Property Interface=Public
  Function GraphXAxisTitle Integer iSectionCode Integer iGraphN Returns String
    Integer iPrintJob iResult
    String sPEGraphTextInfo sReturn
    Pointer pPEGraphTextInfo
    Get PrintJob To iPrintJob
    FillType PEGraphTextInfo With 0 To sPEGraphTextInfo
    Put PEGraphTextInfo_Size To sPEGraphTextInfo At PEGraphTextInfo.StructSize
    GetAddress Of sPEGraphTextInfo To pPEGraphTextInfo
    Move (PEGetGraphText(iPrintJob,iSectionCode,iGraphN,pPEGraphTextInfo)) To iResult
    Send HandlePossibleError
    GetBuff_String From sPEGraphTextInfo At PEGraphTextInfo.graphXAxisTitle To sReturn
    Function_Return (ToOEM(sReturn))
  End_Function // GraphXAxisTitle

  //Doc/ Type=Property Interface=Public
  Function GraphYAxisTitle Integer iSectionCode Integer iGraphN Returns String
    Integer iPrintJob iResult
    String sPEGraphTextInfo sReturn
    Pointer pPEGraphTextInfo
    Get PrintJob To iPrintJob
    FillType PEGraphTextInfo With 0 To sPEGraphTextInfo
    Put PEGraphTextInfo_Size To sPEGraphTextInfo At PEGraphTextInfo.StructSize
    GetAddress Of sPEGraphTextInfo To pPEGraphTextInfo
    Move (PEGetGraphText(iPrintJob,iSectionCode,iGraphN,pPEGraphTextInfo)) To iResult
    Send HandlePossibleError
    GetBuff_String From sPEGraphTextInfo At PEGraphTextInfo.graphYAxisTitle To sReturn
    Function_Return (ToOEM(sReturn))
  End_Function // GraphYAxisTitle

  //Doc/ Type=Property Interface=Public
  Function GraphZAxisTitle Integer iSectionCode Integer iGraphN Returns String
    Integer iPrintJob iResult
    String sPEGraphTextInfo sReturn
    Pointer pPEGraphTextInfo
    Get PrintJob To iPrintJob
    FillType PEGraphTextInfo With 0 To sPEGraphTextInfo
    Put PEGraphTextInfo_Size To sPEGraphTextInfo At PEGraphTextInfo.StructSize
    GetAddress Of sPEGraphTextInfo To pPEGraphTextInfo
    Move (PEGetGraphText(iPrintJob,iSectionCode,iGraphN,pPEGraphTextInfo)) To iResult
    Send HandlePossibleError
    GetBuff_String From sPEGraphTextInfo At PEGraphTextInfo.graphZAxisTitle To sReturn
    Function_Return (ToOEM(sReturn))
  End_Function // GraphZAxisTitle

  //Doc/ Type=Property Interface=Public
  Procedure Set GraphTitle Integer iSectionCode Integer iGraphN String sTitle
    Integer iPrintJob iResult
    String sPEGraphTextInfo
    Pointer pPEGraphTextInfo
    Get PrintJob To iPrintJob
    FillType PEGraphTextInfo With 0 To sPEGraphTextInfo
    Put PEGraphTextInfo_Size To sPEGraphTextInfo At PEGraphTextInfo.StructSize
    GetAddress Of sPEGraphTextInfo To pPEGraphTextInfo
    Move (PEGetGraphText(iPrintJob,iSectionCode,iGraphN,pPEGraphTextInfo)) To iResult
    Send HandlePossibleError
    Move (ToANSI(sTitle+Character(0))) To sTitle
    Put_String sTitle To sPEGraphTextInfo At PEGraphTextInfo.graphTitle
    GetAddress Of sPEGraphTextInfo To pPEGraphTextInfo
    Move (PESetGraphText(iPrintJob,iSectionCode,iGraphN,pPEGraphTextInfo)) To iResult
    Send HandlePossibleError
  End_Procedure // Set GraphTitle

  //Doc/ Type=Property Interface=Public
  Procedure Set GraphSubTitle Integer iSectionCode Integer iGraphN String sSubTitle
    Integer iPrintJob iResult
    String sPEGraphTextInfo
    Pointer pPEGraphTextInfo
    Get PrintJob To iPrintJob
    FillType PEGraphTextInfo With 0 To sPEGraphTextInfo
    Put PEGraphTextInfo_Size To sPEGraphTextInfo At PEGraphTextInfo.StructSize
    GetAddress Of sPEGraphTextInfo To pPEGraphTextInfo
    Move (PEGetGraphText(iPrintJob,iSectionCode,iGraphN,pPEGraphTextInfo)) To iResult
    Send HandlePossibleError
    Move (ToANSI(sSubTitle+Character(0))) To sSubTitle
    Put_String sSubTitle To sPEGraphTextInfo At PEGraphTextInfo.graphSubTitle
    GetAddress Of sPEGraphTextInfo To pPEGraphTextInfo
    Move (PESetGraphText(iPrintJob,iSectionCode,iGraphN,pPEGraphTextInfo)) To iResult
    Send HandlePossibleError
  End_Procedure // Set GraphSubTitle

  //Doc/ Type=Property Interface=Public
  Procedure Set GraphFootNote Integer iSectionCode Integer iGraphN String sFootNote
    Integer iPrintJob iResult
    String sPEGraphTextInfo
    Pointer pPEGraphTextInfo
    Get PrintJob To iPrintJob
    FillType PEGraphTextInfo With 0 To sPEGraphTextInfo
    Put PEGraphTextInfo_Size To sPEGraphTextInfo At PEGraphTextInfo.StructSize
    GetAddress Of sPEGraphTextInfo To pPEGraphTextInfo
    Move (PEGetGraphText(iPrintJob,iSectionCode,iGraphN,pPEGraphTextInfo)) To iResult
    Send HandlePossibleError
    Move (ToANSI(sFootNote+Character(0))) To sFootNote
    Put_String sFootNote To sPEGraphTextInfo At PEGraphTextInfo.graphFootNote
    GetAddress Of sPEGraphTextInfo To pPEGraphTextInfo
    Move (PESetGraphText(iPrintJob,iSectionCode,iGraphN,pPEGraphTextInfo)) To iResult
    Send HandlePossibleError
  End_Procedure // Set GraphFootNote

  //Doc/ Type=Property Interface=Public
  Procedure Set GraphGroupsTitle Integer iSectionCode Integer iGraphN String sGroupsTitle
    Integer iPrintJob iResult
    String sPEGraphTextInfo
    Pointer pPEGraphTextInfo
    Get PrintJob To iPrintJob
    FillType PEGraphTextInfo With 0 To sPEGraphTextInfo
    Put PEGraphTextInfo_Size To sPEGraphTextInfo At PEGraphTextInfo.StructSize
    GetAddress Of sPEGraphTextInfo To pPEGraphTextInfo
    Move (PEGetGraphText(iPrintJob,iSectionCode,iGraphN,pPEGraphTextInfo)) To iResult
    Send HandlePossibleError
    Move (ToANSI(sGroupsTitle+Character(0))) To sGroupsTitle
    Put_String sGroupsTitle To sPEGraphTextInfo At PEGraphTextInfo.graphGroupsTitle
    GetAddress Of sPEGraphTextInfo To pPEGraphTextInfo
    Move (PESetGraphText(iPrintJob,iSectionCode,iGraphN,pPEGraphTextInfo)) To iResult
    Send HandlePossibleError
  End_Procedure // Set GraphGroupsTitle

  //Doc/ Type=Property Interface=Public
  Procedure Set GraphSeriesTitle Integer iSectionCode Integer iGraphN String sSeriesTitle
    Integer iPrintJob iResult
    String sPEGraphTextInfo
    Pointer pPEGraphTextInfo
    Get PrintJob To iPrintJob
    FillType PEGraphTextInfo With 0 To sPEGraphTextInfo
    Put PEGraphTextInfo_Size To sPEGraphTextInfo At PEGraphTextInfo.StructSize
    GetAddress Of sPEGraphTextInfo To pPEGraphTextInfo
    Move (PEGetGraphText(iPrintJob,iSectionCode,iGraphN,pPEGraphTextInfo)) To iResult
    Send HandlePossibleError
    Move (ToANSI(sSeriesTitle+Character(0))) To sSeriesTitle
    Put_String sSeriesTitle To sPEGraphTextInfo At PEGraphTextInfo.graphSeriesTitle
    GetAddress Of sPEGraphTextInfo To pPEGraphTextInfo
    Move (PESetGraphText(iPrintJob,iSectionCode,iGraphN,pPEGraphTextInfo)) To iResult
    Send HandlePossibleError
  End_Procedure // Set GraphSeriesTitle

  //Doc/ Type=Property Interface=Public
  Procedure Set GraphXAxisTitle Integer iSectionCode Integer iGraphN String sXAxisTitle
    Integer iPrintJob iResult
    String sPEGraphTextInfo
    Pointer pPEGraphTextInfo
    Get PrintJob To iPrintJob
    FillType PEGraphTextInfo With 0 To sPEGraphTextInfo
    Put PEGraphTextInfo_Size To sPEGraphTextInfo At PEGraphTextInfo.StructSize
    GetAddress Of sPEGraphTextInfo To pPEGraphTextInfo
    Move (PEGetGraphText(iPrintJob,iSectionCode,iGraphN,pPEGraphTextInfo)) To iResult
    Send HandlePossibleError
    Move (ToANSI(sXAxisTitle+Character(0))) To sXAxisTitle
    Put_String sXAxisTitle To sPEGraphTextInfo At PEGraphTextInfo.graphXAxisTitle
    GetAddress Of sPEGraphTextInfo To pPEGraphTextInfo
    Move (PESetGraphText(iPrintJob,iSectionCode,iGraphN,pPEGraphTextInfo)) To iResult
    Send HandlePossibleError
  End_Procedure // Set GraphXAxisTitle

  //Doc/ Type=Property Interface=Public
  Procedure Set GraphYAxisTitle Integer iSectionCode Integer iGraphN String sYAxisTitle
    Integer iPrintJob iResult
    String sPEGraphTextInfo
    Pointer pPEGraphTextInfo
    Get PrintJob To iPrintJob
    FillType PEGraphTextInfo With 0 To sPEGraphTextInfo
    Put PEGraphTextInfo_Size To sPEGraphTextInfo At PEGraphTextInfo.StructSize
    GetAddress Of sPEGraphTextInfo To pPEGraphTextInfo
    Move (PEGetGraphText(iPrintJob,iSectionCode,iGraphN,pPEGraphTextInfo)) To iResult
    Send HandlePossibleError
    Move (ToANSI(sYAxisTitle+Character(0))) To sYAxisTitle
    Put_String sYAxisTitle To sPEGraphTextInfo At PEGraphTextInfo.graphYAxisTitle
    GetAddress Of sPEGraphTextInfo To pPEGraphTextInfo
    Move (PESetGraphText(iPrintJob,iSectionCode,iGraphN,pPEGraphTextInfo)) To iResult
    Send HandlePossibleError
  End_Procedure // Set GraphYAxisTitle

  //Doc/ Type=Property Interface=Public
  Procedure Set GraphZAxisTitle Integer iSectionCode Integer iGraphN String sZAxisTitle
    Integer iPrintJob iResult
    String sPEGraphTextInfo
    Pointer pPEGraphTextInfo
    Get PrintJob To iPrintJob
    FillType PEGraphTextInfo With 0 To sPEGraphTextInfo
    Put PEGraphTextInfo_Size To sPEGraphTextInfo At PEGraphTextInfo.StructSize
    GetAddress Of sPEGraphTextInfo To pPEGraphTextInfo
    Move (PEGetGraphText(iPrintJob,iSectionCode,iGraphN,pPEGraphTextInfo)) To iResult
    Send HandlePossibleError
    Move (ToANSI(sZAxisTitle+Character(0))) To sZAxisTitle
    Put_String sZAxisTitle To sPEGraphTextInfo At PEGraphTextInfo.graphZAxisTitle
    GetAddress Of sPEGraphTextInfo To pPEGraphTextInfo
    Move (PESetGraphText(iPrintJob,iSectionCode,iGraphN,pPEGraphTextInfo)) To iResult
    Send HandlePossibleError
  End_Procedure // Set GraphZAxisTitle

  //Doc/ Type=Property Interface=Public
  Function GraphType Integer iSectionCode Integer iGraphN Returns Integer
    Integer iPrintJob iResult
    String sPEInteger
    Pointer pPEInteger
    Get PrintJob To iPrintJob
    FillType PEInteger With 0 To sPEInteger
    GetAddress Of sPEInteger To pPEInteger
    Move (PEGetGraphType(iPrintJob,iSectionCode,iGraphN,pPEInteger)) To iResult
    Send HandlePossibleError
    GetBuff From sPEInteger At PEInteger.integer To iResult
    Function_Return iResult
  End_Function // GraphType

  //Doc/ Type=Property Interface=Public
  Procedure Set GraphType Integer iSectionCode Integer iGraphN Integer iGraphType
    Integer iPrintJob iResult
    String sPEInteger
    Pointer pPEInteger
    Get PrintJob To iPrintJob
    Move (Character(iGraphType)) To sPEInteger
    GetAddress Of sPEInteger To pPEInteger
    // It's weird but you must supply a pointer, if you supply an integer you'll get a GPF.
    Move (PESetGraphType(iPrintJob,iSectionCode,iGraphN,pPEInteger)) To iResult
    Send HandlePossibleError
  End_Procedure // Set GraphType

  // *********************************************************************** //
  // ** Stored Procedure Management Functions                             ** //
  // *********************************************************************** //

  //Doc/ Type=Property Interface=Public
  Function NParams Returns Integer
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    Move (PEGetNParams(iPrintJob)) To iResult
    Send HandlePossibleError
    Function_Return iResult
  End_Function // NParams

  //Doc/ Type=Property Interface=Public
  Function NthParam Integer iParamN Returns String
    Integer iPrintJob iResult iTextHandle iTextLength
    String sPETextStructure sReturn
    Pointer pPETextStructure pReturn
    Get PrintJob To iPrintJob
    FillType PETextStructure With 0 To sPETextStructure
    GetAddress Of sPETextStructure To pPETextStructure
    Move (PEGetNthParam(iPrintJob,iParamN,pPETextStructure,pPETextStructure+4)) To iResult
    Send HandlePossibleError
    GetBuff From sPETextStructure At PETextStructure.textHandle To iTextHandle
    GetBuff From sPETextStructure At PETextStructure.textLength To iTextLength
    If iTextLength Gt 255 Move 255 To iTextLength
    Move (Repeat(Character(0),255)) To sReturn
    GetAddress Of sReturn To pReturn
    Move (PEGetHandleString(iTextHandle,pReturn,iTextLength)) To iResult
    Send HandlePossibleError
    Function_Return (ToOEM(cString(sReturn)))
  End_Function // NthParam

  //Doc/ Type=Property Interface=Public
  Procedure Set NthParam Integer iParamN String sParamValue
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    Move (ToANSI(sParamValue+Character(0))) To sParamValue
    Move (PESetNthParam(iPrintJob,iParamN,sParamValue)) To iResult
    Send HandlePossibleError
  End_Procedure // Set NthParam

  // *********************************************************************** //
  // ** Error Management Functions                                        ** //
  // *********************************************************************** //

  //Doc/ Interface=Private
  Function ErrorCode Returns Integer
    Integer iPrintJob iResult
    Get PrintJob To iPrintJob
    // If the most recent function was called while no print job was open, use 0 for 'iPrintJob'.
    Move (PEGetErrorCode(iPrintJob)) To iResult
    // WinQL probably uses 16 bit integers internally, but sometimes returns garbage in the high
    // order bits. To avoid this problem we will only return the low order bits.
    Function_Return (Low(iResult))
  End_Function // ErrorCode

  //Doc/ Interface=Private
  Function ErrorText Returns String
    Pointer pPETextStructure pTextHandle pErrorText
    Integer iPrintJob iResult iTextLength
    String sPETextStructure sErrorText
    FillType PETextStructure With 0 To sPETextStructure
    GetAddress Of sPETextStructure To pPETextStructure
    Get PrintJob To iPrintJob
    // If the most recent function was called while no print job was open, use 0 for 'iPrintJob'.
    Move (PEGetErrorText(iPrintJob,pPETextStructure,pPETextStructure+4)) To iResult
    If Not iResult Error DFERR_CRYSTAL_REPORT C_$UnableToGetErrorText
    GetBuff From sPETextStructure At PETextStructure.textHandle To pTextHandle
    GetBuff From sPETextStructure At PETextStructure.textLength To iTextLength
    Move (Repeat(Character(0),iTextLength+1)) To sErrorText
    GetAddress Of sErrorText To pErrorText
    Move (PEGetHandleString(pTextHandle,pErrorText,iTextLength)) To iResult
    If Not iResult Error DFERR_CRYSTAL_REPORT C_$UnableToGetErrorText
    Function_Return (ToOEM(sErrorText))
  End_Function // ErrorText

  //Doc/ Interface=Private
  Procedure HandlePossibleError
    Integer iError iTrapped
    String sError
    Set FunctionGeneratedError_State To False
    Move (ErrorText(self)) To sError
    Move (ErrorCode(self)) To iError
    If iError Begin
      Get IsTrapped iError To iTrapped
      If iTrapped Error DFERR_CRYSTAL_REPORT sError
      Else Procedure_Return
      Set FunctionGeneratedError_State To True
    End // If iError Begin
  End_Procedure // HandlePossibleError

  // *********************************************************************** //
  // ** Normal Interface                                                  ** //
  // *********************************************************************** //

  //Doc/ Type=Property Interface=Public
  Function Output_Destination Returns Integer
    Integer iDestination iViewId
    Get Private.Output_Destination To iDestination
    If iDestination Eq PRINT_TO_UNDEFINED Begin
      Get Report_View_Id To iViewId
      If iViewId Get Output_Device_Mode Of iViewId To iDestination
      If iDestination Eq PRINT_TO_UNDEFINED Move CRW_PRINT_TO_WINDOW To iDestination
    End // If DevMode Eq PRINT_TO_UNDEFINED
    Function_Return iDestination
  End_Function // Output_Destination

  //Doc/ Type=Property Interface=Public
  Procedure Set Output_Destination Integer DevMode
    Set Private.Output_Destination To DevMode
  End_Procedure // Set Output_Destination

  //Doc/ Type=Property Interface=Private
  Function Output_Device_Mode Returns Integer
    Function_Return (Output_Destination(self))
  End_Function // Output_Destination

  //Doc/ Type=Property Interface=Public
  Function CurrentDataPath Returns string
    String RptFileDir
    integer iPos bExists
    // ----removed for VDX, uses application object
    //    Get System_Profile_String "ReportDir" To RptFileDir
    //    If (Trim(RptFileDir)="") Begin
    //      If (ghoApplication And psWorkspaceName(phoWorkspace(ghoApplication)) <>"") Begin
    //        Get psDataPath of (phoWorkspace(ghoApplication)) To RptFileDir
    //        Pos ";" In RptFileDir To iPos
    //        If iPos Move (Left(RptFileDir,iPos-1)) To RptFileDir
    //      End // If (ghoApplication And psWorkspaceName(phoWorkspace(ghoApplication) <>"") Begin

    //      Else If (ghoWorkSpace And CurrentWorkSpaceName(ghoWorkSpace)<>"") Begin
    //        Get CurrentDataPath Of ghoWorkSpace To RptFileDir
    //        Pos ";" In RptFileDir To iPos
    //        If iPos Move (Left(RptFileDir,iPos-1)) To RptFileDir
    //      End // If (ghoWorkSpace And CurrentWorkSpaceName(ghoWorkSpace)<>"") Begin
    //    End // If (Trim(RptFileDir)="") Begin

    If ghoApplication Begin
       Get ReadString of ghoApplication "" "ReportDir" "" To RptFileDir
       If (Trim(RptFileDir)="") Begin
           Get psDataPath of (phoWorkspace(ghoApplication)) To RptFileDir
           Pos ";" In RptFileDir To iPos
           If iPos Move (Left(RptFileDir,iPos-1)) To RptFileDir
      End // If (Trim(RptFileDir)="")
    End   // If ghoApplication Begin



    Function_Return RptFileDir
  End_Function // CurrentDataPath

  //Doc/ Interface=Public
  Function Full_Report_Name String RptName Returns String
    String RptFileDir
    Integer iPos

    //*** BW Added DirSep logic
    String DirSep
    Move (Sysconf(SYSCONF_DIR_SEPARATOR)) To DirSep
    //If ((RptName contains "\") Or (RptName Contains ":")) Function_Return RptName
    If ((RptName contains DirSep) Or (RptName Contains ":")) Function_Return RptName
    Get CurrentDataPath To RptFileDir
    //*** BW Changed to DirSep logic
    //If ((RptFileDir<>"") And (Right(RptFileDir,1)<>"\")) Move (RptFileDir-"\") To RptFileDir
    If ((RptFileDir<>"") And (Right(RptFileDir,1)<>DirSep)) Move (RptFileDir-DirSep) To RptFileDir
    Move (RptFileDir-RptName) To RptName
    Function_Return RptName
  End_Function // Full_Report_Name

  //Doc/ Type=Property Interface=Private
  Function Table_Count Returns Integer
    Function_Return (NTables(self))
  End_Function // Table_Count

  //Doc/ Type=Property Interface=Private Obsolete=True
  Function Table_Location Integer iTable Returns String
    Function_Return (NthTableLocation(self,iTable))
  End_Function // Table_Location

  //Doc/ Type=Property Interface=Private Obsolete=True
  Procedure Set Table_Location Integer iTable String sLocation
    Set NthTableLocation iTable To sLocation
  End_Procedure // Set Table_Location

  //Doc/ Interface=Private
  Procedure Show_Locations
    Integer iCount iMax
    String sLocation
    Get NTables To iMax
    Decrement iMax
    For iCount From 0 To iMax
      //*** BW, Changed to NThTableLoaction
      //Send PS_Info_Box ("Location of file"*string(iCount)*"is"*Table_Location(self,iCount))
      Send PS_Info_Box (SFormat(C_$LocationOfFile, iCount, NthTableLocation(self,iCount)))
    Loop // For iCount From 0 To iMax
  End_Procedure // Show_Locations

  //Doc/ Interface=Private
  Procedure Convert_Locations
    Integer iCount iMax
    String sLocation sPath

    //*** BW Add dirsep logic
    String DirSep
    Move (Sysconf(SYSCONF_DIR_SEPARATOR)) To DirSep

    //*** BW, Changed to NTables
    //Get Table_Count To iMax
    Get NTables To iMax
    Decrement iMax
    Get Report_Data_Path To sPath

    //*** BW Change to DirSep logic
    //If Not (Right(sPath,1)) Eq "\" Move (sPath-"\") To sPath
    If Not (Right(sPath,1)) Eq DirSep Move (sPath-DirSep) To sPath

    For iCount From 0 To iMax
      //*** BW Changed to NthTableLocation
      //Get Table_Location iCount To sLocation
      Get NthTableLocation iCount To sLocation
      Get Report_Base_File_Name sLocation To sLocation
      //*** BW Changed to NthTableLocation
      //Set Table_Location iCount To (sPath-sLocation)
      Set NthTableLocation iCount To (sPath-sLocation)
    Loop // For iCount From 0 To iMax
  End_Procedure // Convert_Locations

  //Doc/ Interface=Public
  Function Report_Base_File_Name String sIn Returns String
    Integer iLen iCnt

    //*** BW Added dirsep logic
    String DirSep
    Move (Sysconf(SYSCONF_DIR_SEPARATOR)) To DirSep

    Move (Length(sIn)) to iLen
    Move iLen to iCnt
    While iCnt Gt 0
      //*** BW Changed to DirSep logic
      //If (Mid(sIn,1,iCnt)) Eq "\" Function_Return (Right(sIn,iLen-iCnt))
      If (Mid(sIn,1,iCnt)) Eq DirSep Function_Return (Right(sIn,iLen-iCnt))
      Decrement iCnt
    End // While iCnt Gt 0
    Function_return sIn
  End_Function // Report_Base_File_Name

  //Doc/ Type=Property Interface=Public
  Procedure Set Selection_Formula String sFormula
    Set SelectionFormula To sFormula
  End_Procedure // Set Selection_Formula

  // **JJT**
  //Doc/ Interface=Public
  Procedure DoWinQLReport
    Integer iDestination iCopies iLeft iTop iWidth iHeight iStyle
    String sDataPath sTitle
    Handle hParent
    If Not (PrintJob(self)) Begin
      Error DFERR_CRYSTAL_REPORT C_$PrintJobNotOpened
      Procedure_Return
    End // If Not (PrintJob(self)) Begin
    Send OnStartPrinting
    Get Report_Data_Path To sDataPath
    If sDataPath Gt "" Send Convert_Locations
    Get Output_Destination To iDestination
    If ((HasSavedData(self)) And (DiscardSavedData_State(self))) Send DiscardSavedData
    If iDestination Eq CRW_PRINT_TO_WINDOW Begin
      Get WindowTitle To sTitle
      If sTitle Eq "" Get ReportTitle To sTitle
      Get WindowLeftCoordinate To iLeft
      Get WindowTopCoordinate To iTop
      Get WindowWidth To iWidth
      Get WindowHeight To iHeight
      Get WindowStyle To iStyle
      Get ParentWindowHandle To hParent
      Send OutputToWindow sTitle iLeft iTop iWidth iHeight iStyle hParent
    End // If iDestination Eq CRW_PRINT_TO_WINDOW
    Else If iDestination Eq CRW_PRINT_TO_PRINTER Begin
      Get Copies To iCopies
      Send OutputToPrinter iCopies
    End // If iDestination Eq CRW_PRINT_TO_PRINTER Begin
    Else If iDestination Eq CRW_PRINT_TO_FILE Send ExportToDisk
    Else If iDestination Eq CRW_PRINT_TO_MAPI Send ExportToMAPI
    Send OnStopPrinting
  End_Procedure // DoWinQLReport

  // ** UPS **
  //Doc/ Interface=Private Obsolete=True
  Procedure Print_Report String sReportName
    String sReport
    If Num_Arguments Ge 1 Move sReportName To sReport
    If sReport Eq "" Get Report_Name To sReport
    If sReport Ne "" Begin
      Send OpenReport sReport
      If (Not(PreviewWindow_Id(self))) Begin
        Send DoWinQLReport
        Send CloseReport
      End // If (Not(PreviewWindow_Id(self))) Begin
    End // If sReport Ne "" Begin
  End_Procedure // Print_Report

  // **JJT**
  //Doc/ Type=Event Interface=Public NoDoc=True
  Procedure Destroy_Object
    Send CloseReport        // close job if needed
    Send ClosePrintEngine   // close engine if needed
    Forward Send Destroy_Object
  End_Procedure // Destroy_Object

  //Doc/ Interface=Private Obsolete=True
  Procedure Calling_All_Reports Integer iObject Integer iMessage
    Integer iCurrentObject
    Move self To iCurrentObject
    Send iMessage To iObject iCurrentObject
  End_Procedure // Calling_All_Reports

  //Doc/ Interface=Private Obsolete=True
  Procedure Initialize_All_Reports Integer iObject Integer iMessage
    Set Report_View_Id To iObject
    Send Calling_All_Reports iObject iMessage
  End_Procedure // Initialize_All_Reports

  // **JJT**
  //Doc/ Interface=Public
  Procedure Run_Report String sReportName // Optional name can be passed
    Integer iObject iResult iDestination
    String sReport
    Handle hWindow
    If Num_Arguments Ge 1 Move sReportName To sReport
    If sReport Eq "" Get Report_Name To sReport
    If sReport Ne "" Begin
      // Added for ReportOutput... support
      If (PreviewWindow_Id(self)) Begin
        Get WinQLReport_Id Of (PreviewWindow_Id(self)) To iObject
        If (PrintJob(iObject)) Begin
          Get WindowHandle Of iObject To hWindow
          If hWindow Send CloseWindow To iObject
        End // If (PrintJob(self)) Begin
        Set WinQLReport_Id Of (PreviewWindow_Id(self)) To self
      End // If (PreviewWindow(self)) Begin
      // Default behaviour...
      Send OpenReport sReport
      Get Output_Destination To iDestination
      If ((Not(PreviewWindow_Id(self))) Or (iDestination Ne CRW_PRINT_TO_WINDOW)) Begin
        Send DoWinQLReport
        Send CloseReport
      End // If ((Not(PreviewWindow_Id(self))) Or (iDestination Ne CRW_PRINT_TO_WINDOW)) Begin
    End // If sReport Ne "" Begin
  End_Procedure // Run_Report

  // **JJT**
  //Doc/ Interface=Public
  Procedure OpenReport String sReportName // Optional name can be passed
    String sReport
    Integer iDestination
    Send OpenPrintEngine // this will only open if needed
    Send CloseReport // this will only close if job is open
    If Num_Arguments Ge 1 Move sReportName To sReport
    If sReport Eq "" Get Report_Name To sReport
    If sReport Ne "" Begin
      Get Full_Report_Name sReport To sReport
      Send OpenPrintJob sReport
      Send OnInitializeReport
      If (PreviewWindow_Id(self)) Begin
        Get Output_Destination To iDestination
        If iDestination Eq CRW_PRINT_TO_WINDOW ;
          Send ShowReport To (PreviewWindow_Id(self))
      End // If (PreviewWindow_Id(self)) Begin
    End // If sReport Ne "" Begin
  End_Procedure // OpenReport

  // **JJT**
  //Doc/ Interface=Public
  Procedure CloseReport
    If (PrintJob(self)) Begin
      Send OnDeInitializeReport
      Send ClosePrintJob
    End // If (PrintJob(self)) Begin
  End_Procedure // CloseReport

  // *********************************************************************** //
  // ** Advanced Interface                                                ** //
  // *********************************************************************** //

  // Alternative for 'Copies' property

  // *********************************************************************** //
  // ** Open close engine messages                                        ** //
  // *********************************************************************** //

  // **JJT**
  //Doc/ Interface=Public
  Procedure OpenPrintEngine
    // If this object already uses the engine no action is taken.
    If Not (UsesEngine(self)) Begin
      If WinQL_Report_Initialized Eq 0 Send OpenEngine
      Increment WinQL_Report_Initialized
      Set UsesEngine To True
    End // If Not (UsesEngine(self)) Begin
  End_Procedure // OpenPrintEngine

  // **JJT**
  //Doc/ Interface=Public
  Procedure ClosePrintEngine
    // If this object doensn't use the engine no action is taken.
    If (UsesEngine(self)) Begin
      Decrement WinQL_Report_Initialized
      If WinQL_Report_Initialized Eq 0 Send CloseEngine
      Set UsesEngine To False
    End // If (UsesEngine(self)) Begin
  End_Procedure // ClosePrintEngine

  //Doc/ Interface=Public
  Function CrystalString String sVal Returns String
    Function_Return ('"'+sVal+'"')
  End_Function // CrystalString

  //Doc/ Interface=Public
  Function CrystalInteger Integer iVal Returns String
    Function_Return (String(iVal))
  End_Function // CrystalInteger

  //Doc/ Interface=Public
  Function CrystalNumber Number nVal Returns String
    Function_Return (String(nVal))
  End_Function // CrystalNumber

  //Doc/ Interface=Public
  Function CrystalDate Date dVal Returns String
    Integer iYearLen iYearPos iMonthPos iDayPos iFormat
    String sVal
    Move (String(dVal)) To sVal
    If (Length(sVal)) Gt 8 Move 4 To iYearLen
    Else Move 2 To iYearLen
    Get_Date_Format To iFormat
    If iFormat Eq DF_DATE_MILITARY Begin
      Move 1 To iYearPos
      If iYearLen Eq 4 Begin
        Move 6 To iMonthPos
        Move 9 To iDayPos
      End // If iYearLen Eq 4 Begin
      Else Begin
        Move 4 To iMonthPos
        Move 7 To iDayPos
      End // Else Begin
    End // If iFormat Eq DF_DATE_MILITARY Begin
    Else Begin
      Move 7 To iYearPos
      If iFormat Eq DF_DATE_USA Begin
        Move 1 To iMonthPos
        Move 4 To iDayPos
      End // If iFormat Eq DF_DATE_USA Begin
      Else Begin
        Move 4 To iMonthPos
        Move 1 To iDayPos
      End // Else Begin
    End // Else Begin
    Function_Return ("Date" +" ("+Mid(sVal,iYearLen,iYearPos)+", "+Mid(sVal,2,iMonthPos)+", "+Mid(sVal,2,iDayPos)+")")
  End_Function // CrystalDate
End_Class // CrystalReport

Function WinQL_String GLOBAL String sVal Returns String
  Function_Return ('"'+sVal+'"')
End_Function // WinQL_String

Function WinQL_Integer GLOBAL  Integer iVal Returns String
  Function_Return (String(iVal))
End_Function // WinQL_Integer

Function WinQL_Number GLOBAL  Number nVal Returns String
  Function_Return (String(nVal))
End_Function // WinQL_Number

Function WinQL_Date  GLOBAL Date dVal Returns String
  Integer iYearLen iYearPos iMonthPos iDayPos iFormat
  String sVal
  Move (String(dVal)) To sVal
  If (Length(sVal)) Gt 8 Move 4 To iYearLen
  Else Move 2 To iYearLen
  Get_Date_Format To iFormat
  If iFormat Eq DF_DATE_MILITARY Begin
    Move 1 To iYearPos
    If iYearLen Eq 4 Begin
      Move 6 To iMonthPos
      Move 9 To iDayPos
    End // If iYearLen Eq 4 Begin
    Else Begin
      Move 4 To iMonthPos
      Move 7 To iDayPos
    End // Else Begin
  End // If iFormat Eq DF_DATE_MILITARY Begin
  Else Begin
    Move 7 To iYearPos
    If iFormat Eq DF_DATE_USA Begin
      Move 1 To iMonthPos
      Move 4 To iDayPos
    End // If iFormat Eq DF_DATE_USA Begin
    Else Begin
      Move 4 To iMonthPos
      Move 1 To iDayPos
    End // Else Begin
  End // Else Begin
  Function_Return ("Date ("+Mid(sVal,iYearLen,iYearPos)+", "+Mid(sVal,2,iMonthPos)+", "+Mid(sVal,2,iDayPos)+")")
End_Function // WinQL_Date

